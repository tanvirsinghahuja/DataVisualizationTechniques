<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.1112.1434                               -->
<workbook original-version='18.1' source-build='2021.3.4 (20213.21.1112.1434)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CustomReferenceLineTooltips />
    <Heatmap />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Cluster Numbers' datatype='real' name='[Parameter 1 1]' param-domain-type='range' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
        <range granularity='1.0' max='10.0' min='1.0' />
      </column>
      <column alias='KMeans' caption='Clustering Method' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <members />
      </column>
      <column alias='MiniBatchKmeans' caption='Clustering Alogorithm' datatype='integer' name='[Parameter 2 1]' param-domain-type='list' role='measure' type='quantitative' value='2'>
        <calculation class='tableau' formula='2' />
        <members />
      </column>
      <column caption='Number Clusters' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <range granularity='1' max='5' min='2' />
      </column>
    </datasource>
    <datasource caption='airbnb_final' inline='true' name='federated.113x8ik159y66w10tsm371rhe4fj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='airbnb_final' name='textscan.17vo78d040m4bx1bvsq4p0kbd04b'>
            <connection class='textscan' directory='/Users/daniyarkurmanbayev/Documents/GBC/DVT/Lab 2' filename='airbnb_final.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.17vo78d040m4bx1bvsq4p0kbd04b' name='airbnb_final.csv' table='[airbnb_final#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='Host Id' ordinal='0' />
            <column datatype='date' name='Host Since' ordinal='1' />
            <column datatype='string' name='Name' ordinal='2' />
            <column datatype='string' name='Neighbourhood' ordinal='3' />
            <column datatype='string' name='Property Type' ordinal='4' />
            <column datatype='integer' name='Review Scores Rating (bin)' ordinal='5' />
            <column datatype='string' name='Room Type' ordinal='6' />
            <column datatype='integer' name='Zipcode' ordinal='7' />
            <column datatype='integer' name='Beds' ordinal='8' />
            <column datatype='integer' name='Number Of Reviews' ordinal='9' />
            <column datatype='integer' name='Price' ordinal='10' />
            <column datatype='integer' name='Review Scores Rating' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.17vo78d040m4bx1bvsq4p0kbd04b' name='airbnb_final.csv' table='[airbnb_final#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='Host Id' ordinal='0' />
            <column datatype='date' name='Host Since' ordinal='1' />
            <column datatype='string' name='Name' ordinal='2' />
            <column datatype='string' name='Neighbourhood' ordinal='3' />
            <column datatype='string' name='Property Type' ordinal='4' />
            <column datatype='integer' name='Review Scores Rating (bin)' ordinal='5' />
            <column datatype='string' name='Room Type' ordinal='6' />
            <column datatype='integer' name='Zipcode' ordinal='7' />
            <column datatype='integer' name='Beds' ordinal='8' />
            <column datatype='integer' name='Number Of Reviews' ordinal='9' />
            <column datatype='integer' name='Price' ordinal='10' />
            <column datatype='integer' name='Review Scores Rating' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Host Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Host Id]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Host Id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_7F5A3C9DEAE448DDB462CB0CE3379909]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Host Since</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Host Since]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Host Since</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_7F5A3C9DEAE448DDB462CB0CE3379909]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_7F5A3C9DEAE448DDB462CB0CE3379909]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neighbourhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Neighbourhood]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Neighbourhood</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_7F5A3C9DEAE448DDB462CB0CE3379909]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Property Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Property Type]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Property Type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_7F5A3C9DEAE448DDB462CB0CE3379909]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Review Scores Rating (bin)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Review Scores Rating (bin)]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Review Scores Rating (bin)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_7F5A3C9DEAE448DDB462CB0CE3379909]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Room Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Room Type]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Room Type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_7F5A3C9DEAE448DDB462CB0CE3379909]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zipcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Zipcode]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Zipcode</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_7F5A3C9DEAE448DDB462CB0CE3379909]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Beds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Beds]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Beds</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_7F5A3C9DEAE448DDB462CB0CE3379909]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number Of Reviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number Of Reviews]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Number Of Reviews</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_7F5A3C9DEAE448DDB462CB0CE3379909]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Price]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Price</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_7F5A3C9DEAE448DDB462CB0CE3379909]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Review Scores Rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Review Scores Rating]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Review Scores Rating</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_7F5A3C9DEAE448DDB462CB0CE3379909]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='_Pearson Correlation 2' datatype='real' name='[Calculation_188447545577762823]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR(&#10;    { INCLUDE [Name] : AVG([Price]) },&#10;    { INCLUDE [Name] : AVG([Review Scores Rating]) }&#10;)' />
      </column>
      <column caption='_Pearson Correlation 1' datatype='real' name='[Calculation_96827440622538752]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import numpy as np&#10;&#10;mean1 = np.mean([val for val in _arg1 if val is not None])&#10;mean2 = np.mean([val for val in _arg2 if val is not None])&#10;&#10;_arg1 = [val if val is not None else mean1 for val in _arg1]&#10;_arg2 = [val if val is not None else mean2 for val in _arg2]&#10;&#10;corrs = np.corrcoef(_arg1, _arg2)[0, 1]&#10;return corrs&#10;&quot;,&#10;AVG([Price]), AVG([Review Scores Rating]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Host Id]' role='dimension' type='ordinal' />
      <column datatype='date' name='[Host Since]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Property Type]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='airbnb_final.csv' datatype='table' name='[__tableau_internal_object_id__].[airbnb_final.csv_7F5A3C9DEAE448DDB462CB0CE3379909]' role='measure' type='quantitative' />
      <column-instance column='[Property Type]' derivation='None' name='[none:Property Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Host Since]' derivation='Year' name='[yr:Host Since:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (Property Type,YEAR(Host Since))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Property Type:nk]' />
          <groupfilter function='level-members' level='[yr:Host Since:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Property Type1,YEAR(Host Since))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Property Type:nk]' />
          <groupfilter function='level-members' level='[yr:Host Since:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:Host Since:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2015</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2010</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2009</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2012</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2008</bucket>
            </map>
            <map to='#edc948'>
              <bucket>2011</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2014</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>2013</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Property Type:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;Cabin&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Camper/RV&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Condominium&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Apartment&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Townhouse&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Dorm&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Chalet&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Hut&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Loft&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Treehouse&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Boat&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Lighthouse&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Bed &amp; Breakfast&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Tent&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Bungalow&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Villa&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Castle&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;House&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='airbnb_final.csv' id='airbnb_final.csv_7F5A3C9DEAE448DDB462CB0CE3379909'>
            <properties context=''>
              <relation connection='textscan.17vo78d040m4bx1bvsq4p0kbd04b' name='airbnb_final.csv' table='[airbnb_final#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='Host Id' ordinal='0' />
                  <column datatype='date' name='Host Since' ordinal='1' />
                  <column datatype='string' name='Name' ordinal='2' />
                  <column datatype='string' name='Neighbourhood' ordinal='3' />
                  <column datatype='string' name='Property Type' ordinal='4' />
                  <column datatype='integer' name='Review Scores Rating (bin)' ordinal='5' />
                  <column datatype='string' name='Room Type' ordinal='6' />
                  <column datatype='integer' name='Zipcode' ordinal='7' />
                  <column datatype='integer' name='Beds' ordinal='8' />
                  <column datatype='integer' name='Number Of Reviews' ordinal='9' />
                  <column datatype='integer' name='Price' ordinal='10' />
                  <column datatype='integer' name='Review Scores Rating' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='airbnb_final (3)' inline='true' name='federated.113x8ik159y66w10tsm371rhe4fj (copy 2)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='airbnb_final' name='textscan.14jow0y10s9at31bre89111ebi0m (copy)'>
            <connection class='textscan' directory='/Users/daniyarkurmanbayev/Documents/GBC/DVT/Lab 4/Lab 4 Dan.twb Files/Data/data visualisation' filename='airbnb_final.csv' password='' server='' />
          </named-connection>
          <named-connection caption='airbnb_nratings_R' name='textscan.0aurzd51txp5961cqfzsh1oru64k (copy)'>
            <connection class='textscan' directory='/Users/daniyarkurmanbayev/Documents/GBC/DVT/Lab 4/Lab 4 Dan.twb Files/Data/data visualisation' filename='airbnb_nratings_R.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.14jow0y10s9at31bre89111ebi0m (copy)' name='airbnb_final.csv' table='[airbnb_final#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Host Id' ordinal='0' />
            <column datatype='date' name='Host Since' ordinal='1' />
            <column datatype='string' name='Name' ordinal='2' />
            <column datatype='string' name='Neighbourhood' ordinal='3' />
            <column datatype='string' name='Property Type' ordinal='4' />
            <column datatype='integer' name='Review Scores Rating (bin)' ordinal='5' />
            <column datatype='string' name='Room Type' ordinal='6' />
            <column datatype='integer' name='Zipcode' ordinal='7' />
            <column datatype='integer' name='Beds' ordinal='8' />
            <column datatype='integer' name='Number Of Reviews' ordinal='9' />
            <column datatype='integer' name='Price' ordinal='10' />
            <column datatype='integer' name='Review Scores Rating' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.14jow0y10s9at31bre89111ebi0m (copy)' name='airbnb_final.csv' table='[airbnb_final#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Host Id' ordinal='0' />
            <column datatype='date' name='Host Since' ordinal='1' />
            <column datatype='string' name='Name' ordinal='2' />
            <column datatype='string' name='Neighbourhood' ordinal='3' />
            <column datatype='string' name='Property Type' ordinal='4' />
            <column datatype='integer' name='Review Scores Rating (bin)' ordinal='5' />
            <column datatype='string' name='Room Type' ordinal='6' />
            <column datatype='integer' name='Zipcode' ordinal='7' />
            <column datatype='integer' name='Beds' ordinal='8' />
            <column datatype='integer' name='Number Of Reviews' ordinal='9' />
            <column datatype='integer' name='Price' ordinal='10' />
            <column datatype='integer' name='Review Scores Rating' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Host Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Host Id]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Host Id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_F131E8498D8B411DA743978913637A55]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Host Since</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Host Since]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Host Since</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_F131E8498D8B411DA743978913637A55]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_F131E8498D8B411DA743978913637A55]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neighbourhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Neighbourhood]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Neighbourhood</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_F131E8498D8B411DA743978913637A55]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Property Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Property Type]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Property Type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_F131E8498D8B411DA743978913637A55]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Review Scores Rating (bin)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Review Scores Rating (bin)]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Review Scores Rating (bin)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_F131E8498D8B411DA743978913637A55]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Room Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Room Type]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Room Type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_F131E8498D8B411DA743978913637A55]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zipcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Zipcode]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Zipcode</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_F131E8498D8B411DA743978913637A55]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Beds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Beds]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Beds</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_F131E8498D8B411DA743978913637A55]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number Of Reviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number Of Reviews]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Number Of Reviews</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_F131E8498D8B411DA743978913637A55]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Price]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Price</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_F131E8498D8B411DA743978913637A55]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Review Scores Rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Review Scores Rating]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Review Scores Rating</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_F131E8498D8B411DA743978913637A55]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[ctd:Name:qk]&quot;' value='Quantity' />
        </aliases>
      </column>
      <column caption='_cluster' datatype='integer' name='[Calculation_76139029705187328]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INT(SCRIPT_REAL(&quot;&#10;import numpy as np&#10;import numpy.ma as ma&#10;from sklearn.preprocessing import StandardScaler&#10;from sklearn.cluster import KMeans, AffinityPropagation, MiniBatchKMeans&#10;print(&apos;Start&apos;)&#10;sc= StandardScaler()&#10;&#10;avg_price = sc.fit_transform(np.array(_arg1).reshape(-1,1))&#10;med_review = sc.fit_transform(np.array(_arg2).reshape(-1,1))&#10;med_beds = sc.fit_transform(np.array(_arg3).reshape(-1,1))&#10;sum_review = sc.fit_transform(np.array(_arg4).reshape(-1,1))&#10;n_cl = _arg5[0]&#10;&#10;X_comb = np.column_stack([avg_price, med_review, med_beds, sum_review])&#10;X = np.where(np.isnan(X_comb), ma.array(X_comb, mask=np.isnan(X_comb)).mean(axis=0), X_comb)&#10;result = []&#10;if _arg6[0]==1:&#10;    kmeans = KMeans(n_clusters = n_cl, random_state=134)&#10;    result = kmeans.fit_predict(X).tolist()&#10;elif _arg6[0]==2:&#10;    minib = MiniBatchKMeans(n_clusters = n_cl, random_state=134)&#10;    result =  minib.fit_predict(X).tolist()&#10;else:&#10;    aff = AffinityPropagation().fit(X)&#10;    result = aff.predict(X).tolist()&#10;return result&#10;&quot;,&#10;AVG([Price]),&#10;MEDIAN([Review Scores Rating]),&#10;MEDIAN([Beds]),&#10;sum([Number Of Reviews]),&#10;[Parameters].[Parameter 2],&#10;[Parameters].[Parameter 1]&#10;))'>
          <table-calc ordering-field='[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[Zipcode]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='_difference _PRICE' datatype='real' name='[Calculation_804666637989130240 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Price]) - LOOKUP(ZN(AVG([Price])), -1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_difference' datatype='integer' name='[Calculation_804666637989130240]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Host Id]) - LOOKUP(ZN(COUNTD([Host Id])), -1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_diff%_PRICE' datatype='real' name='[Calculation_804666637989806081]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF(AVG([Price]) - LOOKUP(ZN(AVG([Price])), -1))&gt;0 THEN&#10;(AVG([Price]) - LOOKUP(ZN(AVG([Price])), -1)) / LOOKUP(ZN(AVG([Price])), -1)&#10;ELSE&#10;(COUNTD ([Host Id]) - LOOKUP(ZN(AVG([Price])), -1)) / AVG([Price])&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_color' datatype='string' name='[Calculation_804666637991141378]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_804666637989806081]&lt;0 AND [Calculation_804666637989806081] &gt;-1 THEN &quot;NEGATIVE&quot;&#10;ELSEIF [Calculation_804666637989806081] &gt;=.30 THEN &quot;OVER 30%&quot;&#10;ELSEIF [Calculation_804666637989806081]&gt;=0 AND [Calculation_804666637989806081] &lt;.15 THEN &quot;0-15%&quot;&#10;ELSEIF [Calculation_804666637989806081]&gt;=.15 AND [Calculation_804666637989806081] &lt;.30 THEN &quot;15-30%&quot;&#10;ELSE Null&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_DIFF+' datatype='string' name='[Calculation_804666637993172995]' role='measure' type='nominal'>
        <calculation class='tableau' formula='If [Calculation_804666637989806081] &gt; 0&#10;THEN &quot;▲&quot;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_DIFF-' datatype='string' name='[Calculation_804666637993263108]' role='measure' type='nominal'>
        <calculation class='tableau' formula='If [Calculation_804666637989806081] &lt; 0&#10;THEN &quot;▼&quot;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_DIFF0' datatype='string' name='[Calculation_804666637993463813]' role='measure' type='nominal'>
        <calculation class='tableau' formula='If [Calculation_804666637989806081] = 0&#10;THEN &quot;▲▼&quot;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_FIRST' datatype='boolean' name='[Calculation_804666637996351494]' role='measure' type='nominal'>
        <calculation class='tableau' formula='FIRST()=0'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_LAST' datatype='boolean' name='[Calculation_804666637996412935]' role='measure' type='nominal'>
        <calculation class='tableau' formula='LAST()=0'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Host Id]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Name]' role='dimension' type='nominal' />
      <column caption='Area in New York' datatype='string' name='[Neighbourhood]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number Of Reviews]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Price (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='1' formula='[Price]' peg='0' size='50' />
      </column>
      <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Review Scores Rating]' role='measure' type='quantitative' />
      <column datatype='string' name='[Room Type]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='airbnb_final.csv' datatype='table' name='[__tableau_internal_object_id__].[airbnb_final.csv_F131E8498D8B411DA743978913637A55]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[airbnb_final.csv_F131E8498D8B411DA743978913637A55]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:airbnb_final.csv_F131E8498D8B411DA743978913637A55:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='Attribute' name='[attr:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='Count' name='[cnt:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Name]' derivation='CountD' name='[ctd:Name:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='CountD' name='[ctd:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Top 100 hosts based on number of reviews]' derivation='InOut' name='[io:Top 100 hosts based on number of reviews:nk]' pivot='key' type='nominal' />
      <column-instance column='[Top 100 hosts based on review rating]' derivation='InOut' name='[io:Top 100 hosts based on review rating:nk]' pivot='key' type='nominal' />
      <column-instance column='[Price]' derivation='Median' name='[med:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Host Id]' derivation='None' name='[none:Host Id:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Neighbourhood]' derivation='None' name='[none:Neighbourhood:nk]' pivot='key' type='nominal' />
      <column-instance column='[Price (bin)]' derivation='None' name='[none:Price (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Price]' derivation='None' name='[none:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Room Type]' derivation='None' name='[none:Room Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Price]' derivation='Count' name='[pcdf:cnt:Price:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance aggregation-param='95' column='[Price]' derivation='Percentile' name='[prc95:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='StdevP' name='[stp:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
      <group caption='Top 100 hosts based on number of reviews' name='[Top 100 hosts based on number of reviews]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='100' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Number Of Reviews])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[none:Host Id:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Top 100 hosts based on review rating' name='[Top 100 hosts based on review rating]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='100' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Review Scores Rating])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[none:Host Id:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.899408' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.100592' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[__tableau_internal_object_id__].[cnt:airbnb_final.csv_F131E8498D8B411DA743978913637A55:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[attr:Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[avg:Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[cnt:Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[ctd:Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[med:Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[none:Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[pcdf:cnt:Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[prc95:Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[stp:Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[sum:Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[usr:Calculation_804666638035107848:nk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Room Type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Entire home/apt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shared room&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Private room&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Price (bin):ok]' type='palette'>
            <map to='#2a5783'>
              <bucket>200</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>160</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>130</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>119</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>100</bucket>
            </map>
            <map to='#34618e'>
              <bucket>95</bucket>
            </map>
            <map to='#376491'>
              <bucket>90</bucket>
            </map>
            <map to='#386693'>
              <bucket>80</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>75</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>70</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>67</bucket>
            </map>
            <map to='#406e9b'>
              <bucket>64</bucket>
            </map>
            <map to='#42709e'>
              <bucket>62</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>60</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>55</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>53</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>51</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>50</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>49</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>45</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>40</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>39</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>38</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>37</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>36</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>35</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>34</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>33</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>32</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>31</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>30</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>29</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>28</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>27</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>26</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>25</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>24</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>23</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>22</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>21</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>20</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>19</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>18</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>17</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>16</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>15</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>14</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>13</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>12</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>11</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>10</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>9</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>8</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>7</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>6</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>5</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>4</bucket>
            </map>
            <map to='#e03531'>
              <bucket>1</bucket>
            </map>
            <map to='#e39802'>
              <bucket>2</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>0</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>3</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Host Id:ok]' type='palette'>
            <map to='#499894'>
              <bucket>380138</bucket>
            </map>
            <map to='#499894'>
              <bucket>384796</bucket>
            </map>
            <map to='#499894'>
              <bucket>480943</bucket>
            </map>
            <map to='#499894'>
              <bucket>2674592</bucket>
            </map>
            <map to='#499894'>
              <bucket>19331457</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>8178</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>86091</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>170510</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>4734398</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>14942455</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>32169</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>181376</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>282614</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>394772</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1148395</bucket>
            </map>
            <map to='#79706e'>
              <bucket>102310</bucket>
            </map>
            <map to='#79706e'>
              <bucket>256161</bucket>
            </map>
            <map to='#79706e'>
              <bucket>970385</bucket>
            </map>
            <map to='#79706e'>
              <bucket>1097545</bucket>
            </map>
            <map to='#79706e'>
              <bucket>5166070</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>78127</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>251176</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>607632</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2675843</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>19354588</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>5926</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>209460</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>453519</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>598895</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>2822245</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>42273</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>4087416</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>8872284</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>9922972</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>14061862</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>8967</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>11481</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>254913</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1230560</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2680820</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>81602</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>303939</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>3339701</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>6430044</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>17479646</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>220001</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>1204785</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>1417227</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>2538621</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>2675644</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>322641</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>627217</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>1366310</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>3635728</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>8261331</bucket>
            </map>
            <map to='#d37295'>
              <bucket>242506</bucket>
            </map>
            <map to='#d37295'>
              <bucket>292204</bucket>
            </map>
            <map to='#d37295'>
              <bucket>2687671</bucket>
            </map>
            <map to='#d37295'>
              <bucket>5006781</bucket>
            </map>
            <map to='#d37295'>
              <bucket>5749240</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>9744</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>565905</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>2948223</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>6008257</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>6885157</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>32330</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>59734</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>1679409</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>7452455</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>15718962</bucket>
            </map>
            <map to='#e15759'>
              <bucket>27848</bucket>
            </map>
            <map to='#e15759'>
              <bucket>116382</bucket>
            </map>
            <map to='#e15759'>
              <bucket>277379</bucket>
            </map>
            <map to='#e15759'>
              <bucket>417504</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2777672</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>32294</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>46978</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>55298</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>137814</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>873273</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>42756</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>61414</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>169683</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2015914</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2161129</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10889</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>314582</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>1354796</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>2267153</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>14951748</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>7549</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>72062</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>118971</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>306739</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>3072504</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>29762</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>33279</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>264514</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>462776</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>4313868</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Top 100 hosts based on number of reviews:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#e15759'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Top 100 hosts based on number of reviews]' type='palette'>
            <map to='#499894'>
              <bucket>(27848)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(170510)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(453519)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(2538621)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(6885157)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(78127)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(303939)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(1230560)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(4087416)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(8967)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(116382)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(380138)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(1679409)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(5166070)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(32294)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(242506)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(598895)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(2680820)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(9922972)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(29762)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(181376)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(462776)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(2674592)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(7452455)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(9744)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(118971)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(384796)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(2015914)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(5749240)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(55298)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(61414)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(282614)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(1148395)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(3339701)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(19331457)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(5926)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(81602)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(306739)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(1354796)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(4313868)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(42756)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(264514)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(970385)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(2948223)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(15718962)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(10889)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(137814)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(394772)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(2161129)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(6008257)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(32330)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(251176)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(607632)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(2687671)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(14061862)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(33279)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(254913)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(627217)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(2777672)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(14942455)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(46978)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(277379)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(1097545)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(3072504)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(17479646)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(59734)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(72062)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(292204)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(1204785)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(3635728)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(19354588)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(209460)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(480943)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(2675644)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(8261331)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(11481)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(169683)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(417504)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(2267153)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(6430044)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(7549)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(86091)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(314582)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(1366310)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(4734398)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(42273)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(256161)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(873273)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(2822245)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(14951748)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(32169)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(220001)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(565905)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(2675843)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(8872284)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(8178)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(102310)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(322641)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(1417227)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(5006781)</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Top 100 hosts based on review rating:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#e15759'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Top 100 hosts based on review rating]' type='palette'>
            <map to='#499894'>
              <bucket>(72062)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(2487613)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(5855145)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(15423843)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(25843005)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(1354796)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(4291007)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(9522524)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(23582893)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(29762)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(1911420)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(5166070)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(10877850)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(24099263)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(256161)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(3038687)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(6885157)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(17384869)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(32277716)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(109457)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(2675644)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(5912445)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(16126316)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(28257071)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(33279)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(2015914)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(5238263)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(12122046)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(24751294)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(972866)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(1177497)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(4014688)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(8775389)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(22547910)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(38123545)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(5926)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(1411399)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(4313868)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(9922972)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(23823950)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(417504)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(3625735)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(7831209)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(21022694)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(35987043)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(59172)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(2120259)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(5541374)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(14061862)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(24762401)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(311286)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(3250450)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(7291745)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(18397763)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(35524316)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(322716)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(3339701)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(7365834)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(19354588)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(35606248)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(592967)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(3968794)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(8288419)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(21382866)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(36944776)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(1100494)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(1217923)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(4087416)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(9113389)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(23188519)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(39528519)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(2675843)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(6079166)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(16551493)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(31526222)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(59777)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(2156913)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(5853457)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(14339935)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(25237492)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(22486)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(1559494)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(4887492)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(10384906)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(23878336)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(384796)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(3388950)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(7452455)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(20780082)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(35927005)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(216191)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(2834182)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(6874740)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(16621164)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(32064442)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(27848)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(1789655)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(5006781)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(10641598)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(24090806)</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Room Type:nk]' type='shape'>
            <map to='circle'>
              <bucket>&quot;Entire home/apt&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Shared room&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Private room&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Neighbourhood:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Bronx&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Staten Island&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Queens&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brooklyn&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='KMeans' caption='Clustering Method' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
          <calculation class='tableau' formula='1' />
        </column>
        <column caption='Number Clusters' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
          <range granularity='1' max='5' min='2' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='airbnb_final.csv' id='airbnb_final.csv_F131E8498D8B411DA743978913637A55'>
            <properties context=''>
              <relation connection='textscan.14jow0y10s9at31bre89111ebi0m (copy)' name='airbnb_final.csv' table='[airbnb_final#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='Host Id' ordinal='0' />
                  <column datatype='date' name='Host Since' ordinal='1' />
                  <column datatype='string' name='Name' ordinal='2' />
                  <column datatype='string' name='Neighbourhood' ordinal='3' />
                  <column datatype='string' name='Property Type' ordinal='4' />
                  <column datatype='integer' name='Review Scores Rating (bin)' ordinal='5' />
                  <column datatype='string' name='Room Type' ordinal='6' />
                  <column datatype='integer' name='Zipcode' ordinal='7' />
                  <column datatype='integer' name='Beds' ordinal='8' />
                  <column datatype='integer' name='Number Of Reviews' ordinal='9' />
                  <column datatype='integer' name='Price' ordinal='10' />
                  <column datatype='integer' name='Review Scores Rating' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='airbnb_final (4)' inline='true' name='federated.113x8ik159y66w10tsm371rhe4fj (copy 3)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='airbnb_final' name='textscan.0qsduja1539z7n11qmkr514y6muh'>
            <connection class='textscan' directory='/Users/vrinda/Desktop/AI_course/Data Visualization/lab exercises/lab 2' filename='airbnb_final.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0qsduja1539z7n11qmkr514y6muh' name='airbnb_final.csv' table='[airbnb_final#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Host Id' ordinal='0' />
            <column datatype='date' name='Host Since' ordinal='1' />
            <column datatype='string' name='Name' ordinal='2' />
            <column datatype='string' name='Neighbourhood' ordinal='3' />
            <column datatype='string' name='Property Type' ordinal='4' />
            <column datatype='integer' name='Review Scores Rating (bin)' ordinal='5' />
            <column datatype='string' name='Room Type' ordinal='6' />
            <column datatype='integer' name='Zipcode' ordinal='7' />
            <column datatype='integer' name='Beds' ordinal='8' />
            <column datatype='integer' name='Number Of Reviews' ordinal='9' />
            <column datatype='integer' name='Price' ordinal='10' />
            <column datatype='integer' name='Review Scores Rating' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0qsduja1539z7n11qmkr514y6muh' name='airbnb_final.csv' table='[airbnb_final#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Host Id' ordinal='0' />
            <column datatype='date' name='Host Since' ordinal='1' />
            <column datatype='string' name='Name' ordinal='2' />
            <column datatype='string' name='Neighbourhood' ordinal='3' />
            <column datatype='string' name='Property Type' ordinal='4' />
            <column datatype='integer' name='Review Scores Rating (bin)' ordinal='5' />
            <column datatype='string' name='Room Type' ordinal='6' />
            <column datatype='integer' name='Zipcode' ordinal='7' />
            <column datatype='integer' name='Beds' ordinal='8' />
            <column datatype='integer' name='Number Of Reviews' ordinal='9' />
            <column datatype='integer' name='Price' ordinal='10' />
            <column datatype='integer' name='Review Scores Rating' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Host Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Host Id]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Host Id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Host Since</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Host Since]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Host Since</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neighbourhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Neighbourhood]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Neighbourhood</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Property Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Property Type]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Property Type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Review Scores Rating (bin)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Review Scores Rating (bin)]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Review Scores Rating (bin)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Room Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Room Type]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Room Type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zipcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Zipcode]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Zipcode</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Beds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Beds]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Beds</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number Of Reviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number Of Reviews]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Number Of Reviews</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Price]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Price</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Review Scores Rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Review Scores Rating]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Review Scores Rating</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Beds]' role='measure' type='quantitative' />
      <column caption='pearson correlation avg price and beds' datatype='real' name='[Calculation_123708300790829056]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;import numpy as np&#10;return np.corrcoef(_arg1,_arg2)[0,1]&quot;,&#10;AVG([Price]),AVG([Beds]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Host Id]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Neighbourhood]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number Of Reviews]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
      <column datatype='string' name='[Property Type]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='airbnb_final.csv' datatype='table' name='[__tableau_internal_object_id__].[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]' role='measure' type='quantitative' />
      <column caption='pearson correlation price and reviews' datatype='real' name='[pearson correlation (copy)_123708300934279173]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;import numpy as np&#10;return np.corrcoef(_arg1,_arg2)[0,1]&quot;,&#10;SUM([Price]),sum([Number Of Reviews]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='pearson correlation price and review score rating' datatype='real' name='[pearson correlation price and reviews (copy)_123708300938661894]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;import numpy as np&#10;return np.corrcoef(_arg1,_arg2)[0,1]&quot;,&#10;SUM([Price]),sum([Number Of Reviews]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column-instance column='[Beds]' derivation='Avg' name='[avg:Beds:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Beds]' derivation='Sum' name='[sum:Beds:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number Of Reviews]' derivation='Sum' name='[sum:Number Of Reviews:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_123708300790829056]' derivation='User' name='[usr:Calculation_123708300790829056:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation_123708300790829056]' derivation='User' name='[usr:Calculation_123708300790829056:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.113x8ik159y66w10tsm371rhe4fj (copy 3)].[Neighbourhood]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_123708300790829056]' derivation='User' name='[usr:Calculation_123708300790829056:qk:7]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.113x8ik159y66w10tsm371rhe4fj (copy 3)].[Property Type]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_123708300790829056]' derivation='User' name='[usr:Calculation_123708300790829056:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/daniyarkurmanbayev/Documents/GBC/DVT/Lab 4/Lab 4 Dan.twb Files/Data/Data Visualization/airbnb_final copy 1.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='12/11/2021 03:37:43 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='airbnb_final' increment-value='%null%' refresh-type='create' rows-inserted='30337' timestamp-start='2021-12-11 15:37:42.971' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Host Id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Host Id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Host Id</remote-alias>
              <ordinal>0</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14066</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Host Since</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Host Since]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Host Since</remote-alias>
              <ordinal>1</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>3401</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Name</remote-alias>
              <ordinal>2</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>28878</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Neighbourhood</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Neighbourhood]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Neighbourhood</remote-alias>
              <ordinal>3</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Property Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Property Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Property Type</remote-alias>
              <ordinal>4</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Review Scores Rating (bin)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Review Scores Rating (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Review Scores Rating (bin)</remote-alias>
              <ordinal>5</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Room Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Room Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Room Type</remote-alias>
              <ordinal>6</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Zipcode</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Zipcode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Zipcode</remote-alias>
              <ordinal>7</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>269</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Beds</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Beds]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Beds</remote-alias>
              <ordinal>8</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number Of Reviews</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Number Of Reviews]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number Of Reviews</remote-alias>
              <ordinal>9</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>211</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Price</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Price</remote-alias>
              <ordinal>10</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>590</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Review Scores Rating</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Review Scores Rating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Review Scores Rating</remote-alias>
              <ordinal>11</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>86</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 3)].[sum:Number Of Reviews:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 3)].[avg:Beds:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 3)].[sum:Beds:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 3)].[usr:Calculation_123708300790829056:qk:5]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 3)].[usr:Calculation_123708300790829056:qk:6]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 3)].[usr:Calculation_123708300790829056:qk:7]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 3)].[usr:Calculation_123708300790829056:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 3)].[avg:Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 3)].[sum:Price:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='airbnb_final.csv' id='airbnb_final.csv_C3734B04636745DE8AE066741FF79D75'>
            <properties context=''>
              <relation connection='textscan.0qsduja1539z7n11qmkr514y6muh' name='airbnb_final.csv' table='[airbnb_final#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='Host Id' ordinal='0' />
                  <column datatype='date' name='Host Since' ordinal='1' />
                  <column datatype='string' name='Name' ordinal='2' />
                  <column datatype='string' name='Neighbourhood' ordinal='3' />
                  <column datatype='string' name='Property Type' ordinal='4' />
                  <column datatype='integer' name='Review Scores Rating (bin)' ordinal='5' />
                  <column datatype='string' name='Room Type' ordinal='6' />
                  <column datatype='integer' name='Zipcode' ordinal='7' />
                  <column datatype='integer' name='Beds' ordinal='8' />
                  <column datatype='integer' name='Number Of Reviews' ordinal='9' />
                  <column datatype='integer' name='Price' ordinal='10' />
                  <column datatype='integer' name='Review Scores Rating' ordinal='11' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='airbnb_final (2)' inline='true' name='federated.113x8ik159y66w10tsm371rhe4fj (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='airbnb_final' name='textscan.14jow0y10s9at31bre89111ebi0m'>
            <connection class='textscan' directory='/Users/daniyarkurmanbayev/Documents/GBC/DVT/Lab 4/Lab 4 Dan.twb Files/Data/data visualisation' filename='airbnb_final.csv' password='' server='' />
          </named-connection>
          <named-connection caption='airbnb_nratings_R' name='textscan.0aurzd51txp5961cqfzsh1oru64k'>
            <connection class='textscan' directory='/Users/daniyarkurmanbayev/Documents/GBC/DVT/Lab 4/Lab 4 Dan.twb Files/Data/data visualisation' filename='airbnb_nratings_R.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.14jow0y10s9at31bre89111ebi0m' name='airbnb_final.csv' table='[airbnb_final#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Host Id' ordinal='0' />
            <column datatype='date' name='Host Since' ordinal='1' />
            <column datatype='string' name='Name' ordinal='2' />
            <column datatype='string' name='Neighbourhood' ordinal='3' />
            <column datatype='string' name='Property Type' ordinal='4' />
            <column datatype='integer' name='Review Scores Rating (bin)' ordinal='5' />
            <column datatype='string' name='Room Type' ordinal='6' />
            <column datatype='integer' name='Zipcode' ordinal='7' />
            <column datatype='integer' name='Beds' ordinal='8' />
            <column datatype='integer' name='Number Of Reviews' ordinal='9' />
            <column datatype='integer' name='Price' ordinal='10' />
            <column datatype='integer' name='Review Scores Rating' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.14jow0y10s9at31bre89111ebi0m' name='airbnb_final.csv' table='[airbnb_final#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Host Id' ordinal='0' />
            <column datatype='date' name='Host Since' ordinal='1' />
            <column datatype='string' name='Name' ordinal='2' />
            <column datatype='string' name='Neighbourhood' ordinal='3' />
            <column datatype='string' name='Property Type' ordinal='4' />
            <column datatype='integer' name='Review Scores Rating (bin)' ordinal='5' />
            <column datatype='string' name='Room Type' ordinal='6' />
            <column datatype='integer' name='Zipcode' ordinal='7' />
            <column datatype='integer' name='Beds' ordinal='8' />
            <column datatype='integer' name='Number Of Reviews' ordinal='9' />
            <column datatype='integer' name='Price' ordinal='10' />
            <column datatype='integer' name='Review Scores Rating' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Host Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Host Id]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Host Id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Host Since</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Host Since]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Host Since</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neighbourhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Neighbourhood]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Neighbourhood</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Property Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Property Type]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Property Type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Review Scores Rating (bin)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Review Scores Rating (bin)]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Review Scores Rating (bin)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Room Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Room Type]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Room Type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zipcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Zipcode]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Zipcode</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Beds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Beds]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Beds</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number Of Reviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number Of Reviews]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Number Of Reviews</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Price]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Price</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Review Scores Rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Review Scores Rating]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Review Scores Rating</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[ctd:Name:qk]&quot;' value='Quantity' />
        </aliases>
      </column>
      <column caption='_cluster' datatype='integer' name='[Calculation_76139029705187328]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INT(SCRIPT_REAL(&quot;&#10;import numpy as np&#10;import numpy.ma as ma&#10;from sklearn.preprocessing import StandardScaler&#10;from sklearn.cluster import KMeans, AffinityPropagation, MiniBatchKMeans&#10;print(&apos;Start&apos;)&#10;sc= StandardScaler()&#10;&#10;avg_price = sc.fit_transform(np.array(_arg1).reshape(-1,1))&#10;med_review = sc.fit_transform(np.array(_arg2).reshape(-1,1))&#10;med_beds = sc.fit_transform(np.array(_arg3).reshape(-1,1))&#10;sum_review = sc.fit_transform(np.array(_arg4).reshape(-1,1))&#10;n_cl = _arg5[0]&#10;&#10;X_comb = np.column_stack([avg_price, med_review, med_beds, sum_review])&#10;X = np.where(np.isnan(X_comb), ma.array(X_comb, mask=np.isnan(X_comb)).mean(axis=0), X_comb)&#10;result = []&#10;if _arg6[0]==1:&#10;    kmeans = KMeans(n_clusters = n_cl, random_state=134)&#10;    result = kmeans.fit_predict(X).tolist()&#10;elif _arg6[0]==2:&#10;    minib = MiniBatchKMeans(n_clusters = n_cl, random_state=134)&#10;    result =  minib.fit_predict(X).tolist()&#10;else:&#10;    aff = AffinityPropagation().fit(X)&#10;    result = aff.predict(X).tolist()&#10;return result&#10;&quot;,&#10;AVG([Price]),&#10;MEDIAN([Review Scores Rating]),&#10;MEDIAN([Beds]),&#10;sum([Number Of Reviews]),&#10;[Parameters].[Parameter 2],&#10;[Parameters].[Parameter 1]&#10;))'>
          <table-calc ordering-field='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[Zipcode]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='_difference _PRICE' datatype='real' name='[Calculation_804666637989130240 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Price]) - LOOKUP(ZN(AVG([Price])), -1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_difference' datatype='integer' name='[Calculation_804666637989130240]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Host Id]) - LOOKUP(ZN(COUNTD([Host Id])), -1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_diff%_PRICE' datatype='real' name='[Calculation_804666637989806081]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF(AVG([Price]) - LOOKUP(ZN(AVG([Price])), -1))&gt;0 THEN&#10;(AVG([Price]) - LOOKUP(ZN(AVG([Price])), -1)) / LOOKUP(ZN(AVG([Price])), -1)&#10;ELSE&#10;(COUNTD ([Host Id]) - LOOKUP(ZN(AVG([Price])), -1)) / AVG([Price])&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_color' datatype='string' name='[Calculation_804666637991141378]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_804666637989806081]&lt;0 AND [Calculation_804666637989806081] &gt;-1 THEN &quot;NEGATIVE&quot;&#10;ELSEIF [Calculation_804666637989806081] &gt;=.30 THEN &quot;OVER 30%&quot;&#10;ELSEIF [Calculation_804666637989806081]&gt;=0 AND [Calculation_804666637989806081] &lt;.15 THEN &quot;0-15%&quot;&#10;ELSEIF [Calculation_804666637989806081]&gt;=.15 AND [Calculation_804666637989806081] &lt;.30 THEN &quot;15-30%&quot;&#10;ELSE Null&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_DIFF+' datatype='string' name='[Calculation_804666637993172995]' role='measure' type='nominal'>
        <calculation class='tableau' formula='If [Calculation_804666637989806081] &gt; 0&#10;THEN &quot;▲&quot;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_DIFF-' datatype='string' name='[Calculation_804666637993263108]' role='measure' type='nominal'>
        <calculation class='tableau' formula='If [Calculation_804666637989806081] &lt; 0&#10;THEN &quot;▼&quot;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_DIFF0' datatype='string' name='[Calculation_804666637993463813]' role='measure' type='nominal'>
        <calculation class='tableau' formula='If [Calculation_804666637989806081] = 0&#10;THEN &quot;▲▼&quot;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_FIRST' datatype='boolean' name='[Calculation_804666637996351494]' role='measure' type='nominal'>
        <calculation class='tableau' formula='FIRST()=0'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_LAST' datatype='boolean' name='[Calculation_804666637996412935]' role='measure' type='nominal'>
        <calculation class='tableau' formula='LAST()=0'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Host Id]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Name]' role='dimension' type='nominal' />
      <column caption='Area in New York' datatype='string' name='[Neighbourhood]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number Of Reviews]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Price (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='1' formula='[Price]' peg='0' size='50' />
      </column>
      <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Review Scores Rating]' role='measure' type='quantitative' />
      <column datatype='string' name='[Room Type]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='airbnb_final.csv' datatype='table' name='[__tableau_internal_object_id__].[airbnb_final.csv_F131E8498D8B411DA743978913637A55]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[airbnb_final.csv_F131E8498D8B411DA743978913637A55]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:airbnb_final.csv_F131E8498D8B411DA743978913637A55:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='Attribute' name='[attr:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Review Scores Rating]' derivation='Avg' name='[avg:Review Scores Rating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='Count' name='[cnt:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Name]' derivation='CountD' name='[ctd:Name:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='CountD' name='[ctd:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Top 100 hosts based on number of reviews]' derivation='InOut' name='[io:Top 100 hosts based on number of reviews:nk]' pivot='key' type='nominal' />
      <column-instance column='[Top 100 hosts based on review rating]' derivation='InOut' name='[io:Top 100 hosts based on review rating:nk]' pivot='key' type='nominal' />
      <column-instance column='[Price]' derivation='Median' name='[med:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Host Id]' derivation='None' name='[none:Host Id:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Neighbourhood]' derivation='None' name='[none:Neighbourhood:nk]' pivot='key' type='nominal' />
      <column-instance column='[Price (bin)]' derivation='None' name='[none:Price (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Price]' derivation='None' name='[none:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Room Type]' derivation='None' name='[none:Room Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Price]' derivation='Count' name='[pcdf:cnt:Price:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance aggregation-param='95' column='[Price]' derivation='Percentile' name='[prc95:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='StdevP' name='[stp:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
      <group caption='Top 100 hosts based on number of reviews' name='[Top 100 hosts based on number of reviews]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='100' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Number Of Reviews])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[none:Host Id:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Top 100 hosts based on review rating' name='[Top 100 hosts based on review rating]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='100' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Review Scores Rating])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[none:Host Id:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.891192' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.108808' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[__tableau_internal_object_id__].[cnt:airbnb_final.csv_F131E8498D8B411DA743978913637A55:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[attr:Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[avg:Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[cnt:Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[ctd:Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[med:Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[none:Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[pcdf:cnt:Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[prc95:Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[stp:Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[sum:Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[usr:Calculation_804666638035107848:nk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Room Type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Entire home/apt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shared room&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Private room&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Price (bin):ok]' type='palette'>
            <map to='#2a5783'>
              <bucket>200</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>160</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>130</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>119</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>100</bucket>
            </map>
            <map to='#34618e'>
              <bucket>95</bucket>
            </map>
            <map to='#376491'>
              <bucket>90</bucket>
            </map>
            <map to='#386693'>
              <bucket>80</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>75</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>70</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>67</bucket>
            </map>
            <map to='#406e9b'>
              <bucket>64</bucket>
            </map>
            <map to='#42709e'>
              <bucket>62</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>60</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>55</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>53</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>51</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>50</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>49</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>45</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>40</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>39</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>38</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>37</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>36</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>35</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>34</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>33</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>32</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>31</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>30</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>29</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>28</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>27</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>26</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>25</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>24</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>23</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>22</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>21</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>20</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>19</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>18</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>17</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>16</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>15</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>14</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>13</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>12</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>11</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>10</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>9</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>8</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>7</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>6</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>5</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>4</bucket>
            </map>
            <map to='#e03531'>
              <bucket>1</bucket>
            </map>
            <map to='#e39802'>
              <bucket>2</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>0</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>3</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Host Id:ok]' type='palette'>
            <map to='#499894'>
              <bucket>380138</bucket>
            </map>
            <map to='#499894'>
              <bucket>384796</bucket>
            </map>
            <map to='#499894'>
              <bucket>480943</bucket>
            </map>
            <map to='#499894'>
              <bucket>2674592</bucket>
            </map>
            <map to='#499894'>
              <bucket>19331457</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>8178</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>86091</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>170510</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>4734398</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>14942455</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>32169</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>181376</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>282614</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>394772</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1148395</bucket>
            </map>
            <map to='#79706e'>
              <bucket>102310</bucket>
            </map>
            <map to='#79706e'>
              <bucket>256161</bucket>
            </map>
            <map to='#79706e'>
              <bucket>970385</bucket>
            </map>
            <map to='#79706e'>
              <bucket>1097545</bucket>
            </map>
            <map to='#79706e'>
              <bucket>5166070</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>78127</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>251176</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>607632</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2675843</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>19354588</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>5926</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>209460</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>453519</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>598895</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>2822245</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>42273</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>4087416</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>8872284</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>9922972</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>14061862</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>8967</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>11481</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>254913</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1230560</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2680820</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>81602</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>303939</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>3339701</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>6430044</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>17479646</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>220001</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>1204785</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>1417227</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>2538621</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>2675644</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>322641</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>627217</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>1366310</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>3635728</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>8261331</bucket>
            </map>
            <map to='#d37295'>
              <bucket>242506</bucket>
            </map>
            <map to='#d37295'>
              <bucket>292204</bucket>
            </map>
            <map to='#d37295'>
              <bucket>2687671</bucket>
            </map>
            <map to='#d37295'>
              <bucket>5006781</bucket>
            </map>
            <map to='#d37295'>
              <bucket>5749240</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>9744</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>565905</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>2948223</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>6008257</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>6885157</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>32330</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>59734</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>1679409</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>7452455</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>15718962</bucket>
            </map>
            <map to='#e15759'>
              <bucket>27848</bucket>
            </map>
            <map to='#e15759'>
              <bucket>116382</bucket>
            </map>
            <map to='#e15759'>
              <bucket>277379</bucket>
            </map>
            <map to='#e15759'>
              <bucket>417504</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2777672</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>32294</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>46978</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>55298</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>137814</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>873273</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>42756</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>61414</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>169683</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2015914</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2161129</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10889</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>314582</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>1354796</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>2267153</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>14951748</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>7549</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>72062</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>118971</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>306739</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>3072504</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>29762</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>33279</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>264514</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>462776</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>4313868</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Top 100 hosts based on number of reviews:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#e15759'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Top 100 hosts based on number of reviews]' type='palette'>
            <map to='#499894'>
              <bucket>(27848)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(170510)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(453519)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(2538621)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(6885157)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(78127)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(303939)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(1230560)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(4087416)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(8967)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(116382)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(380138)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(1679409)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(5166070)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(32294)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(242506)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(598895)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(2680820)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(9922972)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(29762)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(181376)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(462776)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(2674592)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(7452455)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(9744)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(118971)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(384796)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(2015914)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(5749240)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(55298)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(61414)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(282614)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(1148395)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(3339701)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(19331457)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(5926)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(81602)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(306739)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(1354796)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(4313868)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(42756)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(264514)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(970385)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(2948223)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(15718962)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(10889)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(137814)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(394772)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(2161129)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(6008257)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(32330)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(251176)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(607632)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(2687671)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(14061862)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(33279)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(254913)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(627217)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(2777672)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(14942455)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(46978)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(277379)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(1097545)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(3072504)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(17479646)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(59734)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(72062)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(292204)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(1204785)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(3635728)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(19354588)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(209460)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(480943)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(2675644)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(8261331)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(11481)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(169683)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(417504)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(2267153)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(6430044)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(7549)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(86091)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(314582)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(1366310)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(4734398)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(42273)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(256161)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(873273)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(2822245)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(14951748)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(32169)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(220001)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(565905)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(2675843)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(8872284)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(8178)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(102310)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(322641)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(1417227)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(5006781)</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Top 100 hosts based on review rating:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#e15759'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Top 100 hosts based on review rating]' type='palette'>
            <map to='#499894'>
              <bucket>(72062)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(2487613)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(5855145)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(15423843)</bucket>
            </map>
            <map to='#499894'>
              <bucket>(25843005)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(1354796)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(4291007)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(9522524)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(23582893)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(29762)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(1911420)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(5166070)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(10877850)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(24099263)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(256161)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(3038687)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(6885157)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(17384869)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(32277716)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(109457)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(2675644)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(5912445)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(16126316)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(28257071)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(33279)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(2015914)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(5238263)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(12122046)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(24751294)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(972866)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(1177497)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(4014688)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(8775389)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(22547910)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(38123545)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(5926)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(1411399)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(4313868)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(9922972)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(23823950)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(417504)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(3625735)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(7831209)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(21022694)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(35987043)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(59172)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(2120259)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(5541374)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(14061862)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(24762401)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(311286)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(3250450)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(7291745)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(18397763)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(35524316)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(322716)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(3339701)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(7365834)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(19354588)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(35606248)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(592967)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(3968794)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(8288419)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(21382866)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(36944776)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(1100494)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(1217923)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(4087416)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(9113389)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(23188519)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(39528519)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(2675843)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(6079166)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(16551493)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(31526222)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(59777)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(2156913)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(5853457)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(14339935)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(25237492)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(22486)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(1559494)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(4887492)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(10384906)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(23878336)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(384796)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(3388950)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(7452455)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(20780082)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(35927005)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(216191)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(2834182)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(6874740)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(16621164)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(32064442)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(27848)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(1789655)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(5006781)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(10641598)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(24090806)</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Room Type:nk]' type='shape'>
            <map to='circle'>
              <bucket>&quot;Entire home/apt&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Shared room&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Private room&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:4:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>0</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#edc948'>
              <bucket>6</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Neighbourhood:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Bronx&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Staten Island&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Queens&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brooklyn&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:AdhocCluster:4:ok]' type='shape'>
            <map to='circle'>
              <bucket>1</bucket>
            </map>
            <map to='plus'>
              <bucket>3</bucket>
            </map>
            <map to='square'>
              <bucket>2</bucket>
            </map>
            <map to='times'>
              <bucket>4</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='KMeans' caption='Clustering Method' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
          <calculation class='tableau' formula='1' />
        </column>
        <column caption='Number Clusters' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
          <range granularity='1' max='5' min='2' />
        </column>
      </datasource-dependencies>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{ce4c3a19-5032-4088-8047-6f3a9bf32d50}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[avg:Review Scores Rating:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>4</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='airbnb_final.csv' id='airbnb_final.csv_F131E8498D8B411DA743978913637A55'>
            <properties context=''>
              <relation connection='textscan.14jow0y10s9at31bre89111ebi0m' name='airbnb_final.csv' table='[airbnb_final#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='Host Id' ordinal='0' />
                  <column datatype='date' name='Host Since' ordinal='1' />
                  <column datatype='string' name='Name' ordinal='2' />
                  <column datatype='string' name='Neighbourhood' ordinal='3' />
                  <column datatype='string' name='Property Type' ordinal='4' />
                  <column datatype='integer' name='Review Scores Rating (bin)' ordinal='5' />
                  <column datatype='string' name='Room Type' ordinal='6' />
                  <column datatype='integer' name='Zipcode' ordinal='7' />
                  <column datatype='integer' name='Beds' ordinal='8' />
                  <column datatype='integer' name='Number Of Reviews' ordinal='9' />
                  <column datatype='integer' name='Price' ordinal='10' />
                  <column datatype='integer' name='Review Scores Rating' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='airbnb_final (5)' inline='true' name='federated.113x8ik159y66w10tsm371rhe4fj (copy 4)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='airbnb_final' name='textscan.0qsduja1539z7n11qmkr514y6muh (copy)'>
            <connection class='textscan' directory='/Users/vrinda/Desktop/AI_course/Data Visualization/lab exercises/lab 2' filename='airbnb_final.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0qsduja1539z7n11qmkr514y6muh (copy)' name='airbnb_final.csv' table='[airbnb_final#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Host Id' ordinal='0' />
            <column datatype='date' name='Host Since' ordinal='1' />
            <column datatype='string' name='Name' ordinal='2' />
            <column datatype='string' name='Neighbourhood' ordinal='3' />
            <column datatype='string' name='Property Type' ordinal='4' />
            <column datatype='integer' name='Review Scores Rating (bin)' ordinal='5' />
            <column datatype='string' name='Room Type' ordinal='6' />
            <column datatype='integer' name='Zipcode' ordinal='7' />
            <column datatype='integer' name='Beds' ordinal='8' />
            <column datatype='integer' name='Number Of Reviews' ordinal='9' />
            <column datatype='integer' name='Price' ordinal='10' />
            <column datatype='integer' name='Review Scores Rating' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0qsduja1539z7n11qmkr514y6muh (copy)' name='airbnb_final.csv' table='[airbnb_final#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Host Id' ordinal='0' />
            <column datatype='date' name='Host Since' ordinal='1' />
            <column datatype='string' name='Name' ordinal='2' />
            <column datatype='string' name='Neighbourhood' ordinal='3' />
            <column datatype='string' name='Property Type' ordinal='4' />
            <column datatype='integer' name='Review Scores Rating (bin)' ordinal='5' />
            <column datatype='string' name='Room Type' ordinal='6' />
            <column datatype='integer' name='Zipcode' ordinal='7' />
            <column datatype='integer' name='Beds' ordinal='8' />
            <column datatype='integer' name='Number Of Reviews' ordinal='9' />
            <column datatype='integer' name='Price' ordinal='10' />
            <column datatype='integer' name='Review Scores Rating' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Host Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Host Id]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Host Id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Host Since</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Host Since]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Host Since</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neighbourhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Neighbourhood]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Neighbourhood</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Property Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Property Type]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Property Type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Review Scores Rating (bin)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Review Scores Rating (bin)]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Review Scores Rating (bin)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Room Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Room Type]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Room Type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zipcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Zipcode]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Zipcode</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Beds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Beds]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Beds</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number Of Reviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number Of Reviews]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Number Of Reviews</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Price]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Price</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Review Scores Rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Review Scores Rating]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Review Scores Rating</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Beds]' role='measure' type='quantitative' />
      <column caption='pearson correlation avg price and beds' datatype='real' name='[Calculation_123708300790829056]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;import numpy as np&#10;return np.corrcoef(_arg1,_arg2)[0,1]&quot;,&#10;AVG([Price]),AVG([Beds]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Host Id]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Neighbourhood]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number Of Reviews]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
      <column datatype='string' name='[Property Type]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Review Scores Rating]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='airbnb_final.csv' datatype='table' name='[__tableau_internal_object_id__].[airbnb_final.csv_C3734B04636745DE8AE066741FF79D75]' role='measure' type='quantitative' />
      <column caption='pearson correlation price and reviews' datatype='real' name='[pearson correlation (copy)_123708300934279173]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;import numpy as np&#10;return np.corrcoef(_arg1,_arg2)[0,1]&quot;,&#10;SUM([Price]),sum([Number Of Reviews]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='pearson correlation price and review score rating' datatype='real' name='[pearson correlation price and reviews (copy)_123708300938661894]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;import numpy as np&#10;return np.corrcoef(_arg1,_arg2)[0,1]&quot;,&#10;SUM([Price]),sum([Number Of Reviews]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column-instance column='[Beds]' derivation='Avg' name='[avg:Beds:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Beds]' derivation='Sum' name='[sum:Beds:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number Of Reviews]' derivation='Sum' name='[sum:Number Of Reviews:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Review Scores Rating]' derivation='Sum' name='[sum:Review Scores Rating:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_123708300790829056]' derivation='User' name='[usr:Calculation_123708300790829056:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation_123708300790829056]' derivation='User' name='[usr:Calculation_123708300790829056:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[Neighbourhood]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_123708300790829056]' derivation='User' name='[usr:Calculation_123708300790829056:qk:7]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[Property Type]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_123708300790829056]' derivation='User' name='[usr:Calculation_123708300790829056:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/daniyarkurmanbayev/Documents/GBC/DVT/Lab 4/Lab 4 Dan.twb Files/Data/Data Visualization/airbnb_final copy 1.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='12/11/2021 03:37:43 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='airbnb_final' increment-value='%null%' refresh-type='create' rows-inserted='30337' timestamp-start='2021-12-11 15:37:42.971' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Host Id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Host Id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Host Id</remote-alias>
              <ordinal>0</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14066</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Host Since</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Host Since]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Host Since</remote-alias>
              <ordinal>1</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>3401</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Name</remote-alias>
              <ordinal>2</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>28878</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Neighbourhood</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Neighbourhood]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Neighbourhood</remote-alias>
              <ordinal>3</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Property Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Property Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Property Type</remote-alias>
              <ordinal>4</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Review Scores Rating (bin)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Review Scores Rating (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Review Scores Rating (bin)</remote-alias>
              <ordinal>5</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Room Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Room Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Room Type</remote-alias>
              <ordinal>6</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Zipcode</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Zipcode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Zipcode</remote-alias>
              <ordinal>7</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>269</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Beds</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Beds]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Beds</remote-alias>
              <ordinal>8</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number Of Reviews</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Number Of Reviews]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number Of Reviews</remote-alias>
              <ordinal>9</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>211</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Price</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Price</remote-alias>
              <ordinal>10</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>590</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Review Scores Rating</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Review Scores Rating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Review Scores Rating</remote-alias>
              <ordinal>11</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>86</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[sum:Number Of Reviews:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[avg:Beds:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[sum:Beds:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[usr:Calculation_123708300790829056:qk:5]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[usr:Calculation_123708300790829056:qk:6]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[usr:Calculation_123708300790829056:qk:7]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[usr:Calculation_123708300790829056:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[avg:Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[sum:Price:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:3:ok]' type='palette'>
            <map to='#499894'>
              <bucket>9</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>21</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>25</bucket>
            </map>
            <map to='#79706e'>
              <bucket>13</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>0</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>6</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>19</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>22</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>17</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>7</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>14</bucket>
            </map>
            <map to='#d37295'>
              <bucket>15</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>18</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>20</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>8</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>23</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>16</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>12</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>4</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>24</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{8b4b94c5-2436-449b-90b9-30dc13851526}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[sum:Price:qk]' />
            <field name='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[sum:Review Scores Rating:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>4</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='airbnb_final.csv' id='airbnb_final.csv_C3734B04636745DE8AE066741FF79D75'>
            <properties context=''>
              <relation connection='textscan.0qsduja1539z7n11qmkr514y6muh (copy)' name='airbnb_final.csv' table='[airbnb_final#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='Host Id' ordinal='0' />
                  <column datatype='date' name='Host Since' ordinal='1' />
                  <column datatype='string' name='Name' ordinal='2' />
                  <column datatype='string' name='Neighbourhood' ordinal='3' />
                  <column datatype='string' name='Property Type' ordinal='4' />
                  <column datatype='integer' name='Review Scores Rating (bin)' ordinal='5' />
                  <column datatype='string' name='Room Type' ordinal='6' />
                  <column datatype='integer' name='Zipcode' ordinal='7' />
                  <column datatype='integer' name='Beds' ordinal='8' />
                  <column datatype='integer' name='Number Of Reviews' ordinal='9' />
                  <column datatype='integer' name='Price' ordinal='10' />
                  <column datatype='integer' name='Review Scores Rating' ordinal='11' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='airbnb_final (airbnb_final)' inline='true' name='federated.0cvv3ht103mwez10jau510z4anki' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='airbnb_final' name='textscan.1mo812i0znlmyp1fj7e3s0g4rtu5'>
            <connection class='textscan' directory='/Users/daniyarkurmanbayev/Documents/GBC/DVT/Lab 2' filename='airbnb_final.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1mo812i0znlmyp1fj7e3s0g4rtu5' name='airbnb_final.csv' table='[airbnb_final#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='Host Id' ordinal='0' />
            <column datatype='date' name='Host Since' ordinal='1' />
            <column datatype='string' name='Name' ordinal='2' />
            <column datatype='string' name='Neighbourhood' ordinal='3' />
            <column datatype='string' name='Property Type' ordinal='4' />
            <column datatype='integer' name='Review Scores Rating (bin)' ordinal='5' />
            <column datatype='string' name='Room Type' ordinal='6' />
            <column datatype='integer' name='Zipcode' ordinal='7' />
            <column datatype='integer' name='Beds' ordinal='8' />
            <column datatype='integer' name='Number Of Reviews' ordinal='9' />
            <column datatype='integer' name='Price' ordinal='10' />
            <column datatype='integer' name='Review Scores Rating' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1mo812i0znlmyp1fj7e3s0g4rtu5' name='airbnb_final.csv' table='[airbnb_final#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='Host Id' ordinal='0' />
            <column datatype='date' name='Host Since' ordinal='1' />
            <column datatype='string' name='Name' ordinal='2' />
            <column datatype='string' name='Neighbourhood' ordinal='3' />
            <column datatype='string' name='Property Type' ordinal='4' />
            <column datatype='integer' name='Review Scores Rating (bin)' ordinal='5' />
            <column datatype='string' name='Room Type' ordinal='6' />
            <column datatype='integer' name='Zipcode' ordinal='7' />
            <column datatype='integer' name='Beds' ordinal='8' />
            <column datatype='integer' name='Number Of Reviews' ordinal='9' />
            <column datatype='integer' name='Price' ordinal='10' />
            <column datatype='integer' name='Review Scores Rating' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Host Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Host Id]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Host Id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_19404339792445D0A0E687B3042B48D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Host Since</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Host Since]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Host Since</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_19404339792445D0A0E687B3042B48D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_19404339792445D0A0E687B3042B48D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neighbourhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Neighbourhood]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Neighbourhood</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_19404339792445D0A0E687B3042B48D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Property Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Property Type]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Property Type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_19404339792445D0A0E687B3042B48D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Review Scores Rating (bin)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Review Scores Rating (bin)]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Review Scores Rating (bin)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_19404339792445D0A0E687B3042B48D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Room Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Room Type]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Room Type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_19404339792445D0A0E687B3042B48D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zipcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Zipcode]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Zipcode</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_19404339792445D0A0E687B3042B48D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Beds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Beds]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Beds</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_19404339792445D0A0E687B3042B48D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number Of Reviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number Of Reviews]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Number Of Reviews</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_19404339792445D0A0E687B3042B48D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Price]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Price</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_19404339792445D0A0E687B3042B48D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Review Scores Rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Review Scores Rating]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Review Scores Rating</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_19404339792445D0A0E687B3042B48D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='_diff' datatype='real' name='[Calculation_12103470929170432]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Review Scores Rating])-LOOKUP(ZN(AVG([Review Scores Rating])), -1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_diff%' datatype='real' name='[Calculation_12103470929698817]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF(AVG([Review Scores Rating]) - LOOKUP(ZN(AVG([Review Scores Rating])), -1))&gt;0 THEN&#13;&#10;&#13;&#10;(AVG([Review Scores Rating]) - LOOKUP(ZN(AVG([Review Scores Rating])), -1)) / LOOKUP(ZN(AVG([Review Scores Rating])), -1)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;(AVG([Review Scores Rating]) - LOOKUP(ZN(AVG([Review Scores Rating])), -1)) / AVG([Review Scores Rating])&#13;&#10;&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_diff+' datatype='string' name='[Calculation_12103470930677762]' role='measure' type='nominal'>
        <calculation class='tableau' formula='If [Calculation_12103470929698817] &gt; 0&#13;&#10;&#13;&#10;THEN &quot;▲&quot;&#13;&#10;&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_diff-' datatype='string' name='[Calculation_12103470930939907]' role='measure' type='nominal'>
        <calculation class='tableau' formula='If [Calculation_12103470929698817] &lt; 0&#13;&#10;&#13;&#10;THEN &quot;▼&quot;&#13;&#10;&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_diff0' datatype='string' name='[Calculation_12103470931066884]' role='measure' type='nominal'>
        <calculation class='tableau' formula='If [Calculation_12103470929698817] = 0&#13;&#10;&#13;&#10;THEN &quot;▲▼&quot;&#13;&#10;&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_first' datatype='boolean' name='[Calculation_12103470932320261]' role='measure' type='nominal'>
        <calculation class='tableau' formula='FIRST()= 0'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_COLOUR' datatype='string' name='[Calculation_12103470932992006]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_12103470929698817]&lt;0 THEN &quot;NEGATIVE&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_12103470929698817]&gt;=0 THEN &quot;0-15%&quot;&#13;&#10;&#13;&#10;ELSE Null&#13;&#10;&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_diffprice' datatype='real' name='[Calculation_12103471132770311]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Price])-LOOKUP(ZN(AVG([Price])), -1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_diffprice%' datatype='real' name='[Calculation_12103471133036552]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF(AVG([Price]) - LOOKUP(ZN(AVG([Price])), -1))&gt;0 THEN&#13;&#10;&#13;&#10;(AVG([Price]) - LOOKUP(ZN(AVG([Price])), -1)) / LOOKUP(ZN(AVG([Price])), -1)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;(AVG ([Price]) - LOOKUP(ZN(AVG([Price])), -1)) / AVG ([Price])&#13;&#10;&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_diffprice-' datatype='string' name='[Calculation_12103471134195721]' role='measure' type='nominal'>
        <calculation class='tableau' formula='If [Calculation_12103471133036552] &lt; 0&#13;&#10;&#13;&#10;THEN &quot;▼&quot;&#13;&#10;&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_diffprice+' datatype='string' name='[Calculation_12103471134367754]' role='measure' type='nominal'>
        <calculation class='tableau' formula='If [Calculation_12103471133036552] &gt; 0&#13;&#10;&#13;&#10;THEN &quot;▲&quot;&#13;&#10;&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='_Colour' datatype='string' name='[Calculation_12103471135240203]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_12103471133036552]&lt;0 THEN &quot;NEGATIVE&quot;&#13;&#10;&#13;&#10;ELSEIF [Calculation_12103471133036552]&gt;=0 THEN &quot;0-15%&quot;&#13;&#10;&#13;&#10;ELSE Null&#13;&#10;&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='INDEX' datatype='integer' name='[Calculation_730990561012523008]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Host Id]' role='dimension' type='ordinal' />
      <column caption='Neighbourhood1' datatype='string' name='[Neighbourhood]' role='dimension' type='nominal' />
      <column caption='Property Type1' datatype='string' name='[Property Type]' role='dimension' type='nominal' />
      <column caption='Room Type1' datatype='string' name='[Room Type]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='airbnb_final.csv' datatype='table' name='[__tableau_internal_object_id__].[airbnb_final.csv_19404339792445D0A0E687B3042B48D2]' role='measure' type='quantitative' />
      <column-instance column='[Zipcode]' derivation='None' name='[none:Zipcode:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_12103470932992006]' derivation='User' name='[usr:Calculation_12103470932992006:nk]' pivot='key' type='nominal'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[federated.0cvv3ht103mwez10jau510z4anki].[Calculation_12103470929698817]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_12103471135240203]' derivation='User' name='[usr:Calculation_12103471135240203:nk]' pivot='key' type='nominal'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[federated.0cvv3ht103mwez10jau510z4anki].[Calculation_12103471133036552]' ordering-type='Rows' />
      </column-instance>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/lakki/Documents/My Tableau Repository/Datasources/airbnb_final (airbnb_final).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='12/07/2021 05:30:20 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='airbnb_final (airbnb_final)' increment-value='%null%' refresh-type='create' rows-inserted='30337' timestamp-start='2021-12-07 17:30:20.598' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Host Id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Host Id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Host Id</remote-alias>
              <ordinal>0</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14066</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_19404339792445D0A0E687B3042B48D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Host Since</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Host Since]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Host Since</remote-alias>
              <ordinal>1</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>3401</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_19404339792445D0A0E687B3042B48D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Name</remote-alias>
              <ordinal>2</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>28878</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_19404339792445D0A0E687B3042B48D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Neighbourhood</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Neighbourhood]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Neighbourhood</remote-alias>
              <ordinal>3</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_19404339792445D0A0E687B3042B48D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Property Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Property Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Property Type</remote-alias>
              <ordinal>4</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_19404339792445D0A0E687B3042B48D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Review Scores Rating (bin)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Review Scores Rating (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Review Scores Rating (bin)</remote-alias>
              <ordinal>5</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_19404339792445D0A0E687B3042B48D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Room Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Room Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Room Type</remote-alias>
              <ordinal>6</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_19404339792445D0A0E687B3042B48D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Zipcode</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Zipcode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Zipcode</remote-alias>
              <ordinal>7</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>269</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_19404339792445D0A0E687B3042B48D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Beds</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Beds]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Beds</remote-alias>
              <ordinal>8</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_19404339792445D0A0E687B3042B48D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number Of Reviews</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Number Of Reviews]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number Of Reviews</remote-alias>
              <ordinal>9</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>211</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_19404339792445D0A0E687B3042B48D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Price</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Price</remote-alias>
              <ordinal>10</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>590</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_19404339792445D0A0E687B3042B48D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Review Scores Rating</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Review Scores Rating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Review Scores Rating</remote-alias>
              <ordinal>11</ordinal>
              <family>airbnb_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>86</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_19404339792445D0A0E687B3042B48D2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Zipcode:ok]' type='palette'>
            <map to='#499894'>
              <bucket>10016</bucket>
            </map>
            <map to='#499894'>
              <bucket>10022</bucket>
            </map>
            <map to='#499894'>
              <bucket>10030</bucket>
            </map>
            <map to='#499894'>
              <bucket>10034</bucket>
            </map>
            <map to='#499894'>
              <bucket>10302</bucket>
            </map>
            <map to='#499894'>
              <bucket>10305</bucket>
            </map>
            <map to='#499894'>
              <bucket>10308</bucket>
            </map>
            <map to='#499894'>
              <bucket>10314</bucket>
            </map>
            <map to='#499894'>
              <bucket>10457</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10465</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>10471</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>11101</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>11105</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>11205</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>11211</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>11358</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>11378</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>11411</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>11691</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10010</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10011</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10032</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10286</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10301</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>10704</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>11212</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>11236</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>11413</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>11421</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10013</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10031</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10033</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10080</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10282</bucket>
            </map>
            <map to='#79706e'>
              <bucket>10460</bucket>
            </map>
            <map to='#79706e'>
              <bucket>11224</bucket>
            </map>
            <map to='#79706e'>
              <bucket>11230</bucket>
            </map>
            <map to='#79706e'>
              <bucket>11694</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>1003</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10017</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10029</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10039</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10466</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10467</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10469</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>11238</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>11374</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10014</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10035</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10128</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10456</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>10475</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>11232</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>11364</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>11377</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>11379</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>11428</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>7712</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10006</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>10162</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>11222</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>11225</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>11357</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>11366</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>11368</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>11373</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10003</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10024</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>10470</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>11226</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>11385</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>11412</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>11418</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>11426</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>11432</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>11435</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10065</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10303</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10304</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>10474</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>11102</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>11206</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>11208</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>11210</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>11433</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>7105</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10012</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10458</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>10463</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>11201</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>11213</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>11220</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>11234</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>11356</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>11427</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10023</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10040</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10455</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10472</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>11214</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>11231</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>11365</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>11375</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>11423</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10001</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10021</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10281</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10451</bucket>
            </map>
            <map to='#d37295'>
              <bucket>10453</bucket>
            </map>
            <map to='#d37295'>
              <bucket>11218</bucket>
            </map>
            <map to='#d37295'>
              <bucket>11361</bucket>
            </map>
            <map to='#d37295'>
              <bucket>11372</bucket>
            </map>
            <map to='#d37295'>
              <bucket>11429</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10007</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10044</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10310</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>10464</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>11215</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>11223</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>11233</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>11420</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>11693</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10020</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10026</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10037</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10119</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10309</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>10454</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>11203</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>11216</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>11422</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10025</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10312</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11106</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11235</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11237</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11354</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11360</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11414</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11692</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10005</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10019</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10027</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>10307</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>11104</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>11228</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>11229</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>11369</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>11416</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>94103</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10002</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10075</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10112</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>10306</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>11207</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>11217</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>11355</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>11370</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>11417</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>99135</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>7030</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10018</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10069</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10280</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10468</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>10473</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>11204</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>11249</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>11415</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10028</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10036</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10461</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10462</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>11103</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>11109</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>11209</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>11419</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>11436</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10004</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10009</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10038</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10452</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>10459</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>11219</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>11221</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>11239</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>11367</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>11434</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_12103470932992006:nk]' type='palette'>
            <map to='#309143'>
              <bucket>&quot;0-15\%&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;NEGATIVE&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_12103471135240203:nk]' type='palette'>
            <map to='#309143'>
              <bucket>&quot;0-15\%&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;NEGATIVE&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='airbnb_final.csv' id='airbnb_final.csv_19404339792445D0A0E687B3042B48D2'>
            <properties context=''>
              <relation connection='textscan.1mo812i0znlmyp1fj7e3s0g4rtu5' name='airbnb_final.csv' table='[airbnb_final#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='Host Id' ordinal='0' />
                  <column datatype='date' name='Host Since' ordinal='1' />
                  <column datatype='string' name='Name' ordinal='2' />
                  <column datatype='string' name='Neighbourhood' ordinal='3' />
                  <column datatype='string' name='Property Type' ordinal='4' />
                  <column datatype='integer' name='Review Scores Rating (bin)' ordinal='5' />
                  <column datatype='string' name='Room Type' ordinal='6' />
                  <column datatype='integer' name='Zipcode' ordinal='7' />
                  <column datatype='integer' name='Beds' ordinal='8' />
                  <column datatype='integer' name='Number Of Reviews' ordinal='9' />
                  <column datatype='integer' name='Price' ordinal='10' />
                  <column datatype='integer' name='Review Scores Rating' ordinal='11' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='airbnb_final (6)' inline='true' name='federated.113x8ik159y66w10tsm371rhe4fj (copy 5)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='airbnb_final' name='textscan.09ir0ga00evj111ey2bmb18pefxs'>
            <connection class='textscan' directory='/Users/daniyarkurmanbayev/Documents/GBC/DVT/Lab 4/Lab 4 Dan.twb Files/Data/Downloads' filename='airbnb_final.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.09ir0ga00evj111ey2bmb18pefxs' name='airbnb_final.csv' table='[airbnb_final#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='Host Id' ordinal='0' />
            <column datatype='date' name='Host Since' ordinal='1' />
            <column datatype='string' name='Name' ordinal='2' />
            <column datatype='string' name='Neighbourhood' ordinal='3' />
            <column datatype='string' name='Property Type' ordinal='4' />
            <column datatype='integer' name='Review Scores Rating (bin)' ordinal='5' />
            <column datatype='string' name='Room Type' ordinal='6' />
            <column datatype='integer' name='Zipcode' ordinal='7' />
            <column datatype='integer' name='Beds' ordinal='8' />
            <column datatype='integer' name='Number Of Reviews' ordinal='9' />
            <column datatype='integer' name='Price' ordinal='10' />
            <column datatype='integer' name='Review Scores Rating' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.09ir0ga00evj111ey2bmb18pefxs' name='airbnb_final.csv' table='[airbnb_final#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='Host Id' ordinal='0' />
            <column datatype='date' name='Host Since' ordinal='1' />
            <column datatype='string' name='Name' ordinal='2' />
            <column datatype='string' name='Neighbourhood' ordinal='3' />
            <column datatype='string' name='Property Type' ordinal='4' />
            <column datatype='integer' name='Review Scores Rating (bin)' ordinal='5' />
            <column datatype='string' name='Room Type' ordinal='6' />
            <column datatype='integer' name='Zipcode' ordinal='7' />
            <column datatype='integer' name='Beds' ordinal='8' />
            <column datatype='integer' name='Number Of Reviews' ordinal='9' />
            <column datatype='integer' name='Price' ordinal='10' />
            <column datatype='integer' name='Review Scores Rating' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Host Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Host Id]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Host Id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_59F55680E5234D3EB1B16E5C3D55F15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Host Since</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Host Since]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Host Since</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_59F55680E5234D3EB1B16E5C3D55F15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_59F55680E5234D3EB1B16E5C3D55F15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neighbourhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Neighbourhood]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Neighbourhood</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_59F55680E5234D3EB1B16E5C3D55F15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Property Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Property Type]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Property Type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_59F55680E5234D3EB1B16E5C3D55F15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Review Scores Rating (bin)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Review Scores Rating (bin)]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Review Scores Rating (bin)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_59F55680E5234D3EB1B16E5C3D55F15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Room Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Room Type]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Room Type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_59F55680E5234D3EB1B16E5C3D55F15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zipcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Zipcode]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Zipcode</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_59F55680E5234D3EB1B16E5C3D55F15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Beds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Beds]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Beds</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_59F55680E5234D3EB1B16E5C3D55F15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number Of Reviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number Of Reviews]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Number Of Reviews</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_59F55680E5234D3EB1B16E5C3D55F15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Price]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Price</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_59F55680E5234D3EB1B16E5C3D55F15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Review Scores Rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Review Scores Rating]</local-name>
            <parent-name>[airbnb_final.csv]</parent-name>
            <remote-alias>Review Scores Rating</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnb_final.csv_59F55680E5234D3EB1B16E5C3D55F15A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Beds]' role='measure' type='quantitative' />
      <column caption='% AvgPriceDiff' datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(ZN(AVG([Price])) - LOOKUP(ZN(AVG([Price])), -1)) / ABS(LOOKUP(ZN(AVG([Price])), -1))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='% SumReviewsDiff' datatype='real' default-format='p0.00%' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(ZN(SUM([Number Of Reviews])) - LOOKUP(ZN(SUM([Number Of Reviews])), -1)) / ABS(LOOKUP(ZN(SUM([Number Of Reviews])), -1))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Positive %Diff' datatype='string' name='[Calculation_1584352322581286912]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if [Calculation1] &gt; 0&#10;then &quot;▲&quot;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Negative %Diff' datatype='string' name='[Calculation_1584352322582171652]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if [Calculation1] &lt; 0&#10;then &quot;▼&quot;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Positive % Reviews' datatype='string' name='[Calculation_1584352322590916613]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if [Calculation2] &gt; 0&#10;then &quot;▲&quot;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Negative  % Reviews' datatype='string' name='[Calculation_1584352322591440902]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if [Calculation2] &lt; 0&#10;then &quot;▼&quot;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Clustering' datatype='real' datatype-customized='true' name='[Calculation_1985102322219290624]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;                &#10;import numpy as np&#10;import numpy.ma as ma&#10;from sklearn.preprocessing import StandardScaler&#10;from sklearn.cluster import KMeans,  MiniBatchKMeans, AffinityPropagation&#10;                &#10;print(&apos;Start&apos;)&#10;                &#10;# Scaling Features&#10;sc= StandardScaler()&#10;avg_price = sc.fit_transform(np.array(_arg1).reshape(-1,1))&#10;med_review = sc.fit_transform(np.array(_arg2).reshape(-1,1))&#10;med_beds = sc.fit_transform(np.array(_arg3).reshape(-1,1))&#10;n_cl = _arg4[0]&#10;                &#10;# Combine Scaled feature&#10;X_comb = np.column_stack([avg_price, med_review, med_beds])&#10;&#10;# Handling null value with masked array&#10;X = np.where(np.isnan(X_comb), ma.array(X_comb, mask=np.isnan(X_comb)).mean(axis=0), X_comb)&#10;                &#10;# Modeling&#10;result = []&#10;if _arg5[0]==1:&#10;    kmeans = KMeans(n_clusters = n_cl, random_state=99)&#10;    result = kmeans.fit_predict(X).tolist()&#10;elif _arg5[0]==2:&#10;    minib = MiniBatchKMeans(n_clusters = n_cl, random_state=99)&#10;    result =  minib.fit_predict(X).tolist()&#10;else:&#10;    aff = AffinityPropagation().fit(X)&#10;    result = aff.predict(X).tolist()&#10;return result&#10;&quot;,&#10;AVG([Price]),&#10;MEDIAN([Review Scores Rating]),&#10;MEDIAN([Beds]),&#10; [Parameters].[Parameter 1 1],&#10;[Parameters].[Parameter 2 1]&#10;)'>
          <table-calc ordering-field='[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[Zipcode]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Pearson Correlation Coefficient' datatype='real' name='[Calculation_1985102322258432002]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR ( &#10;{INCLUDE ([Host Id]) : AVG([Number Of Reviews])},&#10;{INCLUDE ([Host Id]) : AVG([Review Scores Rating])}&#10;)' />
      </column>
      <column datatype='integer' name='[Host Id]' role='dimension' type='ordinal' />
      <column datatype='date' name='[Host Since]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Neighbourhood]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='airbnb_final.csv' datatype='table' name='[__tableau_internal_object_id__].[airbnb_final.csv_59F55680E5234D3EB1B16E5C3D55F15A]' role='measure' type='quantitative' />
      <column-instance column='[Beds]' derivation='Attribute' name='[attr:Beds:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='Attribute' name='[attr:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Beds]' derivation='Avg' name='[avg:Beds:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='Median' name='[med:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Beds]' derivation='Min' name='[min:Beds:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Neighbourhood]' derivation='None' name='[none:Neighbourhood:nk]' pivot='key' type='nominal' />
      <column-instance column='[Price]' derivation='Avg' name='[pcdf:avg:Price:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Beds]' derivation='Sum' name='[sum:Beds:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Host Since]' derivation='Year' name='[yr:Host Since:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (Neighbourhood,YEAR(Host Since))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Neighbourhood:nk]' />
          <groupfilter function='level-members' level='[yr:Host Since:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.854922' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.145078' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Neighbourhood:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Bronx&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Staten Island&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Queens&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brooklyn&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:4:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[attr:Beds:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[avg:Beds:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[min:Beds:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[sum:Beds:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[attr:Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[avg:Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[med:Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[none:Neighbourhood:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[pcdf:avg:Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[sum:Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[usr:Calculation1:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:AdhocCluster:4:ok]' palette=':default' type='shape'>
            <map to='asterisk'>
              <bucket>5</bucket>
            </map>
            <map to='circle'>
              <bucket>1</bucket>
            </map>
            <map to='plus'>
              <bucket>3</bucket>
            </map>
            <map to='square'>
              <bucket>2</bucket>
            </map>
            <map to='times'>
              <bucket>4</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Cluster Numbers' datatype='real' name='[Parameter 1 1]' param-domain-type='range' role='measure' type='quantitative' value='1.0'>
          <calculation class='tableau' formula='1.0' />
          <range granularity='1.0' max='10.0' min='1.0' />
        </column>
        <column alias='MiniBatchKmeans' caption='Clustering Alogorithm' datatype='integer' name='[Parameter 2 1]' param-domain-type='list' role='measure' type='quantitative' value='2'>
          <calculation class='tableau' formula='2' />
        </column>
      </datasource-dependencies>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{36d491b3-ca03-45a2-809f-f313925cb492}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[med:Price:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='airbnb_final.csv' id='airbnb_final.csv_59F55680E5234D3EB1B16E5C3D55F15A'>
            <properties context=''>
              <relation connection='textscan.09ir0ga00evj111ey2bmb18pefxs' name='airbnb_final.csv' table='[airbnb_final#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='Host Id' ordinal='0' />
                  <column datatype='date' name='Host Since' ordinal='1' />
                  <column datatype='string' name='Name' ordinal='2' />
                  <column datatype='string' name='Neighbourhood' ordinal='3' />
                  <column datatype='string' name='Property Type' ordinal='4' />
                  <column datatype='integer' name='Review Scores Rating (bin)' ordinal='5' />
                  <column datatype='string' name='Room Type' ordinal='6' />
                  <column datatype='integer' name='Zipcode' ordinal='7' />
                  <column datatype='integer' name='Beds' ordinal='8' />
                  <column datatype='integer' name='Number Of Reviews' ordinal='9' />
                  <column datatype='integer' name='Price' ordinal='10' />
                  <column datatype='integer' name='Review Scores Rating' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Daniyar: Price vs Review Correlation Heatmap'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontcolor='#000000'>The heat map above illustrates the </run>
            <run bold='true' fontcolor='#000000'>Pearson correlation</run>
            <run fontcolor='#000000'> between </run>
            <run fontcolor='#000000' italic='true'>mean price</run>
            <run fontcolor='#000000'> and </run>
            <run fontcolor='#000000' italic='true'>mean review score</run>
            <run fontcolor='#000000'> between </run>
            <run fontcolor='#000000' italic='true'>Room Types</run>
            <run fontcolor='#000000'> in different </run>
            <run fontcolor='#000000' italic='true'>years.</run>
            <run fontcolor='#000000'>Æ </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb_final' name='federated.113x8ik159y66w10tsm371rhe4fj' />
          </datasources>
          <datasource-dependencies datasource='federated.113x8ik159y66w10tsm371rhe4fj'>
            <column caption='_Pearson Correlation 2' datatype='real' name='[Calculation_188447545577762823]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR(&#10;    { INCLUDE [Name] : AVG([Price]) },&#10;    { INCLUDE [Name] : AVG([Review Scores Rating]) }&#10;)' />
            </column>
            <column datatype='date' name='[Host Since]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Neighbourhood]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Review Scores Rating]' role='measure' type='quantitative' />
            <column datatype='string' name='[Room Type]' role='dimension' type='nominal' />
            <column-instance column='[Neighbourhood]' derivation='None' name='[none:Neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[Room Type]' derivation='None' name='[none:Room Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_188447545577762823]' derivation='User' name='[usr:Calculation_188447545577762823:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Host Since]' derivation='Year' name='[yr:Host Since:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.113x8ik159y66w10tsm371rhe4fj].[none:Neighbourhood:nk]'>
            <groupfilter function='level-members' level='[none:Neighbourhood:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.113x8ik159y66w10tsm371rhe4fj].[none:Neighbourhood:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.113x8ik159y66w10tsm371rhe4fj].[yr:Host Since:ok]' value='88' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.113x8ik159y66w10tsm371rhe4fj].[usr:Calculation_188447545577762823:qk]' max='1.0' min='-1.0' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.113x8ik159y66w10tsm371rhe4fj].[usr:Calculation_188447545577762823:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.113x8ik159y66w10tsm371rhe4fj].[none:Room Type:nk]</rows>
        <cols>[federated.113x8ik159y66w10tsm371rhe4fj].[yr:Host Since:ok]</cols>
      </table>
      <simple-id uuid='{F64E3151-CD98-41D0-9678-21F363DA9CB8}' />
    </worksheet>
    <worksheet name='Daniyar: Price vs Review Correlation Scatterplot'>
      <layout-options>
        <caption>
          <formatted-text />
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb_final' name='federated.113x8ik159y66w10tsm371rhe4fj' />
          </datasources>
          <datasource-dependencies datasource='federated.113x8ik159y66w10tsm371rhe4fj'>
            <column caption='_Pearson Correlation 1' datatype='real' name='[Calculation_96827440622538752]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#10;import numpy as np&#10;&#10;mean1 = np.mean([val for val in _arg1 if val is not None])&#10;mean2 = np.mean([val for val in _arg2 if val is not None])&#10;&#10;_arg1 = [val if val is not None else mean1 for val in _arg1]&#10;_arg2 = [val if val is not None else mean2 for val in _arg2]&#10;&#10;corrs = np.corrcoef(_arg1, _arg2)[0, 1]&#10;return corrs&#10;&quot;,&#10;AVG([Price]), AVG([Review Scores Rating]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Host Since]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Property Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Review Scores Rating]' role='measure' type='quantitative' />
            <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Review Scores Rating]' derivation='Avg' name='[avg:Review Scores Rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Property Type]' derivation='None' name='[none:Property Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_96827440622538752]' derivation='User' name='[usr:Calculation_96827440622538752:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.113x8ik159y66w10tsm371rhe4fj].[Property Type]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Host Since]' derivation='Year' name='[yr:Host Since:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.113x8ik159y66w10tsm371rhe4fj].[Exclusions (Property Type1,YEAR(Host Since))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Property Type:nk]' />
                <groupfilter function='level-members' level='[yr:Host Since:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Property Type:nk]' member='&quot;Other&quot;' />
                <groupfilter function='member' level='[yr:Host Since:ok]' member='2013' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.113x8ik159y66w10tsm371rhe4fj].[none:Property Type:nk]'>
            <groupfilter function='level-members' level='[none:Property Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.113x8ik159y66w10tsm371rhe4fj].[yr:Host Since:ok]'>
            <groupfilter function='level-members' level='[yr:Host Since:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.113x8ik159y66w10tsm371rhe4fj].[yr:Host Since:ok]</column>
            <column>[federated.113x8ik159y66w10tsm371rhe4fj].[none:Property Type:nk]</column>
            <column>[federated.113x8ik159y66w10tsm371rhe4fj].[Exclusions (Property Type1,YEAR(Host Since))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.113x8ik159y66w10tsm371rhe4fj].[usr:Calculation_96827440622538752:qk:3]' max='1.0' min='-1.0' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='rounding' id='annotation_1' value='small' />
            <format attr='fill-color' id='annotation_1' value='#f5f5f5' />
            <format attr='body-type' id='annotation_1' value='box' />
            <format attr='fill-color' id='annotation_4' value='#f5f5f5' />
            <format attr='rounding' id='annotation_4' value='small' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.113x8ik159y66w10tsm371rhe4fj].[yr:Host Since:ok]' />
              <shape column='[federated.113x8ik159y66w10tsm371rhe4fj].[none:Property Type:nk]' />
              <color column='[federated.113x8ik159y66w10tsm371rhe4fj].[usr:Calculation_96827440622538752:qk:3]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.113x8ik159y66w10tsm371rhe4fj].[avg:Review Scores Rating:qk]</rows>
        <cols>[federated.113x8ik159y66w10tsm371rhe4fj].[avg:Price:qk]</cols>
        <annotations>
          <annotation class='area' id='1' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontcolor='#000000' fontsize='14'>The scatter plot demonstrates the </run>
              <run fontcolor='#000000' fontsize='14' italic='true'>mean price</run>
              <run fontcolor='#000000' fontsize='14'> and </run>
              <run fontcolor='#000000' fontsize='14' italic='true'>mean review score</run>
              <run fontcolor='#000000' fontsize='14'> for </run>
              <run fontcolor='#000000' fontsize='14' italic='true'>property types</run>
              <run fontcolor='#000000' fontsize='14'> in different </run>
              <run fontcolor='#000000' fontsize='14' italic='true'>years</run>
              <run fontcolor='#000000' fontsize='14'>. The color represents the </run>
              <run bold='true' fontcolor='#000000' fontsize='14'>Pearson correlation</run>
              <run fontcolor='#000000' fontsize='14'> between mean price and mean review score from </run>
              <run fontcolor='#e15759' fontsize='14'>-1</run>
              <run fontcolor='#000000' fontsize='14'> to </run>
              <run fontcolor='#59a14f' fontsize='14'>1</run>
              <run fontcolor='#000000' fontsize='14'>.</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='192.50079006772006'>
                  <node-reference>
                    <axis>[federated.113x8ik159y66w10tsm371rhe4fj].[avg:Price:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='41.749146757679185'>
                  <node-reference>
                    <axis>[federated.113x8ik159y66w10tsm371rhe4fj].[avg:Review Scores Rating:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='506.4128668171557'>
                  <node-reference>
                    <axis>[federated.113x8ik159y66w10tsm371rhe4fj].[avg:Price:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='10.034129692832764'>
                  <node-reference>
                    <axis>[federated.113x8ik159y66w10tsm371rhe4fj].[avg:Review Scores Rating:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='310'>
            <formatted-text>
              <run fontalignment='1' fontcolor='#787878' fontsize='12'>Property Type: </run>
              <run bold='true' fontalignment='1' fontsize='12'><![CDATA[<[federated.113x8ik159y66w10tsm371rhe4fj].[none:Property Type:nk]>]]></run>
              <run fontalignment='1'>Æ&#10;</run>
              <run fontalignment='1' fontcolor='#787878' fontsize='12'>Host Since: </run>
              <run bold='true' fontalignment='1' fontsize='12'><![CDATA[<[federated.113x8ik159y66w10tsm371rhe4fj].[yr:Host Since:ok]>]]></run>
              <run fontalignment='1'>Æ&#10;</run>
              <run fontalignment='1' fontcolor='#787878' fontsize='12'>Avg. Price: </run>
              <run bold='true' fontalignment='1' fontsize='12'><![CDATA[<[federated.113x8ik159y66w10tsm371rhe4fj].[avg:Price:qk]>]]></run>
              <run fontalignment='1'>Æ&#10;</run>
              <run fontalignment='1' fontcolor='#787878' fontsize='12'>Avg. Review Scores Rating: </run>
              <run bold='true' fontalignment='1' fontsize='12'><![CDATA[<[federated.113x8ik159y66w10tsm371rhe4fj].[avg:Review Scores Rating:qk]>]]></run>
              <run fontalignment='1'>Æ&#10;</run>
              <run fontalignment='1' fontcolor='#787878' fontsize='12'>Correlation: </run>
              <run bold='true' fontalignment='1' fontsize='12'><![CDATA[<[federated.113x8ik159y66w10tsm371rhe4fj].[usr:Calculation_96827440622538752:qk:3]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.113x8ik159y66w10tsm371rhe4fj].[avg:Price:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.113x8ik159y66w10tsm371rhe4fj].[avg:Review Scores Rating:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.113x8ik159y66w10tsm371rhe4fj].[avg:Price:qk]</field>
                      <field>[federated.113x8ik159y66w10tsm371rhe4fj].[avg:Review Scores Rating:qk]</field>
                      <field>[federated.113x8ik159y66w10tsm371rhe4fj].[none:Property Type:nk]</field>
                      <field>[federated.113x8ik159y66w10tsm371rhe4fj].[yr:Host Since:ok]</field>
                      <field>[federated.113x8ik159y66w10tsm371rhe4fj].[usr:Calculation_96827440622538752:qk:3]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>102.14285714285714</value>
                    <value>75.0</value>
                    <value>&quot;Dorm&quot;</value>
                    <value>2014</value>
                    <value>0.37700062943530249</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='369' y='45' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{396676C2-C2C8-4A3E-8C04-245E32E99308}' />
    </worksheet>
    <worksheet name='Purvi: Data Analysis Using Cluster'>
      <layout-options>
        <caption>
          <formatted-text>
            <run bold='true' fontsize='12'>Which category does mostly in top 100 hosts by review scores rating belong to?</run>
            <run>Æ&#10;&#10;</run>
            <run bold='true' fontsize='12'>Ans-Brooklyn,Private room type in the House property.</run>
            <run>Æ&#10;&#10;</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb_final (2)' name='federated.113x8ik159y66w10tsm371rhe4fj (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.113x8ik159y66w10tsm371rhe4fj (copy)'>
            <column auto-hidden='true' caption='Clusters (3)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:4]' parent-model='[AnalyticModel:{ce4c3a19-5032-4088-8047-6f3a9bf32d50}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='integer' name='[Host Id]' role='dimension' type='ordinal' />
            <column caption='Area in New York' datatype='string' name='[Neighbourhood]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Property Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Review Scores Rating]' role='measure' type='quantitative' />
            <column datatype='string' name='[Room Type]' role='dimension' type='nominal' />
            <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Review Scores Rating]' derivation='Avg' name='[avg:Review Scores Rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Top 100 hosts based on review rating]' derivation='InOut' name='[io:Top 100 hosts based on review rating:nk]' pivot='key' type='nominal' />
            <column-instance column='[AdhocCluster:4]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:4:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Host Id]' derivation='None' name='[none:Host Id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neighbourhood]' derivation='None' name='[none:Neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[Property Type]' derivation='None' name='[none:Property Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Room Type]' derivation='None' name='[none:Room Type:nk]' pivot='key' type='nominal' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:4:ok]' type='palette'>
                  <map to='#4e79a7'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#59a14f'>
                    <bucket>5</bucket>
                  </map>
                  <map to='#76b7b2'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#b07aa1'>
                    <bucket>0</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#edc948'>
                    <bucket>6</bucket>
                  </map>
                  <map to='#f28e2b'>
                    <bucket>2</bucket>
                  </map>
                </encoding>
                <encoding attr='shape' field='[none:AdhocCluster:4:ok]' type='shape'>
                  <map to='circle'>
                    <bucket>1</bucket>
                  </map>
                  <map to='plus'>
                    <bucket>3</bucket>
                  </map>
                  <map to='square'>
                    <bucket>2</bucket>
                  </map>
                  <map to='times'>
                    <bucket>4</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[Top 100 hosts based on review rating]' />
          <filter class='quantitative' column='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[avg:Review Scores Rating:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[io:Top 100 hosts based on review rating:nk]'>
            <groupfilter function='level-members' level='[io:Top 100 hosts based on review rating:nk]' />
          </filter>
          <filter class='categorical' column='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[none:AdhocCluster:4:ok]'>
            <groupfilter function='member' level='[none:AdhocCluster:4:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[none:Neighbourhood:nk]'>
            <groupfilter function='member' level='[none:Neighbourhood:nk]' member='&quot;Brooklyn&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[none:Property Type:nk]'>
            <groupfilter function='member' level='[none:Property Type:nk]' member='&quot;House&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[none:Room Type:nk]'>
            <groupfilter function='member' level='[none:Room Type:nk]' member='&quot;Private room&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[io:Top 100 hosts based on review rating:nk]</column>
            <column>[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[Top 100 hosts based on review rating]</column>
            <column>[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[none:AdhocCluster:4:ok]</column>
            <column>[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[none:Property Type:nk]</column>
            <column>[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[none:Room Type:nk]</column>
            <column>[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[none:Neighbourhood:nk]</column>
            <column>[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[avg:Review Scores Rating:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[avg:Review Scores Rating:qk]' field-type='quantitative' max='105.0' min='80.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <shape column='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[none:AdhocCluster:4:ok]' />
              <lod column='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[Top 100 hosts based on review rating]' />
              <color column='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[none:Neighbourhood:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[avg:Review Scores Rating:qk]</rows>
        <cols>[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[avg:Price:qk]</cols>
      </table>
      <simple-id uuid='{8CBC3F3B-6866-40AA-B849-7D867C641B5F}' />
    </worksheet>
    <worksheet name='Purvi: K Means clustering using Tabpy'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb_final (3)' name='federated.113x8ik159y66w10tsm371rhe4fj (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='KMeans' caption='Clustering Method' datatype='integer' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='1'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Number Clusters' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
              <range granularity='1' max='5' min='2' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.113x8ik159y66w10tsm371rhe4fj (copy 2)'>
            <column datatype='integer' name='[Beds]' role='measure' type='quantitative' />
            <column caption='_cluster' datatype='integer' name='[Calculation_76139029705187328]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT(SCRIPT_REAL(&quot;&#10;import numpy as np&#10;import numpy.ma as ma&#10;from sklearn.preprocessing import StandardScaler&#10;from sklearn.cluster import KMeans, AffinityPropagation, MiniBatchKMeans&#10;print(&apos;Start&apos;)&#10;sc= StandardScaler()&#10;&#10;avg_price = sc.fit_transform(np.array(_arg1).reshape(-1,1))&#10;med_review = sc.fit_transform(np.array(_arg2).reshape(-1,1))&#10;med_beds = sc.fit_transform(np.array(_arg3).reshape(-1,1))&#10;sum_review = sc.fit_transform(np.array(_arg4).reshape(-1,1))&#10;n_cl = _arg5[0]&#10;&#10;X_comb = np.column_stack([avg_price, med_review, med_beds, sum_review])&#10;X = np.where(np.isnan(X_comb), ma.array(X_comb, mask=np.isnan(X_comb)).mean(axis=0), X_comb)&#10;result = []&#10;if _arg6[0]==1:&#10;    kmeans = KMeans(n_clusters = n_cl, random_state=134)&#10;    result = kmeans.fit_predict(X).tolist()&#10;elif _arg6[0]==2:&#10;    minib = MiniBatchKMeans(n_clusters = n_cl, random_state=134)&#10;    result =  minib.fit_predict(X).tolist()&#10;else:&#10;    aff = AffinityPropagation().fit(X)&#10;    result = aff.predict(X).tolist()&#10;return result&#10;&quot;,&#10;AVG([Price]),&#10;MEDIAN([Review Scores Rating]),&#10;MEDIAN([Beds]),&#10;sum([Number Of Reviews]),&#10;[Parameters].[Parameter 2],&#10;[Parameters].[Parameter 1]&#10;))'>
                <table-calc ordering-field='[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[Zipcode]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Area in New York' datatype='string' name='[Neighbourhood]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number Of Reviews]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Review Scores Rating]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[Neighbourhood]' derivation='None' name='[none:Neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[Zipcode]' derivation='None' name='[none:Zipcode:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_76139029705187328]' derivation='User' name='[usr:Calculation_76139029705187328:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[Zipcode]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[usr:Calculation_76139029705187328:qk:1]' included-values='in-range'>
            <min>0</min>
            <max>5</max>
          </filter>
          <slices>
            <column>[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[usr:Calculation_76139029705187328:qk:1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[Longitude (generated)]' field-type='quantitative' max='-8181546.9039742127' min='-8274003.4024050962' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[Latitude (generated)]' field-type='quantitative' max='5000164.7276547188' min='4924781.5729805492' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[none:Zipcode:ok]' />
              <color column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[usr:Calculation_76139029705187328:qk:1]' />
              <text column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[none:Neighbourhood:nk]' />
              <geometry column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[Latitude (generated)]</rows>
        <cols>[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C0F1B68B-9025-46EC-8A26-65EF68C84C4E}' />
    </worksheet>
    <worksheet name='Shanka: Pareto Graph(20% of Zipcodes brings 80% of Price Genetrating Properties.)'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb_final (airbnb_final)' name='federated.0cvv3ht103mwez10jau510z4anki' />
          </datasources>
          <datasource-dependencies datasource='federated.0cvv3ht103mwez10jau510z4anki'>
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[Zipcode]' derivation='None' name='[none:Zipcode:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Zipcode]' derivation='CountD' name='[pcto:cum:ctd:Zipcode:qk:2]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.0cvv3ht103mwez10jau510z4anki].[Zipcode]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[federated.0cvv3ht103mwez10jau510z4anki].[Zipcode]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Price]' derivation='Sum' name='[pcto:cum:sum:Price:qk:10]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-field='[federated.0cvv3ht103mwez10jau510z4anki].[none:Zipcode:ok]' ordering-type='Field' type='CumTotal' />
              <table-calc ordering-field='[federated.0cvv3ht103mwez10jau510z4anki].[none:Zipcode:ok]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0cvv3ht103mwez10jau510z4anki].[none:Zipcode:ok]' direction='DESC' using='[federated.0cvv3ht103mwez10jau510z4anki].[sum:Price:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0cvv3ht103mwez10jau510z4anki].[sum:Price:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0' field='[federated.0cvv3ht103mwez10jau510z4anki].[sum:Price:qk]' palette='gray_10_0' type='interpolated' />
            <encoding attr='color' center='0.20000000000000001' field='[federated.0cvv3ht103mwez10jau510z4anki].[pcto:cum:ctd:Zipcode:qk:2]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0cvv3ht103mwez10jau510z4anki].[none:Zipcode:ok]' />
            </encodings>
            <reference-line axis-column='[federated.0cvv3ht103mwez10jau510z4anki].[pcto:cum:sum:Price:qk:10]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='0.80000000000000004' value-column='[federated.0cvv3ht103mwez10jau510z4anki].[pcto:cum:sum:Price:qk:10]' z-order='1' />
            <reference-line axis-column='[federated.0cvv3ht103mwez10jau510z4anki].[pcto:cum:ctd:Zipcode:qk:2]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='0.20000000000000001' value-column='[federated.0cvv3ht103mwez10jau510z4anki].[pcto:cum:ctd:Zipcode:qk:2]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0cvv3ht103mwez10jau510z4anki].[pcto:cum:sum:Price:qk:10]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0cvv3ht103mwez10jau510z4anki].[pcto:cum:ctd:Zipcode:qk:2]' />
              <lod column='[federated.0cvv3ht103mwez10jau510z4anki].[none:Zipcode:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0cvv3ht103mwez10jau510z4anki].[sum:Price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0cvv3ht103mwez10jau510z4anki].[sum:Price:qk]' />
              <lod column='[federated.0cvv3ht103mwez10jau510z4anki].[none:Zipcode:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0cvv3ht103mwez10jau510z4anki].[pcto:cum:sum:Price:qk:10] + [federated.0cvv3ht103mwez10jau510z4anki].[sum:Price:qk])</rows>
        <cols>[federated.0cvv3ht103mwez10jau510z4anki].[pcto:cum:ctd:Zipcode:qk:2]</cols>
      </table>
      <simple-id uuid='{AEA4931B-CAFC-4B02-A596-88F9EC56D4D2}' />
    </worksheet>
    <worksheet name='Tanvir: Number of Reviews vs Rating Score Correlation'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb_final (6)' name='federated.113x8ik159y66w10tsm371rhe4fj (copy 5)' />
          </datasources>
          <datasource-dependencies datasource='federated.113x8ik159y66w10tsm371rhe4fj (copy 5)'>
            <column caption='Pearson Correlation Coefficient' datatype='real' name='[Calculation_1985102322258432002]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR ( &#10;{INCLUDE ([Host Id]) : AVG([Number Of Reviews])},&#10;{INCLUDE ([Host Id]) : AVG([Review Scores Rating])}&#10;)' />
            </column>
            <column datatype='integer' name='[Host Id]' role='dimension' type='ordinal' />
            <column datatype='date' name='[Host Since]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Neighbourhood]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number Of Reviews]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Review Scores Rating]' role='measure' type='quantitative' />
            <column-instance column='[Neighbourhood]' derivation='None' name='[none:Neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1985102322258432002]' derivation='User' name='[usr:Calculation_1985102322258432002:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Host Since]' derivation='Year' name='[yr:Host Since:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[Exclusions (Neighbourhood,YEAR(Host Since))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Neighbourhood:nk]' />
                <groupfilter function='level-members' level='[yr:Host Since:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Neighbourhood:nk]' member='&quot;Bronx&quot;' />
                <groupfilter function='member' level='[yr:Host Since:ok]' member='2009' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[Exclusions (Neighbourhood,YEAR(Host Since))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[none:Neighbourhood:nk]' value='64' />
            <format attr='width' field='[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[yr:Host Since:ok]' value='87' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[none:Neighbourhood:nk]' value='104' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[usr:Calculation_1985102322258432002:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[usr:Calculation_1985102322258432002:qk]' />
              <text column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[usr:Calculation_1985102322258432002:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='18'><![CDATA[<[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[none:Neighbourhood:nk]>]]></run>
                <run bold='true'><![CDATA[(<[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[yr:Host Since:ok]>)]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='16'>Pearson Correlation Coefficient:</run>
                <run bold='true' fontsize='16'><![CDATA[<[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[usr:Calculation_1985102322258432002:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='density-kernel-size' value='3.922652006149292' />
                <format attr='size' value='1.9230387210845947' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='cell' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[none:Neighbourhood:nk]</rows>
        <cols>[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[yr:Host Since:ok]</cols>
      </table>
      <simple-id uuid='{121BD01D-5BD7-4B0D-A0D5-8CD6DBFFBE32}' />
    </worksheet>
    <worksheet name='Tanvir: Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb_final (6)' name='federated.113x8ik159y66w10tsm371rhe4fj (copy 5)' />
          </datasources>
          <datasource-dependencies datasource='federated.113x8ik159y66w10tsm371rhe4fj (copy 5)'>
            <column auto-hidden='true' caption='Clusters (3)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:4]' parent-model='[AnalyticModel:{36d491b3-ca03-45a2-809f-f313925cb492}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='integer' name='[Beds]' role='measure' type='quantitative' />
            <column datatype='string' name='[Neighbourhood]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Property Type]' role='dimension' type='nominal' />
            <column-instance column='[Beds]' derivation='Avg' name='[avg:Beds:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Price]' derivation='Median' name='[med:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AdhocCluster:4]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:4:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Neighbourhood]' derivation='None' name='[none:Neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[Property Type]' derivation='None' name='[none:Property Type:nk]' pivot='key' type='nominal' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:4:ok]' type='palette'>
                  <map to='#4e79a7'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#76b7b2'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#f28e2b'>
                    <bucket>2</bucket>
                  </map>
                </encoding>
                <encoding attr='shape' field='[none:AdhocCluster:4:ok]' palette=':default' type='shape'>
                  <map to='asterisk'>
                    <bucket>5</bucket>
                  </map>
                  <map to='circle'>
                    <bucket>1</bucket>
                  </map>
                  <map to='plus'>
                    <bucket>3</bucket>
                  </map>
                  <map to='square'>
                    <bucket>2</bucket>
                  </map>
                  <map to='times'>
                    <bucket>4</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[avg:Beds:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <shape column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[none:AdhocCluster:4:ok]' />
              <color column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[:Measure Names]' />
              <lod column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[none:Neighbourhood:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='18'><![CDATA[<[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[none:AdhocCluster:4:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>Property Type:&#9;</run>
                <run bold='true' fontsize='16'><![CDATA[<[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[none:Property Type:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>Avg. Price:&#9;</run>
                <run bold='true' fontsize='16'><![CDATA[<[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[avg:Price:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[avg:Price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <shape column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[none:AdhocCluster:4:ok]' />
              <color column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[:Measure Names]' />
              <lod column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[none:Neighbourhood:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>Property Type:&#9;</run>
                <run bold='true' fontsize='16'><![CDATA[<[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[none:Property Type:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>Avg. Price:&#9;</run>
                <run bold='true' fontsize='16'><![CDATA[<[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[avg:Price:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1314364671707153' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[avg:Beds:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <shape column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[none:AdhocCluster:4:ok]' />
              <color column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[:Measure Names]' />
              <lod column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[none:Neighbourhood:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='18'><![CDATA[<[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[none:Neighbourhood:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>Property Type:&#9;</run>
                <run bold='true' fontsize='16'><![CDATA[<[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[none:Property Type:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>Avg. Price:&#9;</run>
                <run bold='true' fontsize='16'><![CDATA[<[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[avg:Price:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1314364671707153' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[avg:Price:qk] + [federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[avg:Beds:qk])</rows>
        <cols>[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[none:Property Type:nk]</cols>
      </table>
      <simple-id uuid='{FB2C836C-06A7-4BE7-BF59-BE0225B05527}' />
    </worksheet>
    <worksheet name='Vrinda: Review Score Rating vs price'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb_final (5)' name='federated.113x8ik159y66w10tsm371rhe4fj (copy 4)' />
          </datasources>
          <datasource-dependencies datasource='federated.113x8ik159y66w10tsm371rhe4fj (copy 4)'>
            <column auto-hidden='true' caption='Clusters (2)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:3]' parent-model='[AnalyticModel:{8b4b94c5-2436-449b-90b9-30dc13851526}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='integer' name='[Number Of Reviews]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Property Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Review Scores Rating]' role='measure' type='quantitative' />
            <column datatype='string' name='[Room Type]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[AdhocCluster:3]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:3:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Property Type]' derivation='None' name='[none:Property Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Room Type]' derivation='None' name='[none:Room Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Zipcode]' derivation='None' name='[none:Zipcode:ok]' pivot='key' type='ordinal' />
            <column caption='pearson correlation price and review score rating' datatype='real' name='[pearson correlation price and reviews (copy)_123708300938661894]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;import numpy as np&#10;return np.corrcoef(_arg1,_arg2)[0,1]&quot;,&#10;SUM([Price]),sum([Number Of Reviews]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Review Scores Rating]' derivation='Sum' name='[sum:Review Scores Rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pearson correlation price and reviews (copy)_123708300938661894]' derivation='User' name='[usr:pearson correlation price and reviews (copy)_123708300938661894:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[Zipcode]' ordering-type='Field' />
            </column-instance>
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:3:ok]' type='palette'>
                  <map to='#499894'>
                    <bucket>9</bucket>
                  </map>
                  <map to='#4e79a7'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#4e79a7'>
                    <bucket>21</bucket>
                  </map>
                  <map to='#59a14f'>
                    <bucket>5</bucket>
                  </map>
                  <map to='#59a14f'>
                    <bucket>25</bucket>
                  </map>
                  <map to='#79706e'>
                    <bucket>13</bucket>
                  </map>
                  <map to='#86bcb6'>
                    <bucket>10</bucket>
                  </map>
                  <map to='#8cd17d'>
                    <bucket>0</bucket>
                  </map>
                  <map to='#8cd17d'>
                    <bucket>6</bucket>
                  </map>
                  <map to='#9d7660'>
                    <bucket>19</bucket>
                  </map>
                  <map to='#a0cbe8'>
                    <bucket>2</bucket>
                  </map>
                  <map to='#a0cbe8'>
                    <bucket>22</bucket>
                  </map>
                  <map to='#b07aa1'>
                    <bucket>17</bucket>
                  </map>
                  <map to='#b6992d'>
                    <bucket>7</bucket>
                  </map>
                  <map to='#bab0ac'>
                    <bucket>14</bucket>
                  </map>
                  <map to='#d37295'>
                    <bucket>15</bucket>
                  </map>
                  <map to='#d4a6c8'>
                    <bucket>18</bucket>
                  </map>
                  <map to='#d7b5a6'>
                    <bucket>20</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>11</bucket>
                  </map>
                  <map to='#f1ce63'>
                    <bucket>8</bucket>
                  </map>
                  <map to='#f28e2b'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#f28e2b'>
                    <bucket>23</bucket>
                  </map>
                  <map to='#fabfd2'>
                    <bucket>16</bucket>
                  </map>
                  <map to='#ff9d9a'>
                    <bucket>12</bucket>
                  </map>
                  <map to='#ffbe7d'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#ffbe7d'>
                    <bucket>24</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:AdhocCluster:3:ok]'>
            <groupfilter function='level-members' level='[none:AdhocCluster:3:ok]' />
          </filter>
          <filter class='categorical' column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:AdhocCluster:3:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:AdhocCluster:3:ok]' />
              <groupfilter function='member' level='[none:AdhocCluster:3:ok]' member='0' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:AdhocCluster:3:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[sum:Price:qk]' field-type='quantitative' max='200000' min='0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[sum:Review Scores Rating:qk]' field-type='quantitative' max='60000' min='0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <shape column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:Room Type:nk]' />
              <lod column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[usr:pearson correlation price and reviews (copy)_123708300938661894:qk:1]' />
              <lod column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:Property Type:nk]' />
              <color column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:AdhocCluster:3:ok]' />
              <lod column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:Zipcode:ok]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='log' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[sum:Review Scores Rating:qk]</rows>
        <cols total='true'>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[sum:Price:qk]</cols>
        <annotations>
          <annotation class='area' id='3' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Pearson correlation along with clustering was used to find the relation between Review score rating and Price.</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='6282.7225130890047'>
                  <node-reference>
                    <axis>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[sum:Price:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='58848.167539267015'>
                  <node-reference>
                    <axis>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[sum:Review Scores Rating:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='124258.28970331587'>
                  <node-reference>
                    <axis>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[sum:Price:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='48481.675392670164'>
                  <node-reference>
                    <axis>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[sum:Review Scores Rating:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{5132ABF0-FDA1-47E9-BED8-AB7CEB2749C0}' />
    </worksheet>
    <worksheet name='Vrinda: no of reviews vs price'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Vrinda_number of reviews vs price</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb_final (5)' name='federated.113x8ik159y66w10tsm371rhe4fj (copy 4)' />
          </datasources>
          <datasource-dependencies datasource='federated.113x8ik159y66w10tsm371rhe4fj (copy 4)'>
            <column datatype='string' name='[Neighbourhood]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number Of Reviews]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Room Type]' role='dimension' type='nominal' />
            <column-instance column='[Neighbourhood]' derivation='None' name='[none:Neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[Room Type]' derivation='None' name='[none:Room Type:nk]' pivot='key' type='nominal' />
            <column caption='pearson correlation price and reviews' datatype='real' name='[pearson correlation (copy)_123708300934279173]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;import numpy as np&#10;return np.corrcoef(_arg1,_arg2)[0,1]&quot;,&#10;SUM([Price]),sum([Number Of Reviews]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Number Of Reviews]' derivation='Sum' name='[sum:Number Of Reviews:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Price]' derivation='Sum' name='[sum:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pearson correlation (copy)_123708300934279173]' derivation='User' name='[usr:pearson correlation (copy)_123708300934279173:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[Neighbourhood]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#f5eddc' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:Neighbourhood:nk]' />
              <lod column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[usr:pearson correlation (copy)_123708300934279173:qk:3]' />
              <lod column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:Room Type:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <reference-line axis-column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[sum:Price:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' tooltip-type='none' value-column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[sum:Price:qk]' z-order='1' />
            <reference-line axis-column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[sum:Number Of Reviews:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[sum:Number Of Reviews:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[sum:Number Of Reviews:qk]</rows>
        <cols>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[sum:Price:qk]</cols>
        <annotations>
          <annotation class='area' id='4' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Pearson Correlation is used to find correlation between 2 sets of data . Here i`ve used to find correlation between Number of reviews and Price.</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1601678.0785536161'>
                  <node-reference>
                    <axis>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[sum:Price:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='78131.178304239394'>
                  <node-reference>
                    <axis>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[sum:Number Of Reviews:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2264853.2356608477'>
                  <node-reference>
                    <axis>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[sum:Price:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='54143.522443890273'>
                  <node-reference>
                    <axis>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[sum:Number Of Reviews:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{6CACF02A-6FFE-4CA3-B9BA-593A56071519}' />
    </worksheet>
    <worksheet name='Vrinda: price vs beds'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb_final (5)' name='federated.113x8ik159y66w10tsm371rhe4fj (copy 4)' />
          </datasources>
          <datasource-dependencies datasource='federated.113x8ik159y66w10tsm371rhe4fj (copy 4)'>
            <column datatype='integer' name='[Beds]' role='measure' type='quantitative' />
            <column caption='pearson correlation avg price and beds' datatype='real' name='[Calculation_123708300790829056]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;import numpy as np&#10;return np.corrcoef(_arg1,_arg2)[0,1]&quot;,&#10;AVG([Price]),AVG([Beds]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Neighbourhood]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Property Type]' role='dimension' type='nominal' />
            <column-instance column='[Beds]' derivation='Avg' name='[avg:Beds:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Price]' derivation='Avg' name='[avg:Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Neighbourhood]' derivation='None' name='[none:Neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[Property Type]' derivation='None' name='[none:Property Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_123708300790829056]' derivation='User' name='[usr:Calculation_123708300790829056:qk:6]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[Neighbourhood]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[usr:Calculation_123708300790829056:qk:6]' included-values='all' />
          <slices>
            <column>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[usr:Calculation_123708300790829056:qk:6]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:Neighbourhood:nk]' />
              <lod column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[usr:Calculation_123708300790829056:qk:6]' />
              <lod column='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:Property Type:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[avg:Beds:qk]</rows>
        <cols>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[avg:Price:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Avg. Beds: </run>
              <run bold='true'><![CDATA[<[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[avg:Beds:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Avg. Price: </run>
              <run bold='true'><![CDATA[<[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[avg:Price:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1327.9799247176916'>
                  <node-reference>
                    <axis>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[avg:Price:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='3.937829360100376'>
                  <node-reference>
                    <axis>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[avg:Beds:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Neighbourhood: </run>
              <run bold='true'><![CDATA[<[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:Neighbourhood:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Property Type: </run>
              <run bold='true'><![CDATA[<[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:Property Type:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Avg. Beds: </run>
              <run bold='true'><![CDATA[<[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[avg:Beds:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Avg. Price: </run>
              <run bold='true'><![CDATA[<[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[avg:Price:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>pearson correlation avg price and beds along Neighbourhood: </run>
              <run bold='true'><![CDATA[<[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[usr:Calculation_123708300790829056:qk:6]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[avg:Price:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[avg:Beds:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[avg:Beds:qk]</field>
                      <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[avg:Price:qk]</field>
                      <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:Neighbourhood:nk]</field>
                      <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:Property Type:nk]</field>
                      <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[usr:Calculation_123708300790829056:qk:6]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>1.1666666666666667</value>
                    <value>730.83333333333337</value>
                    <value>&quot;Queens&quot;</value>
                    <value>&quot;Other&quot;</value>
                    <value>0.23489611592443244</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Avg. Beds: </run>
              <run bold='true'><![CDATA[<[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[avg:Beds:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Avg. Price: </run>
              <run bold='true'><![CDATA[<[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[avg:Price:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='320.13801756587202'>
                  <node-reference>
                    <axis>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[avg:Price:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='2.4438519447929736'>
                  <node-reference>
                    <axis>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[avg:Beds:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{8CB1F76B-4AF8-465E-B805-563501DFD18C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='airbnb_final' name='federated.113x8ik159y66w10tsm371rhe4fj' />
        <datasource caption='airbnb_final (5)' name='federated.113x8ik159y66w10tsm371rhe4fj (copy 4)' />
        <datasource caption='airbnb_final (2)' name='federated.113x8ik159y66w10tsm371rhe4fj (copy)' />
      </datasources>
      <datasource-dependencies datasource='federated.113x8ik159y66w10tsm371rhe4fj'>
        <column datatype='string' name='[Neighbourhood]' role='dimension' type='nominal' />
        <column-instance column='[Neighbourhood]' derivation='None' name='[none:Neighbourhood:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.113x8ik159y66w10tsm371rhe4fj (copy 4)'>
        <column auto-hidden='true' caption='Clusters (2)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:3]' parent-model='[AnalyticModel:{8b4b94c5-2436-449b-90b9-30dc13851526}]' role='dimension' type='ordinal'>
          <aliases>
            <alias key='-1' value='Cluster Outliers' />
            <alias key='0' value='Not Clustered' />
            <alias key='1' value='Cluster 1' />
            <alias key='2' value='Cluster 2' />
            <alias key='3' value='Cluster 3' />
            <alias key='4' value='Cluster 4' />
            <alias key='5' value='Cluster 5' />
            <alias key='6' value='Cluster 6' />
            <alias key='7' value='Cluster 7' />
            <alias key='8' value='Cluster 8' />
            <alias key='9' value='Cluster 9' />
            <alias key='10' value='Cluster 10' />
            <alias key='11' value='Cluster 11' />
            <alias key='12' value='Cluster 12' />
            <alias key='13' value='Cluster 13' />
            <alias key='14' value='Cluster 14' />
            <alias key='15' value='Cluster 15' />
            <alias key='16' value='Cluster 16' />
            <alias key='17' value='Cluster 17' />
            <alias key='18' value='Cluster 18' />
            <alias key='19' value='Cluster 19' />
            <alias key='20' value='Cluster 20' />
            <alias key='21' value='Cluster 21' />
            <alias key='22' value='Cluster 22' />
            <alias key='23' value='Cluster 23' />
            <alias key='24' value='Cluster 24' />
            <alias key='25' value='Cluster 25' />
            <alias key='26' value='Cluster 26' />
            <alias key='27' value='Cluster 27' />
            <alias key='28' value='Cluster 28' />
            <alias key='29' value='Cluster 29' />
            <alias key='30' value='Cluster 30' />
            <alias key='31' value='Cluster 31' />
            <alias key='32' value='Cluster 32' />
            <alias key='33' value='Cluster 33' />
            <alias key='34' value='Cluster 34' />
            <alias key='35' value='Cluster 35' />
            <alias key='36' value='Cluster 36' />
            <alias key='37' value='Cluster 37' />
            <alias key='38' value='Cluster 38' />
            <alias key='39' value='Cluster 39' />
            <alias key='40' value='Cluster 40' />
            <alias key='41' value='Cluster 41' />
            <alias key='42' value='Cluster 42' />
            <alias key='43' value='Cluster 43' />
            <alias key='44' value='Cluster 44' />
            <alias key='45' value='Cluster 45' />
            <alias key='46' value='Cluster 46' />
            <alias key='47' value='Cluster 47' />
            <alias key='48' value='Cluster 48' />
            <alias key='49' value='Cluster 49' />
            <alias key='50' value='Cluster 50' />
          </aliases>
        </column>
        <column-instance column='[AdhocCluster:3]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:3:ok]' pivot='key' type='ordinal' />
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[none:AdhocCluster:3:ok]' type='palette'>
              <map to='#499894'>
                <bucket>9</bucket>
              </map>
              <map to='#4e79a7'>
                <bucket>1</bucket>
              </map>
              <map to='#4e79a7'>
                <bucket>21</bucket>
              </map>
              <map to='#59a14f'>
                <bucket>5</bucket>
              </map>
              <map to='#59a14f'>
                <bucket>25</bucket>
              </map>
              <map to='#79706e'>
                <bucket>13</bucket>
              </map>
              <map to='#86bcb6'>
                <bucket>10</bucket>
              </map>
              <map to='#8cd17d'>
                <bucket>0</bucket>
              </map>
              <map to='#8cd17d'>
                <bucket>6</bucket>
              </map>
              <map to='#9d7660'>
                <bucket>19</bucket>
              </map>
              <map to='#a0cbe8'>
                <bucket>2</bucket>
              </map>
              <map to='#a0cbe8'>
                <bucket>22</bucket>
              </map>
              <map to='#b07aa1'>
                <bucket>17</bucket>
              </map>
              <map to='#b6992d'>
                <bucket>7</bucket>
              </map>
              <map to='#bab0ac'>
                <bucket>14</bucket>
              </map>
              <map to='#d37295'>
                <bucket>15</bucket>
              </map>
              <map to='#d4a6c8'>
                <bucket>18</bucket>
              </map>
              <map to='#d7b5a6'>
                <bucket>20</bucket>
              </map>
              <map to='#e15759'>
                <bucket>11</bucket>
              </map>
              <map to='#f1ce63'>
                <bucket>8</bucket>
              </map>
              <map to='#f28e2b'>
                <bucket>3</bucket>
              </map>
              <map to='#f28e2b'>
                <bucket>23</bucket>
              </map>
              <map to='#fabfd2'>
                <bucket>16</bucket>
              </map>
              <map to='#ff9d9a'>
                <bucket>12</bucket>
              </map>
              <map to='#ffbe7d'>
                <bucket>4</bucket>
              </map>
              <map to='#ffbe7d'>
                <bucket>24</bucket>
              </map>
            </encoding>
          </style-rule>
        </style>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.113x8ik159y66w10tsm371rhe4fj (copy)'>
        <column auto-hidden='true' caption='Clusters (3)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:4]' parent-model='[AnalyticModel:{ce4c3a19-5032-4088-8047-6f3a9bf32d50}]' role='dimension' type='ordinal'>
          <aliases>
            <alias key='-1' value='Cluster Outliers' />
            <alias key='0' value='Not Clustered' />
            <alias key='1' value='Cluster 1' />
            <alias key='2' value='Cluster 2' />
            <alias key='3' value='Cluster 3' />
            <alias key='4' value='Cluster 4' />
            <alias key='5' value='Cluster 5' />
            <alias key='6' value='Cluster 6' />
            <alias key='7' value='Cluster 7' />
            <alias key='8' value='Cluster 8' />
            <alias key='9' value='Cluster 9' />
            <alias key='10' value='Cluster 10' />
            <alias key='11' value='Cluster 11' />
            <alias key='12' value='Cluster 12' />
            <alias key='13' value='Cluster 13' />
            <alias key='14' value='Cluster 14' />
            <alias key='15' value='Cluster 15' />
            <alias key='16' value='Cluster 16' />
            <alias key='17' value='Cluster 17' />
            <alias key='18' value='Cluster 18' />
            <alias key='19' value='Cluster 19' />
            <alias key='20' value='Cluster 20' />
            <alias key='21' value='Cluster 21' />
            <alias key='22' value='Cluster 22' />
            <alias key='23' value='Cluster 23' />
            <alias key='24' value='Cluster 24' />
            <alias key='25' value='Cluster 25' />
            <alias key='26' value='Cluster 26' />
            <alias key='27' value='Cluster 27' />
            <alias key='28' value='Cluster 28' />
            <alias key='29' value='Cluster 29' />
            <alias key='30' value='Cluster 30' />
            <alias key='31' value='Cluster 31' />
            <alias key='32' value='Cluster 32' />
            <alias key='33' value='Cluster 33' />
            <alias key='34' value='Cluster 34' />
            <alias key='35' value='Cluster 35' />
            <alias key='36' value='Cluster 36' />
            <alias key='37' value='Cluster 37' />
            <alias key='38' value='Cluster 38' />
            <alias key='39' value='Cluster 39' />
            <alias key='40' value='Cluster 40' />
            <alias key='41' value='Cluster 41' />
            <alias key='42' value='Cluster 42' />
            <alias key='43' value='Cluster 43' />
            <alias key='44' value='Cluster 44' />
            <alias key='45' value='Cluster 45' />
            <alias key='46' value='Cluster 46' />
            <alias key='47' value='Cluster 47' />
            <alias key='48' value='Cluster 48' />
            <alias key='49' value='Cluster 49' />
            <alias key='50' value='Cluster 50' />
          </aliases>
        </column>
        <column caption='Area in New York' datatype='string' name='[Neighbourhood]' role='dimension' type='nominal' />
        <column datatype='string' name='[Property Type]' role='dimension' type='nominal' />
        <column datatype='string' name='[Room Type]' role='dimension' type='nominal' />
        <column-instance column='[Top 100 hosts based on review rating]' derivation='InOut' name='[io:Top 100 hosts based on review rating:nk]' pivot='key' type='nominal' />
        <column-instance column='[AdhocCluster:4]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:4:ok]' pivot='key' type='ordinal' />
        <column-instance column='[Neighbourhood]' derivation='None' name='[none:Neighbourhood:nk]' pivot='key' type='nominal' />
        <column-instance column='[Property Type]' derivation='None' name='[none:Property Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Room Type]' derivation='None' name='[none:Room Type:nk]' pivot='key' type='nominal' />
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[none:AdhocCluster:4:ok]' type='palette'>
              <map to='#4e79a7'>
                <bucket>1</bucket>
              </map>
              <map to='#59a14f'>
                <bucket>5</bucket>
              </map>
              <map to='#76b7b2'>
                <bucket>4</bucket>
              </map>
              <map to='#b07aa1'>
                <bucket>0</bucket>
              </map>
              <map to='#e15759'>
                <bucket>3</bucket>
              </map>
              <map to='#edc948'>
                <bucket>6</bucket>
              </map>
              <map to='#f28e2b'>
                <bucket>2</bucket>
              </map>
            </encoding>
            <encoding attr='shape' field='[none:AdhocCluster:4:ok]' type='shape'>
              <map to='circle'>
                <bucket>1</bucket>
              </map>
              <map to='plus'>
                <bucket>3</bucket>
              </map>
              <map to='square'>
                <bucket>2</bucket>
              </map>
              <map to='times'>
                <bucket>4</bucket>
              </map>
            </encoding>
          </style-rule>
        </style>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone fixed-size='853' h='98000' id='5' is-fixed='true' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone fixed-size='114' h='19750' id='9' is-fixed='true' name='Daniyar: Price vs Review Correlation Heatmap' w='82400' x='800' y='1000'>
                <layout-cache type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='36625' id='12' name='Purvi: Data Analysis Using Cluster' w='82400' x='800' y='20750'>
                <layout-cache minwidth='159' type-h='fixed' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='41625' id='20' name='Vrinda: Review Score Rating vs price' w='82400' x='800' y='57375'>
                <layout-cache minwidth='174' type-h='fixed' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8125' id='11' name='Daniyar: Price vs Review Correlation Heatmap' pane-specification-id='0' param='[federated.113x8ik159y66w10tsm371rhe4fj].[usr:Calculation_188447545577762823:qk]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10140' id='10' name='Daniyar: Price vs Review Correlation Heatmap' param='[federated.113x8ik159y66w10tsm371rhe4fj].[none:Neighbourhood:nk]' type-v2='filter' w='16000' x='83200' y='9125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10140' id='13' name='Purvi: Data Analysis Using Cluster' param='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[none:Neighbourhood:nk]' type-v2='filter' w='16000' x='83200' y='19265'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10140' id='14' name='Purvi: Data Analysis Using Cluster' param='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[none:AdhocCluster:4:ok]' type-v2='filter' w='16000' x='83200' y='29405'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10140' id='15' name='Purvi: Data Analysis Using Cluster' param='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[none:Room Type:nk]' type-v2='filter' w='16000' x='83200' y='39545'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10140' id='16' name='Purvi: Data Analysis Using Cluster' param='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[none:Property Type:nk]' type-v2='filter' w='16000' x='83200' y='49685'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8750' id='17' name='Purvi: Data Analysis Using Cluster' param='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[io:Top 100 hosts based on review rating:nk]' type-v2='filter' w='16000' x='83200' y='59825'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10140' id='21' name='Vrinda: Review Score Rating vs price' param='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:AdhocCluster:3:ok]' type-v2='filter' w='16000' x='83200' y='68575'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10140' id='22' name='Vrinda: Review Score Rating vs price' pane-specification-id='0' param='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:Room Type:nk]' type-v2='shape' w='16000' x='83200' y='78715'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10145' id='23' name='Vrinda: Review Score Rating vs price' pane-specification-id='0' param='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:AdhocCluster:3:ok]' type-v2='color' w='16000' x='83200' y='88855'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='24' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='10140' id='10' mode='checkdropdown' name='Daniyar: Price vs Review Correlation Heatmap' param='[federated.113x8ik159y66w10tsm371rhe4fj].[none:Neighbourhood:nk]' type-v2='filter' w='16000' x='83200' y='9125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='150' h='19750' id='9' is-fixed='true' name='Daniyar: Price vs Review Correlation Heatmap' w='82400' x='800' y='1000'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='11' name='Daniyar: Price vs Review Correlation Heatmap' pane-specification-id='0' param='[federated.113x8ik159y66w10tsm371rhe4fj].[usr:Calculation_188447545577762823:qk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10140' id='13' mode='checkdropdown' name='Purvi: Data Analysis Using Cluster' param='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[none:Neighbourhood:nk]' type-v2='filter' w='16000' x='83200' y='19265'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10140' id='14' mode='checkdropdown' name='Purvi: Data Analysis Using Cluster' param='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[none:AdhocCluster:4:ok]' type-v2='filter' w='16000' x='83200' y='29405'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10140' id='15' mode='checkdropdown' name='Purvi: Data Analysis Using Cluster' param='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[none:Room Type:nk]' type-v2='filter' w='16000' x='83200' y='39545'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10140' id='16' mode='checkdropdown' name='Purvi: Data Analysis Using Cluster' param='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[none:Property Type:nk]' type-v2='filter' w='16000' x='83200' y='49685'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8750' id='17' mode='checkdropdown' name='Purvi: Data Analysis Using Cluster' param='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[io:Top 100 hosts based on review rating:nk]' type-v2='filter' w='16000' x='83200' y='59825'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36625' id='12' is-fixed='true' name='Purvi: Data Analysis Using Cluster' w='82400' x='800' y='20750'>
                  <layout-cache minwidth='159' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10140' id='21' mode='checkdropdown' name='Vrinda: Review Score Rating vs price' param='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:AdhocCluster:3:ok]' type-v2='filter' w='16000' x='83200' y='68575'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41625' id='20' is-fixed='true' name='Vrinda: Review Score Rating vs price' w='82400' x='800' y='57375'>
                  <layout-cache minwidth='174' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10140' id='22' name='Vrinda: Review Score Rating vs price' pane-specification-id='0' param='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:Room Type:nk]' type-v2='shape' w='16000' x='83200' y='78715'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10145' id='23' name='Vrinda: Review Score Rating vs price' pane-specification-id='0' param='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:AdhocCluster:3:ok]' type-v2='color' w='16000' x='83200' y='88855'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D95D181E-CE88-41CC-88C7-C95B728DF7F1}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='54000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='54000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='54000' id='12' name='Tanvir: Number of Reviews vs Rating Score Correlation' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='54000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8125' id='8' name='Shanka: Pareto Graph(20% of Zipcodes brings 80% of Price Genetrating Properties.)' pane-specification-id='1' param='[federated.0cvv3ht103mwez10jau510z4anki].[pcto:cum:ctd:Zipcode:qk:2]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='9' name='Shanka: Pareto Graph(20% of Zipcodes brings 80% of Price Genetrating Properties.)' pane-specification-id='2' param='[federated.0cvv3ht103mwez10jau510z4anki].[sum:Price:qk]' type-v2='color' w='16000' x='83200' y='9125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='13' name='Tanvir: Number of Reviews vs Rating Score Correlation' pane-specification-id='0' param='[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[usr:Calculation_1985102322258432002:qk]' type-v2='color' w='16000' x='83200' y='17250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='44000' id='3' name='Shanka: Pareto Graph(20% of Zipcodes brings 80% of Price Genetrating Properties.)' w='98400' x='800' y='55000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='15' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='14' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='54000' id='12' is-fixed='true' name='Tanvir: Number of Reviews vs Rating Score Correlation' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='13' name='Tanvir: Number of Reviews vs Rating Score Correlation' pane-specification-id='0' param='[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[usr:Calculation_1985102322258432002:qk]' type-v2='color' w='16000' x='83200' y='17250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44000' id='3' is-fixed='true' name='Shanka: Pareto Graph(20% of Zipcodes brings 80% of Price Genetrating Properties.)' w='98400' x='800' y='55000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='8' name='Shanka: Pareto Graph(20% of Zipcodes brings 80% of Price Genetrating Properties.)' pane-specification-id='1' param='[federated.0cvv3ht103mwez10jau510z4anki].[pcto:cum:ctd:Zipcode:qk:2]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='9' name='Shanka: Pareto Graph(20% of Zipcodes brings 80% of Price Genetrating Properties.)' pane-specification-id='2' param='[federated.0cvv3ht103mwez10jau510z4anki].[sum:Price:qk]' type-v2='color' w='16000' x='83200' y='9125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{779852F4-9B4E-4DC2-8EAB-C8D82EFDB329}' />
    </dashboard>
  </dashboards>
  <windows source-height='156'>
    <window class='worksheet' name='Daniyar: Price vs Review Correlation Scatterplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.113x8ik159y66w10tsm371rhe4fj].[none:Property Type:nk]' type='filter' />
            <card param='[federated.113x8ik159y66w10tsm371rhe4fj].[yr:Host Since:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.113x8ik159y66w10tsm371rhe4fj].[none:Property Type:nk]' type='shape' />
            <card pane-specification-id='0' param='[federated.113x8ik159y66w10tsm371rhe4fj].[usr:Calculation_96827440622538752:qk:3]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj].[:Measure Names]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj].[none:AdhocCluster:1:ok]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj].[none:Name:nk]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj].[none:Neighbourhood:nk]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj].[none:Property Type (airbnb_final.csv1):nk]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj].[none:Property Type (airbnb_final_2.csv):nk]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj].[none:Property Type:nk]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj].[none:Room Type:nk]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj].[tyr:Host Since:qk]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj].[usr:Calculation_96827440622538752:qk:15]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj].[usr:Calculation_96827440622538752:qk:3]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj].[usr:Calculation_96827440622538752:qk]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj].[usr:Calculation_96827440627363848:qk:4]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj].[yr:Host Since:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{13244F7A-DEF3-4CC4-B850-3312612E0E8C}' />
    </window>
    <window class='worksheet' name='Daniyar: Price vs Review Correlation Heatmap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.113x8ik159y66w10tsm371rhe4fj].[none:Neighbourhood:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.113x8ik159y66w10tsm371rhe4fj].[usr:Calculation_188447545577762823:qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj].[none:Id:ok]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj].[none:Neighbourhood:nk]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj].[none:Property Type (airbnb_final_1.csv1):nk]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj].[none:Property Type:nk]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj].[none:Room Type:nk]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj].[none:Zipcode:ok]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj].[usr:_PropertyType Price Corr (copy)_188447545577439236:qk:16]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj].[usr:_PropertyType Price Corr (copy)_188447545577439236:qk:17]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj].[yr:Host Since:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2AD9DAF2-E8F2-4749-BB5D-1FA15247A59B}' />
    </window>
    <window class='worksheet' name='Shanka: Pareto Graph(20% of Zipcodes brings 80% of Price Genetrating Properties.)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0cvv3ht103mwez10jau510z4anki].[pcto:cum:ctd:Zipcode:qk:2]' type='color' />
            <card pane-specification-id='2' param='[federated.0cvv3ht103mwez10jau510z4anki].[sum:Price:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0cvv3ht103mwez10jau510z4anki].[pcto:cum:ctd:Zipcode:qk:2]</field>
            <field>[federated.0cvv3ht103mwez10jau510z4anki].[pcto:cum:sum:Price:qk:11]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8812241A-8483-4757-9663-55F19AE715EB}' />
    </window>
    <window class='worksheet' name='Purvi: K Means clustering using Tabpy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card param='[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[usr:Calculation_76139029705187328:qk:1]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[usr:Calculation_76139029705187328:qk:1]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[avg:Price:ok]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[none:Neighbourhood:nk]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[none:Zipcode:ok]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 2)].[sum:Number Of Reviews:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E49DF5F8-A414-49A4-B432-D7C68E46B396}' />
    </window>
    <window class='worksheet' name='Purvi: Data Analysis Using Cluster'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='122'>
            <card type='caption' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[none:Neighbourhood:nk]' type='filter' />
            <card param='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[none:AdhocCluster:4:ok]' show-morefewerbutton='false' type='filter' />
            <card param='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[none:Room Type:nk]' type='filter' />
            <card param='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[none:Property Type:nk]' type='filter' />
            <card param='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[io:Top 100 hosts based on review rating:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[none:AdhocCluster:4:ok]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[none:AdhocCluster:3:ok]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[none:Neighbourhood:nk]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[none:Property Type:nk]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[none:Room Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB73663D-850E-4519-87D0-810787F0EBB1}' />
    </window>
    <window class='worksheet' name='Vrinda: price vs beds'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:AdhocCluster:1:ok]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:Neighbourhood:nk]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:Property Type:nk]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[usr:Calculation_123708300790829056:qk:2]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{695CAAF8-0C51-4BE4-9A42-8189F0459445}' />
    </window>
    <window class='worksheet' name='Vrinda: no of reviews vs price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:Neighbourhood:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:Host Id:ok]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:Neighbourhood:nk]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:Room Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{74461906-F0D2-47D3-A2B7-FF1E2E8FD33C}' />
    </window>
    <window class='worksheet' name='Vrinda: Review Score Rating vs price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:AdhocCluster:3:ok]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='0' param='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:Room Type:nk]' type='shape' />
            <card pane-specification-id='0' param='[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:AdhocCluster:3:ok]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:AdhocCluster:1:ok]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:AdhocCluster:2:ok]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:AdhocCluster:3:ok]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:Zipcode:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{44FC8F98-89A1-4848-8AAB-AAE08937B280}' />
    </window>
    <window class='worksheet' name='Tanvir: Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='31' type='pages' />
            <card size='46' type='filters' />
            <card size='305' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[:Measure Names]' type='color' />
            <card pane-specification-id='2' param='[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[none:AdhocCluster:4:ok]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[:Measure Names]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[none:AdhocCluster:2:ok]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[none:AdhocCluster:3:ok]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[none:Host Id:ok]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[none:Neighbourhood:nk]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[none:Property Type:nk]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[none:Room Type:nk]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[usr:Calculation_1985102322219290624:nk:1]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[yr:Host Since:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AF985537-6FDA-4D3B-BCF6-3F697DAF7C61}' />
    </window>
    <window class='worksheet' name='Tanvir: Number of Reviews vs Rating Score Correlation'>
      <cards>
        <edge name='left'>
          <strip size='281'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[usr:Calculation_1985102322258432002:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[:Measure Names]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[none:Neighbourhood:nk]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[none:Property Type:nk]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[none:Room Type:nk]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[tyr:Host Since:ok]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[usr:Calculation_1985102322219290624:nk:1]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[usr:Calculation_1985102322258432002:qk]</field>
            <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 5)].[yr:Host Since:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5FB4B0AD-F121-4F64-AB97-71C24EC537CA}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Daniyar: Price vs Review Correlation Heatmap' />
        <viewpoint name='Purvi: Data Analysis Using Cluster'>
          <zoom type='entire-view' />
          <highlight field='[federated.113x8ik159y66w10tsm371rhe4fj (copy)].[none:AdhocCluster:4:ok]' type='shape'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Vrinda: Review Score Rating vs price'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.113x8ik159y66w10tsm371rhe4fj (copy 4)].[none:AdhocCluster:3:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{EDD0FFF3-87BB-4504-99FD-CA0D059186BB}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Shanka: Pareto Graph(20% of Zipcodes brings 80% of Price Genetrating Properties.)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Tanvir: Number of Reviews vs Rating Score Correlation' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{56CFAEE1-D61B-4E24-A91C-F22C1CD9FBA8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='208' name='Daniyar: Price vs Review Correlation Heatmap' width='384'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='384' name='Daniyar: Price vs Review Correlation Scatterplot' width='384'>
      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
      2WyWTCbTPSnLYDBIOp3uhv+++OILafXq1ZJWq5Xy8/OlgQMHSuXl5VLr1q2lWbNmSQUFBZJO
      p5Oee+456fLly1JWVpb05JNPSmq1WtJqtVJZWZn05ptvSj/++KOk0+mkffv2SXPnzpW3r9Fo
      pLKyMqmiokJKTEyUxo4dK+l0OmnAgAFScXGxpNPppJdffllKTk6WTpw4IY0bN06qqKiQdDqd
      NGzYMKmkpKRafUePHi1dvnxZ0ul00t///ncpMTFR0mq10oQJE6TLly9Lr7zyinTw4EFJp9NJ
      GzZskJYuXSpptVqptLRUKi8vl1JSUqQxY8ZIOp1OeuGFF6Tjx49LWq1W+uabb6Tly5fL5aSl
      pUkBAQFSbGysVF5eLmVmZkpDhgyRysrKJK1WKz3++OOSRqORxo8fLyUmJkoajUYaNmyYlJaW
      Jm3atEn6/PPPpfz8fGnw4MFSUVGRvD+5ubnS5MmTpdOnT0v79u2TXnjhBWn27NlSaWmpNHjw
      YPl463Q66dlnn5VOnjwp6XQ6qaSkRNJqtdKrr74q7dixQ9JqtVJ5ebl09uxZafTo0VJpaamk
      1WqlZ599Vrpw4YIUGxsrtWvXTjp48KCk1WqlGTNmSHv27JF0Op30ww8/SB988EG14/rtt9/K
      +5+cnCyNGjVK0mg0kkajkYYPHy6lpKRIn3/+ufTwww9LZ86ckbRabbXPDxo0SFKr1ZJOp5NW
      rFghrVy5Uvrll1+k8PBw6fvvv5c0Go306aefSrGxsZJWq5WKi4ulfv36STqdTho1apSUnp4u
      6XQ6aePGjdLixYul06dPS+PHj5cqKiokjUYj9e/fX9JoNNIzzzwjjRw5UkpLS5O0Wq0UGxsr
      rV+/Xq7Hl19+KX322WeSVquVZs+eLf8ub/ZfZWXlPTn3JOnauW40Gm94XbQAhDp14sQJZs2a
      hUKhQK/X4+/vL+eIefPNN1EqlfLjhcDAQFauXMnYsWPlpGh2dnZ89913FBUVsWvXLkpLS6ul
      UC4rK+P111/HxcUFBwcH+fGDk5OTfFfm4OCAJEkkJSXRu3fvWzbnKysrMRgMBAYGYjQaKS8v
      JyQkRH7EolKp2LdvH1arlY0bN5KXl8e4ceP49ddf+eqrr3B1dSUjI4PevXtjNpvJz88nKioK
      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
      gg==
    </thumbnail>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
      JkQIKIIIIogggkuPyAwggggiiOAriogBiCCCCCL4ikL9yCOPPDLeQvSHoih8/PHHnDp1itjY
      WEpKSsjIyKCoqAidThe2OMrFQFlZGYcOHeLYsWPk5OSwf/9+ysrK6O3tRafTUVdXh06n49Ch
      Q2RmDrM85EXCu+++i8FgQKVSsXnzZsrKysjLy6OwsJCMjAx27drFpEmTLlmZnKIobNq0idra
      WqKjo2loaODgwYPU1taSm5vL/v37SUtLY9u2beTl5V0SmQA6OzvZtm0bFRUVmEwmmpubx12u
      AwcOUFRUxPTp0+np6Qn7/fbu3TsuY6yzs5P333+fuLg4YmNj2b59O6dPn6a+vh6LxTJuY2yg
      XAA7duygu7sbo9E4bnJVVFTw3nvvsWDBAkBwnFVVVaFWq2ltbR2XMebxeNixYwfNzc1kZWVR
      WFhIaWkpJ06cYNq0aWG6tLy8HIvFQmVlJTabjfj4+IlnAOrr64mOjmbZsmXs27cPr9cbUi6z
      Zs266NePjY1l2rRpWK1WDAYD9fX1rF27lqNHj5KSkkJnZyeHDx9m1apVlzTrf/ToUfR6PXq9
      nvLyclavXk18fDz19fV0dXUhyzKyLJOdnX3JZCovLychIYFp06aRkJBAUVER69ato66ujpSU
      FCoqKqivryc/P/+81i0+X9TX1xMbG0t2djbNzc00NTWNu1wmk4nOzk5yc3PZt29f2O/X0dEx
      LmPM4/GEFGx8fDyZmZlMmTKFkpISOjs7x22MDZSruroar9eL1+uloaFh3OSSJAmn00lubi7t
      7e309vaSn59PSkrKuI19r9dLZmYmNTU15ObmUlxczPLly6mtrUWj0RATExPSpQAxMTEUFxdT
      UFAATMAQkN1uJyYmBpVKhSRJeL1ePvzwQ+bPn39Jrq/RaPj888/RaDRMmjQJnU6QxAUfxKKi
      ImJiYi5pM4rdbqetrY309HRkWcbn86HX64mJicFut2O1Wtm5cyf5+fmXTCaArq4uamtrOX78
      OIWFhaF7ZDabcTgc1NbW0tTURHJy8iWVy2KxUFZWRlFRESkpKRNCrv7Mt/1/P6vVOm5jLDY2
      NqxO3OFw8N5777Fs2bJxHWP95fL5fJw4cYKZM2eO+9jv/xt2dXXR2NhIeXk5n3/++biNsaio
      qLCoiMViYefOnXg8HpxOZ5guBfjwww/DHOkJZwCSk5OpqanBZrOh0WjQarXce++9bN++PVQz
      fTGxb98+Jk+ezKJFi1Cr1djtdmRZxu0WHPCLFy9Gq9VSX19/0WUJwul0YjKZKC4uDk3nWltb
      qa6uJiUlhZiYGO666y42bdrEpSzqSktLY9KkSSxZsoSenh58Ph8+n4/W1lZiYmLIzs5myZIl
      7N2795LJBFBaWsrq1atZu3YtpaWlE0auIPr/funp6RNijAFs27aNm266icTExAkzxpxOJ/Hx
      8RQVFVFZWYnRaJwQciUnJ2OxWCgoKMDtdk+YMdbS0sK6detISkpCr9eH6VKAO++8k8OHD+N0
      OoEJmAMwGAy0t7dTUVHBihUrUKvVJCYmkpKSQnd3NzExMRf1+l1dXTQ1NVFTUxOKQRYWFrJo
      0SKMRiNarZaZM2dSV1d3yTxIo9FIVlYWKSkpZGRkkJuby6FDh5Blmfz8fCRJIjk5mejoaPx+
      f4hz6WIjNjaW+vp6Tp06xZIlS8jMzGT37t3k5OSQlJQEiAXubTYbFovlknVKpqamUlRURF1d
      HcuWLSMjI2Nc5fL5fOzZswefz0dnZycLFy4M+/30ev24jLHKykrq6uro7u7GZDLR3d1NY2Mj
      LS0tLF68eNzGWH+54uPjmTFjBhkZGUyaNIkZM2aMm1yHDx/G4XDQ2NhIdnY2LpeL48ePs2jR
      InJycsZljHV0dFBUVITP5wuFwQoLCzGZTOTn5w/SpbGxseTl5dHY2IjFYon0AUQQQQQRfFUx
      4UJAEUQQQQQRXBpEDEAEEUQQwVcUEQMQQQQRRPAVRcQARBBBBBF8RRExABFEcJkhUrcRwVgh
      YgAiiOAyw679hzh24tR4ixHBFYD/Hzcd6pTRMa5yAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Dashboard 2' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydeXxU1dn4v3eWZJLJSlayAGHfIZFFFheUgqJW0apv+/5sq/Zt7VurtrWt
      KK3bq9ZiqVoVcKWIuLUqKpuyoywBQgghbAkh+z6ZSWZf7vn9MTAlkplkJpPElvv9fPh8yJ17
      zvPcc899nnOes0lCCIGCgoKCwkWHqr8VUFBQUFDoHxQHoKCgoHCRojgABQUFhYsUxQEoKCgo
      XKQoDkBBQUHhIkVxAAoKCgoXKYoDUFBQULhIURyAgoKCwkWK4gAUFBQULlIUB6CgoKBwkaI4
      AAUFBYWLFI2/H8rKyrBarR2upaSkkJ6e3mOhdXV1qNVqUlNTu52muLiYoUOHEh0dDYDRaEQI
      QWJiYsh6tLW1sXv3bq655pqQ8+iKY8eO8cEHHzB27FhuvfVW3/Xi4mKEEOh0OrKzs9HpdEHn
      HUo59jbl5eWYzWY0Gg0ZGRnEx8cHld5sNtPQ0MCwYcN6pIfBYODo0aPo9XomTJiAVqvtUX7d
      wWazUVBQgFqtZvLkySG906747LPPmDt3LlFRUd1Oc/LkSbKzs4NKo3Bx4LcHcOTIEfbt28fL
      L7/MJ598wr59+6iqqgqL0NOnT1NRURFUmvvuu49XX33V9/e+ffvYtWtXj/Sw2+0UFBT0KI+u
      +Mtf/sI999zDjTfe2OH64sWL2b9/P5s2beJnP/sZhYWFQecdSjn2Ns899xx79+5l586dLFq0
      iPfeey/g/QcOHGD37t2+v00mU4/fydGjR/nd735HXV0de/bs4cEHH+xRft2hurqau+66i1On
      TnH8+HFef/31XpGTn5+Pw+Hw+3tbWxsrV67scG3//v2YzeZe0Ufh3xu/PYCbbroJAFmWmTp1
      Krm5uQA4HA4KCwsxmUyMHz+ejIwMwNtjiImJYf/+/QwcOJBLLrmEhoYGtFotAwYMAKCxsZGI
      iAhGjx6NWq0GoKKigszMTOrq6rDZbGRkZFBXV8eIESM66DNmzBjKysqoq6tj4MCBHX4rLy9n
      8ODBqFQqrFYrRqORjIwMysrKUKvVFBUVMX78eOLi4ti7dy9ZWVlMnjzZ93xfffUVVquVmTNn
      EhMTA3h7GDt27CAlJYUZM2YgSdIFuo4cOdKnQ1tbG9u3bycuLo7Zs2ej0WgoKCjA6XRSXV2N
      zWZjyJAhvvvT09O56667AG9LfunSpT6dDhw4QG1tLdOnTyctLY2ysjKys7OJiIjwlfXgwYM7
      lGNn6SoqKkhNTSUqKorW1lZaWloYPnw4AKdOnWLEiBEYDAYKCgrQ6/VMmTLF11K2Wq00NTUx
      ePBg398tLS1kZ2dz5swZTp48ycCBAxk/fjySJHV4H3feeScajQaPx8Ndd93F7bffDngNc01N
      DdnZ2YwdOxaj0cjBgwdxOp1ERkaSnZ1NcnIyl156KeBtxQOcOHGClpYWLrvsMl+Poq2tjYKC
      ArRaLZmZmR3K9ssvv+S+++5j4sSJAHg8Ht9vBoOBoqIikpOTGTduHJIkcejQISoqKsjNzfU9
      b1lZGUOHDuXo0aOkpKSQlpZ2Qfmez0svvcTixYsZN25ch+sej4ft27fjcDiYOXMmCQkJOJ1O
      GhoaSE9P5+DBg+Tm5lJdXX2BvDNnzlBQUMC4ceMYNWoU36SyspKTJ0+i1+uZNm0aQggKCgo4
      ePAgEyZMICEhgWHDhjFr1ixfT7mzenpOH4vFwsmTJ5k4cWKH8lT4zyXoMYD169dz6tQpZFnm
      4YcfprKyEvC2aFesWIFOp+Ott97i2LFjNDQ0dGgJvfDCC1gsFnbt2sXBgwcBePvtt3n//fd5
      5plnaG5upq6ujo8//vgCuZIkcc8997B8+fILfnv11Vex2+2A16F88sknADzyyCP885//JDo6
      mt///ve89NJL6HQ6XnrpJWprawHYs2cPjY2NmEwm7rvvPtxuNxaLhd/+9rfExsZSXFzMsmXL
      OtX1HFarlQceeACVSkV1dTUPPfQQQgjKy8uxWq2UlZVRX1/vt0ydTqfv/++99x7btm0jMTGR
      xYsX09LSws6dO329HY/HwzPPPINare5Qjp2l2717Nzt27ADgww8/5I9//CNCCFwuF0uXLsXp
      dPKrX/0Kh8NBWVkZGzdu9OmhVqt58sknfX9v2LCBw4cPc+zYMf785z8DsH37do4dO+b3uWRZ
      xu12A3D48GGfLm+//Tbr1q3DbDZTX19PQ0MDZWVlmEwmGhsbeffddwFvL+8Xv/gFZ86cwe12
      +/Spq6vj3nvvpaWlhcbGRv7v//6vg9wJEyawYsUKTp486XsW8PaYfvvb39LW1sbWrVtpamri
      ww8/ZO3atcTFxbFkyRIOHToEwIsvvsiSJUv4xz/+gdVq7bR8z+HxeKirq7vA+AM8+uijVFZW
      IkkSv/rVrzCZTBiNRlasWMEDDzxAfn4+Ho/nAnnFxcU8//zzpKWlsXLlyg69JPDWuVWrVuF0
      OikqKuLpp59GlmVOnz5NW1tbhzr3xhtvYDab/dZTo9HIz372MzZv3kx0dDQPP/xwB6ep8J+L
      3x6APxYuXIjJZKKhoYHZs2dz5MgRBg0aRFpaGn/84x8BfB/2lVdeyYsvvojb7cbhcNDe3k5m
      Zib79+/vkOfp06d56aWXUKm8/uh3v/tdp7LHjRuH2+32fdhdkZ6ezm9+8xsANm3axEMPPYRO
      p+PMmTO0tLSQlpbGrFmzuPnmmwGor6/nyJEjVFdXc+ONN3LVVVdx1VVXcc899/jVFWDr1q1c
      f/31XH/99YDXCZ0+fZpbbrmFHTt2cNttt12gW11dHcuXL8disVBSUsIjjzwCeI3qsmXLkCQJ
      t9vN5s2bWbBgAUuXLuXqq6/m4MGDTJs27YJWd2fpZs+ezeuvv84111xDWVkZ06dPp7y8nJaW
      Fi655BKcTicqlYq8vLwLelWRkZHk5OT4egrbt2/n2WefpbCwkPT0dGbOnMm8efM6LffXXnsN
      t9tNcXExP/rRj5AkicmTJzN69GhqamqIiYlhy5YtXHfddcycORObzcZ3v/tdgAvCjD/+8Y+Z
      P38+ANu2bQO8zuyBBx4gLy/PV/7nc/XVVxMfH8/rr79Oc3Mzv/zlL8nNzWXNmjUsWrTI1wsC
      +OKLL1i+fDlqtZoJEybw3HPPkZubS1VVFXPnzuWGG24A4Nlnn72gfM/1bOx2O7GxsZ2+YyEE
      d955J+BtxGzatIkrr7ySr7/+mhUrVvh6kd+U99hjj/H73//e18t6+umnmTlzpi/v6OhoFi1a
      RE1NDUOHDmXp0qVERERw0003UVFR0Wmd81dPY2NjmT17Nvfeey8AO3bswGKxEBcX1+n7VfjP
      IWgH8Nprr1FRUcGYMWOorq4OOAApSRIzZsxg3759tLa2Mnfu3E7vu+eeezoY1EDcc889LF26
      tFcGbpOTk7FYLLS0tHDgwAEOHDgAgFar9bVkO9O1ubmZsWPH+v7OysqipaUl4EBmfHw8M2fO
      5E9/+hOLFi1i6NChgDeW/PjjjwPecNu0adNIS0vD4XDQ1tbGhg0b+MlPfnJBfp2ly87Opra2
      ltbWVhISEpg9eza7d+/GYDAwb948YmJi+MUvfsHLL79MU1MTP/nJT5g6daovz+uuu44NGzag
      1+tJSkoiOjqaGTNm0NTUxB/+8AfA66y/6TyuuOIK/v73v3PllVf6nMSePXt4++23mT59Oh6P
      J6QW5jmn19LS4gvV+GPKlClMmTKFhoYG7r//flavXk1jY+MF6SIiInw9hHPvHyA7O9tnjP2V
      7zmioqIwGAwIITo45ubmZrKysnx/Z2Vl+Xpyc+fO7RBC/Ka8lpYWli9f7svvXBj1HA0NDSxe
      vJgpU6YQHx8fcFzgfH06q6edOS+Fi4OgHUBBQYEvJHIu1BKIBQsWsGzZMqxWK0888USn95z/
      0ciyjCzLaDSdq5adnU1GRgb5+flMmjTJl/6cgT4/nBIMQgj27t3LnDlzcDqdHVpu7e3tPn2+
      2fIGGDp0KIWFhT6jUFRU1KWDio6OZuLEibz44os8+OCDPPjgg4wfP56srCx++9vfotfrEUL4
      Bu/mzZvH+vXrMRqNZGZmXpCfv3Rjxoxh1apVzJgxg0mTJvH+++9jt9v55S9/icvlYtKkSUyZ
      MgWz2cyiRYs6OIBJkyaxfPly1q9f72s12u12brzxRm688UZ2797NunXrLnBII0eO5KmnnuKR
      Rx4hIiKCW265hXXr1vHkk0+SlJREVVWVLzSo1Wp9sf7uMnr0aNavX88dd9xBfX39Be+8srKS
      7OxsJEkiNTWVuLg4XC4XI0aM4MCBA8yYMQPwvnNZlmlvbyc2Npbjx4/7nNk337O/8gVQqVRM
      mjSJjRs3cu211wLgcrnIzs7m6NGjPsdQWFhITk5Op/l/8+9BgwYxf/583zhGe3t7h993797N
      rbfeyrx583A6nWzfvt1XnjabrdNyC6WeKvxn0y0HcH7lzMzM5Mknn/QNHJ3fauns/oEDB9LW
      1kZiYqJvCmcgioqKWLFihc/JdJbn3XffzS233OIbNL3kkktYvHgxSUlJVFdX+0ID/vQ6P6/C
      wkKeeuopKisrmTNnDunp6aSkpPDwww+zaNEi1Go1TqfTF/fujNmzZ7Nu3TqeeOIJjEYjY8aM
      8Q0SduYwzr+enJzMkiVL+M1vfsPvfvc77rzzTu69916GDRtGfX09t99+O5dddhlz5sxh4cKF
      /O///m+n+flLN3v2bB588EH+53/+B41GQ0REBPHx8UiShMFg4NFHH2XYsGE0NDRwxRVXXKDj
      JZdcwpdffukbsD548CDvvfcew4YN4/jx49x3332dPpdGo+Gpp57i4YcfRgjBpZdeymOPPUZG
      RgYGgwG9Xg/AxIkTuf/++ykvL+eyyy5j0KBBfsv5XN4333wzL7zwAvfddx/p6ekXlHF+fj6P
      PvooWVlZNDc3c8UVVxAVFcUdd9zBww8/zKZNm2hubmbx4sXcfffdPPDAA4wZM4Zjx451GPfo
      Tvme45577uGRRx5h69atCCHIzs7m/vvv59JLL+X+++8nLS2N5uZmlixZ0i2Hd8cdd7B48WIG
      DRqEyWRizJgxHRztxIkTefLJJykuLqampsZn9GNjY3E6nTzxxBOMGDGC73//+740/uppY2Nj
      p+Ws8J+PFOyZwEII6uvriY2N9c2Y6QqLxYJKperVechNTU1otVoSEhK6nUYI4RsEi4mJ8c2y
      Oce5cMA5Y9UVjY2NqFQqkpOTu694J8iyTGtrK4mJiR3CTa2trcTGxvrtHflL15WshoYG9Hp9
      pzFfp9OJ3W7v8JvT6aSpqYnk5GQiIyO7/Vytra14PJ4LysflctHa2kpycnK39LZarURFRSFJ
      Es3NzTz11FP89a9/veC5jEYjsbGxF6wBMBqN6PV633Wn00ltbS2ZmZkB1wt0p3yNRiMajabD
      t9He3o7RaCQrKyso43p+3exMr3Mz3gYOHNghXyEEzc3NxMfHX1CnIXz1VOHfn6AdgIJCf7N3
      717eeecdIiMjsVqt3HvvvR1i2woKCt1DcQAKCgoKFynKXkAKCgoKFymKA1BQUFC4SFEcgIKC
      gsJFiuIAFBQUFC5SFAegoKCgcJGiOAAFBQWFixTFASgoKChcpCgOQEGhl6moqMBkMgHeg5YC
      YTabfftagXeF++eff05JSQlWq5W9e/f2qq4KFxeKA1BQ6GV27tzpOzdj9erVgPcQo3OnwJlM
      Jvbv34/JZOJvf/sbW7Zs8W0296c//YmkpCRKS0t92z0YDAYqKys5ePAgQgja2trIz8/HbrdT
      U1NDQUEByvpOhe4Q9G6gCgoKwfPpp5+yb98+7HY75eXlvPHGG2RnZ1NVVcXOnTuZN28eJ0+e
      9J214XA4iImJITk5mR07dnD77bfjcrnYsWMHNTU1lJaWYjKZ0Ol0rFixguuvv57S0lJWrVrF
      2LFjqa+vZ8GCBf392ArfcpQegIJCHzB9+nTmz59PREQEpaWlzJ07l9tuu40TJ07w3e9+l507
      d9LU1MTIkSOZNWsWSUlJADz00EPceuutPP300x3ymz9/Prm5uTQ2NpKdne07d8FsNmOz2ZBl
      uc+fUeHfD8UBKCj0AWlpaWRnZ6NSqcjNzeWTTz5hyZIlXH755Rw9epTk5GRqamoYMmQIr7zy
      ChUVFYD3WNN33333gkN3zpGYmEh7ezvPPfccQgi0Wi0ul6vbO/UqXNwom8EpKPQDLpcLt9tN
      VFQUsixjsVh8J3Odv921EAK73d7lVup2ux2dTocQAofDgU6n64vHUPg3R3EACgoKChcpSghI
      QUFB4SJFcQAKCgoKFymKA1BQUFC4SFEcQDc4fvw4n376KS0tLQgh2Lp1K/v37we859yuXbuW
      +vp6hBDs2rWLLVu24PF4+kVXm83Gpk2bfCtG6+rqWLt2rW8l6r59+9i+fTtCCKqrq/n4449p
      aWnpF11lWWb37t1s3LgRp9OJzWbj008/pby8HPAOlB44cAAAt9vN+vXrOXr0aL/oCtDQ0MDn
      n3/OqVOnAO+q3g0bNvjedXl5OfX19UBH3fuDYMr2m3WmP+hu2Xo8Hnbt2sVnn33mq9N9TVff
      mMlk4tixY777y8rKKC4u7hddIbD9Uj/22GOP9Ztm/wbYbDb++c9/kpOTw6pVq3C73ZSXl3P4
      8GFSUlJ4+eWXycvLY9myZcTExFBcXIzH46G0tLRfzqnduHEjUVFRfPnll2RkZPDcc88xffp0
      3nrrLZKTk9m0aRPt7e20t7fz1ltvMXv2bF555RXmz5/f57oWFRVRUVFBe3s7x48fZ+PGjQwd
      OpQ333yTq6++mieeeIKvvvqK66+/npUrV6LRaPj000/Jy8tDr9f3ub7vv/8+gwYNYtmyZUyZ
      MoXly5eTnJxMYWEhra2tvPzyywwcOJCcnBweffRRn+79QTBle36dyczM9K1B6Eu6W7ZpaWmc
      OnWK2NhY1qxZw5w5c/pc10Df2KhRo3j22Wepq6tj5syZOJ1O/vKXv3DixIl+0bUr+6X0ALog
      KiqKn//855w4cYIxY8ZQVFTEzTffzHXXXefb12XmzJkkJSWRmZnJsWPHyM/PZ9y4cf2i7w03
      3EBOTg6tra1ERUWRkZHBrFmz8Hg8HDlyhBtuuIGFCxdSVFSE0+kkNjYWs9ncLz2WSZMmMX/+
      fEpKShg9ejRGo5GrrrqKSZMmUVVVxZNPPkliYiIAJ06cYOHChcyZM6dD66ovufvuu/F4PCQn
      J1NSUsLcuXP53ve+R0lJCVdccQW33Xab797zde8Pginb8+tMWlpav+jb3bLV6/VER0ezbt06
      5s6d2y+6BvrGMjMzefjhh333rlmzhu9///v9oid0bb8UB9ANHn/8cbKzs7njjjvQ6XRYrVYs
      FguRkZE+w2m32ykqKmLevHncdttt/dadPnLkCC+//DJPPPEEKSkp2Gw2ADweD5GRkVgsFqxW
      KzqdjgceeIDCwkLcbjcqVd9Xhba2NhYtWsSPfvQjcnNz8Xg8CCF8ZXtu7xsAjUaDw+Hw6d4f
      vP/++xQWFvL444/76oHNZkOr1XbQFbjg774mmLI9v87Ex8f3i77BlG1ubi633HIL27Zt6xdd
      A31j5+tqNpv55JNPWL9+PcXFxdTW1vaLvoHslxIC6oKamhreeOMNZFmmrKyMK6+8khdffJGi
      oiJ+9KMfUVtby4YNG4iKimLq1Kl89tlnlJWVkZubS05OTp/r+8orr+ByuSgsLCQnJ4eSkhJ2
      7NjBkCFDmDdvHn/729/Iz8/nBz/4ATt27KCqqorx48eTm5vb57pu2rSJoqIiampqcLvdpKam
      smbNGoxGIwsWLGDp0qUUFhZiNBqZNWsWy5Yto6ysjB/+8IdoNH2/jdUf//hHEhIS2LVrFwsX
      LuS1117z/f/YsWN8+umnnDhxgqSkJFavXu3TfcqUKX2uazBlm5+f76szWVlZDBgwoM/17W7Z
      2u121q5dS3V1NfHx8UybNq3PdQ30jen1et566y2OHDlCQkICf/jDH5g+fTonT57khhtu6HNd
      u7JfykKwELDb7ajVarRaLeD19Hq9HkmScDgcyLLc5crNvuJcq+/c1gAulwtZlomMjMTlcvk2
      Hfu2YLFYiI6O7rQFbbVava0WtbofNLsQj8eDw+EgOjq6v1XpFoHK9ttGoLJ1OBy+8OW3gW9+
      Y992zrdfigNQUFBQuEjx24/ur3hVb/FtaS0oBEYIgQCEAAmQpP6PpwfinL7g1Re+vfoKIbwF
      K+SzBav61uoKZ/X9Rul+W/U9vx7Aubr77dQVvPVACKH0ABT6FyEEDreHE9VGSqoNVDWZMZgd
      OFxu1CoVep2G9AQ9IzLiGT9oAKkJ0aj68cMSQmC0uakw2qhrc9Bqc2F3y8iyQKtWERupJlkf
      QXaCjqx4HRqV1G+GQAiBcNqwnzyA7fhenDUncBvqkR02JLUGlT4ObVoOumGTiRo7C23KIKR+
      mAxwvr4eRzvOtnrclmbcjnaEx+l1Wio1am00mqgEtLFpaGNSkVTqfi1bu1umts1BvdmB0ebC
      5pbxyAK1SiJKoyIhSkt6TCQZcZHoNP3rbIXsRhjKEA2FYDiFMNeDy6Y4AIX+QQhBS7udjQWV
      fHWsDpPV2WUatUpiZEYC1+YNIm9YCuo+NFYeWXC6xcrBGhO1bQ7kbnw10VoVY9NiyMuMIzZS
      02cGQAiB21CH6cuVmPd8gqetuetEKg26EXnEf+dO9JOvRlL33SC7EDIOYw22xuO4zE1A14Wr
      0uiIHDCE6LTRqLR9N64hhKDZ4qSo3kylyY67GxVBo5IYlKBjYloMyfqIPnUEwmlFnN6EfGod
      tFXzzbJVHIBCn+Nye1h3sIJP88uxOUNbfzAqM4EfXzWawSmxvfpBCSFoNDvZWtpCTZsjpDwi
      1BLTshOYkh2HppedluxyYNr0Bq3rlyNs5pDy0I2cSvJ/P0pE9pheL1u3rRVz5QFclqaQ8pBU
      WqLTxxKdNgZJ1buTA6wuD/lVJkpbrN1wURciAcOTopmWHU+0tnd1FUJGVO1GLngNLPX+dVIc
      gEJfYmi38/L6I5RUt/Y4r0itmh9eOYo5EzJ7xVAJIThS1862MgOu7jT5uyA7XseCMSnERvZO
      69rdWk/Dq7/Gfrzna1CkyGiSvr+YuMtvQ5LC77SEENibS2mvLgDZ3eP8tDGpxOXMQh0R/hlZ
      QggazE62nTZgDrHBcj4xEWrmDB1AWkzv9AaEx4lc8Cri5Od01ZtSHIBCn9FgtPLsRwXUtVrD
      lqckwfdmDGPhpUPD+jEJIdhbaWT3GWNIrT1/JEZpuGVCOglR2jDmCs7GCur/eheu+vLwZSqp
      SLzpfhJv+EVYnYAQAktdMda6orDlCaCOjCV++Bw0uvBN+BBCUGWyszVMjYBzaFUSVw0bQHa8
      Lrz11m1H/uoZRE33GgHKSmCFPsFkcbDk40NhNf7gHR/8x+4yNh2qJFxtGSEEBTVtfB1m4w/Q
      anPzcXEDFmfPW73ncJuaqX/hf8Jr/AGETOsnz2PavCqsZWtrPBF24w/gcbRjKtuOx2ULW54N
      ZmfYjT+ASxZsLTPQYO567Ku7CNmNvGdpt40/KA5AoQ/wyDKvfnGUGoOlV/IXwJqdpzgehrAS
      QLXJzs7ThrDk1RktVhdfnGhGDoNRER43TSsX4aotDYNmnQkQtHzwJ+wn94clO5e5EXPNobDk
      1RkeexvtFfsQQu5xXlaXh22nw2/8z+GSBdtOG7C6wrAPlxDIxz5CVO4IKpniABR6FSEEu0rq
      KDjdjZkoPcDlkXlj8zEcrp61rF0emS9PteDp5cBomcHG0QYzPWpYC0H77o+xFm4Jm16d4nbS
      tGoxsqNnvTfZ46a9Mt+7DqEXcZpqsLeU053ZRP4QQpBfZQpLzD8QZqd3YLmnPSxhqkAcWR10
      OsUBKPQqdqeHD7/updbpN6gxWNhSVBOyURXA4bp2DFZXWPXyx+4zrTg9oRtD2W7B8PHzYdTI
      P67aUtp2vEdPPJat+RQee1sYtfKPpbYI2RN6Y6DZ4qS0JbzhSn+UtlhptoQeChJCIB/+O3iC
      n6WmOACFXuWrY3UYzKFNnwyFDQUVuELc2trjkSmo7rtDRtqdHo41hjZVE6B9z1o8rXVh1Cgw
      pi/eQnaF9i6F7MbWeCLMGvlHdlnP9gKCRwhBUYM57OM/fuWBV16oztV4BlGzL6SkigNQ6DVk
      IdhZ0rdbijS32TlaGVr8vtJop83Rt+ciHK0P7cMXskz71//sBY38426pwXZsT0hpnW0NyM7e
      GQPyh91wOqSytbtlKo32XtDIP5VGO3Z3aL1BuXwLiNDqreIAFHqNVrOD8oa+6fKfT0FZU0it
      t7I+6vKfT4PZgTkEp+Mx1uOo6PtjBq2FW0IKAzlMNb2gTWDcFgOyK/h3Wtvm6NYK33DilgW1
      ISw0FLIHUZsfslzFASj0GqdqjXj6+EMCOFlrRAQpVxaCmra+bfV55UJte/By7WWF0IMYd6jY
      SwuCnmEjhAh5pW/PELjMwU8+qO/DkGWP5dqNZ7d4CI1uOYCKigo2b97M3r17cbn6ZoBM4d+f
      rqZ9Thg8gCnDUjpcGz4wnukj0xiTlYhaJTF9ZBqTc5IBSI2PYs6ETOKjIwLm22iy4QpycNUj
      C0w2/wbVbDSQv+4DjI3/Cml53C6Kd33BkZ2bELKMob6a/HUfYDG1ImSZE/k7OLT5U9yuwAN8
      LZbgvylnN6Z96i+ZT9SYGR2uqaJiib3sVnQjLgFAnZiOduBwACKHTkY/5Vp0o/wfsuJqqkR0
      8TzfRMgePI7AYx1VdU28s3Y7raZ/3SeE4POt+9m1/ygAu/YfZc3a7dQ2GHC5PXy6eR+bvy4M
      GOZxBzno7N3sz//78Ljd7N3wEWdKDne47rBZKT38r6myZ0oOYzEZvTq4XBw/sLtL2UabO+iQ
      lWiv6TL8s6/UyLtf13VojLW0O3nnq9ruOYCdO3diMBg4deoUq1evprq6mtbWVh8+E0EAACAA
      SURBVAwGA3V1deTn5yPLMvX19VRUVFBcXExbWxvNzc20tbVhMPTenGqFby8mi/8WzciMBKaN
      SGNoejzTRvzrHNrrpwzB7vTgcst8Z1I2cVERjMlKZNKQJH501WgajFZ+8p2xAeW6PDIWR3BG
      1e6W8QT4+D7+6x+IS07jH8894rt2fN8OnHYrlSWHOLp7M//8yyPEJaXy8QuPUlFyCENdNe2t
      TexZ+05A2dYQphp6TIFbtjGXfpeIrFHEXHojkUMm+K6n/Php3IY6EILIYbmk3vUs0RMuAyDh
      2p8iHFZEgIFe4XIiW4M0qh4nyP6fUQjBg0+9SVpyAg89u9J3/eNNezheWsVHG3dTWHKamvoW
      MtOTeejZlaz8cDPNhjZ2HzzGtj3+F5XJQS4KE4AtQCx+09vLcNptrH/zRYxN3j12HDYLK5/4
      NZvXvAbAzo/f4Z0/LaKl3tsyX/nEr1n35gtdyra5Q4jj2wOvfalotvGXdWdotbp4YUOF7/qa
      3XUkxmi7HwIqKyujpKSESZMmsWzZMpYuXUpFRQVLlizhzJkzvP7663z44Yds2rSJV155BbPZ
      zNNPP82SJUu+xftiK/QmzgAf0oiB8ew4WsvWompGZPzrHNrkOB3TR6YRqVVzqs7IpJwkBqfG
      UtVsRqtWYXW4iY7UoApQpYQQuIIcUPPIImBoWwCjp19B7IAUHFZvz2bcrLkMy51BY2UZsYkp
      DEjPYvSlVyI8HoaMv4TJV99A1fEiskaODyg7lIVGwp9hk1Sg1qIblkvb9ndp3/0RkcPOHvep
      1hCRPZqYS28kImsUjrJDGD7+qy+pJikD/ZRrUUUG2k9HIFzBhaxEgBaq0+mipbWNQRkpzJ01
      Gfd5PbcDRae44+aruPW62Rw8UsrgzFQ+XLeLubMmccmE4WzbU8TRk5WMGZ4dQHgIzjXA+6g6
      eZTLbvoBuXOupeK4dwwmQhfNz55ZjursDqqX3fQD8q6+zpfm7ideJDYxqVtyg64Jns57Y7IQ
      OFwyB06buGVaGj+7OpsDp/81w+2X8wczQB+EA5g9ezYLFixg9+7dSJLEI488glarZerUqdx6
      661UVlYCcOONNzJ69Gg0Gg0jRowgKiqKxMTEYB9L4T+ACI3/6uV0y0RFqNFFaDo4isXv7OPv
      245z4/QcJuUks/5gJftPNTIqM5F3dpxkVGYiGrUq4HbMkiShDSC7M9QqiUDtlHNzyl12G+qz
      R4G21Fby4Z8f4sZfPkr60FE4bN4BR4/HjbXdxOrHf8mc799DzsSpAWVrA3kzP0jazo8cjZ40
      h6RbHkR22lHp9Kh0eoTzrMGWZZzVJ2h647dET7rqgrQ1T9xE85onSLju54EkI2l1wekqdb7z
      pdvt4dHn13CwuAyLzauj57wpvDpdBGarHYvFji4ygvGjBnPnrd9hx75itu4+zM9+cA3XXTWV
      vYcCTC/1IzsQ6gDvQ6XW4HI4sFvMRETqzj5fx/u7+juQ3KBrgrrzcOiJWgu/W3OCFrOLdrsH
      q8PT4Xtce6CRN7ZVd+9Q+KKiInbu3MmpU6fIzc2lpqaG73znO8TFxbFq1Sry8/OZNm0aRqOR
      8ePHU1xcTExMDKdOnUKn06HX60lLS+tKjMJ/GKcb2iip6ryLarQ4+MHlI5kwOIkNBRXcPms4
      JdUGfrlgImOzEzGYHZxpbGfm6IFkJcVQcLqJ3Jxk0hOjKa0zcaLG6FdupEbNzZcOQ6PuvhNQ
      SXCwus2vY6kvP0nB5rVE6KJJSB1I4dbPqSw5hKmxltrSEmISBtBwppSjX31B6uDhtDU3UllS
      QEttJR6Pm7QhI/zKHpoUTXZCcGdIO84c6XTXT1d9ObajX+Ext5J020PohudhXL+C5O8vxla8
      k8jB49DnzQPZg2y3ED/3x0TmTMRjMTHglgeJGj0dt7ER25HOtxSQInQkfveXSJpgNrOTsDYe
      v2AFsEqlYu6syQwfPJDNXxeyccdBRgzJJEYfxSdf7GHe7FyeePFdDhSd4r9uuIynX/mQytom
      hIBLJgzn4y/2cqKsmvmX55GR1vlB9hHxWUTEBmd7zrTaaPcTlouI1LF2+Z+pOX2Sa+74OX9/
      8jcMGj2BT5b/mdLCfIQQVJ44ysHNn1FTeoKUrMGse+tFSgvzaTe2MnrKTL9yB0RpGZEc3NkG
      wtGGOP3lBddT4iK4dnIKozNiePyfZaw71MTdV2ax5agBu9PDM2vLiYvW9Hw3UI/Hg91uR6/X
      9yQbhf9A9p6o54XP/cdn1SoJlSRdMGAbqVXjOLs/SqRWjUcWuD0yapVEhEaNrYuN1AYlx/DM
      HTNQBdGyloVg1cEamgMMyNot7URGx/j9QIUQOKxmdPrgdqO8YWwKo1KCO1DcvH89Da/cG/Ae
      SatDyO4LZgupouP8xvGlyGhEgC0fIrJGk/X4Z0HtvS+EwHBsPR6bf6cthKDdYiMupmP4yWZ3
      olGr0Go1OF1urDY78bF6JEnCYrWj0aiJjPDvjOJyZqMbMLjbugJ8XdFKSaP/CQx2q4WISB0q
      dXj39B+bqmfW4OCiJcLagueTOwKGutwegd3lIUZ34TbkPZ4GqlarFeOv0CkjMhICdqc9suh0
      to7jvM2xHC6PLy7skUWXxh+8A8xSkGEVlSSRGRc4tKHTBz58RpKkoI2/SoKM2OBCKgC6oZOh
      i1O7hMve6VTRQIO4gYw/gG54XtBbQ0uShFaf0uU93zT+AFG6CLRa73NGaDUkxP3LAeujdQGN
      P0hoY5KD0hUgPSYy4O+6aH3YjX935HauTALEZQW8RaOWOjX+oKwDUOhFEmMiyUmL63O5ecNS
      go+l4g3F9DVpMZHERIYQp05MJ3Jw4MHl3iB68tUEHCzxQ2R8Zi9oExiNfgAqbfDvNCMuEk0I
      4zI9QaOSyIgL3gFIKjVShv9pu12hOACFXkMlSVw+NqNPZSbH6Rg3qPN4cFcMTtARF4Ix7gnj
      0v2HlAIhqVTEzrqlFzTyjyYp84J1Bd0lIi4NVUTfRgp0A0I7JEinUTEoIfheWU8YlKBDF+TE
      hXOocq4OabAbFAeg0MvMHjOQAaF0bUPk2rzBaEPsnqvVKvKy4ru+MUzERqoZkxpc7L9D+hk3
      ok4cGEaNAhM/705U2tDepaTSEJU6Kswa+UeljUaXlBNSWkmSmJgWE1IvMiR54JUX6nT5hCFI
      mdNDSqo4AIVeRReh5tZZw/tEVuYAPVdPzAwlQgF4P8RJA2MZEB3e4xr9MXNwIhFBzFT6Jiqd
      ngELHwijRv7RZgwn7or/Cin8c46o5BGodX0TEtRnTPTNyw+FZH0Ew/soJDg8KZpkfeDV7YGQ
      JAnVpB+BOnjnrDgAhV5FkiQuGzuQvKGBBwF7ilat4u65Y4jU9uzAda1axXdGJKHu5ebfsAFR
      jEuL6Yk9BUkiduZCb1y+N9FEkPLD/+tigVjXqNQaYgdN8y5W60Ui4jPPtv5DL1xJkpiWHU9M
      RO+GBGMi1EzLju/xYlkpfjDShP8XdDrFASj0OmqVip/OG0vmgN6JAUvADy4fweis8Cw4zIrX
      cfnQ0MYRukNStJZ5o5KDmqbqD0mtIeXHz6DN6KVeliR51xOMDLyYrbtoY1KJycwNS16dodbF
      ETt4elgOsY/WqpkzdEBIC/W6g1YlMWfoAKK1YXAykoRqzM1Ig64IKpniABT6hHh9JL9dmMvA
      xPB2qyUJvjdzGPNzB4VtyxFJksjLjGPWkISwx4ETozQsHJ+GPqJnPZXz0cQnk37/a2jTQ4t5
      +0VSkXjTA8TP/WFYyzYqdRT6gRPDkt/5qCNjiR92JWo/q6RDIS0mgquGhd8JaFUSVw0bQFpM
      6KGfbyKpNKhm/Bop89Lup+npQjAFhWAwtNt5ef0RSsJwgHukVs0PrxzFnAmZvbLflBCCI3Xt
      bCsLz8Hg2fE6FoxJITYyfMb/fNyt9TS8+utOVwgHixQZTdL3FxN3+W1haU1/EyEE9uZS2qsL
      QO75ttbamFTicmahjgh/3F4IQYPZybbThrCcERwT4e1ZpMVE9E699TiRC15FnPycrs5FVhyA
      Qp/jcntYd7CCT/PLsYX4QY3OTOBHV41mcErgxVk9RQhBo9nJ1tIWakI4sAMgQi0xPTuBS7Lj
      0Kh6t9MtuxyYNr1J6/plCFtox03qRk4l+b8fJSJ7TK+XrdvWirnyQMjnBUgqLdHpY4lOGxPU
      6uRQsLq8B7iXtlhDOnBIAkYkRTM1Oz48YZ8ACCEjqnYjF7wGlnr/OikOQKE/EELQ0m5nY0El
      Xx2rw2Tteo95tUpiZEYC1+YNIm9YCupeNqbnI8uCMoOVg9UmatscATejO4deq2ZMmp68zDhi
      IzV9tiuuEAK3oQ7Tlysx712Lx9QN46rSoBuRR/x37kI/+SqkHsygCRYhZBzGGmyNx3GZm+iq
      1Qqg0uiIHDCE6LTRqLTB7Z/TE4QQNFucFDWYqTTau3VymEYlMShBx8S0GJL1vdPq94dwWRFl
      m5BPrTt7cExHfRUHoNCvCCFwuGVO1LRSUmWgqtmMod2Bw+VGrVKh12lIT9QzYmA84wcNIDUh
      GlU/bi/uPTDETYXRRl2bg1abC7tbRhYCrUpFbKSaZH0E2Qk6suJ1aFRSv22HLoRAOG3YTx7A
      dnwfzprjuA31yE4bklqDKjoebdoQdMNyiRo7E23KIKQ+dKqd6etxtONsr8dtbsbtaPeeJSAE
      qNSotdFoohLQxqahjUn1roLtx7K1u2Vq2xzUmx0YbW5sbg8eWaBWSURp1CREaUiPiSQjLhKd
      RtWv2+IL2Y0wlCEaCsFQijDXg8uqOIDQEGcd6bl9bFRnZ5x9S889EAKvwgKvjlKP5nP3JkII
      3z8J74rXb/N5Ej59AQnvltLfVn2FEN4dOYUMSKBS9Up8P1z49IWz9bX/nGlXeOsBCMS3vh6A
      8JVt3/Xz/s0RsgfaziBaSqCtAqxN4Dl7KIc6CqJTIG4wUtJYiBvS6/HIwMoKhMsMrSfBVOaN
      AbraQXaBSgvaWNCnQ/wwSByJpI3pP4cgBEJ2gqkcjKVgqUNyGJE8TlCpQROFiPKWLQkjkaKS
      +9V5CSFwOW3YzEYctnZcDhuy7EIIgUqlRq2JJEKnJ0ofj04fjyT1nwMTQiBkD06LAYe5GZe9
      HY/ThpA93sVDai3qyBgi9IlExiSjidT3byv1bA/A1VaPy9KE52wPQAjZO8OlQw8grd97AG6P
      mzazGbPVjM3hwO12IwsZlaRCo9EQFRlJTHQMcTExaNR9FwL0p6/VZsVsacdmt+J0OvHIHqUH
      0BXCbYPqnYjKrWcHU7oqLgn06UiDroKsy5E04ZuS1iVCINoroWoLNBeD3I2zW1URkDwesq9G
      ih3Ud8ZVCITDCDU7oeGg10F1haSCuBzIvBwpaZzXQfQRQshY2wyYWmqwW9voTpxardESE59K
      XFImGm1kn8apPS4b5qZybK3VyO7uDF5LROgHEJMyFF18Wp/2DISQcRqrsTYew93NMQBJo0M3
      IIeotDF9PgZgsdmob27E1N6GLLo+eU4lqUiIjSMtORV9VFSfOgKPx4PB2EKLoQmH88J6oDgA
      PwghoOEA4vh7YAtthgJRKUij/wvSpvT6SxfONihbC/X7+VdoKhhUkD4Vht2IFNG7y/WF7IKq
      HV5H5QnueEEfcUNh+M1IMRm96rSEEDjtFprrSnEEeRbuOSSVmoTkbOKTs1D1coxdyB7aG8sw
      N5Z6zwIIgQj9AOIzJ6CNiuujWUD7cVsaQ8pDUmmJSh9HdNrYXu91u1wuqhpqaTGGPoU5KSGR
      7LQMtNre3W5ECIGpzUhdQw1Ol/+GoOIAOkF4nIjj70LlVrrTGgmMBIOuRhr9X0h+jm/rEUIg
      TOVwbCXYDT3PTzcAxvwYKT6nVwyrcBjh2DtgKu15ZqoIGHYT0sBLe0dXIWhvraelrgzRjZZe
      V+ii40nNHo0mxA3VusLttNFaUYDT0tLjvCSVmviM8UQnhW+B3fmcWwdgrj4QlnUAmpg04nJm
      99o6ALPVwunqCpwu/wcGdZcIbQRDswYRE907ITdZlqmtr6altbnLexUH8A2E24E4/Ao0Hgpv
      xqm5SJP+F0kTxo9fCO+YRMlbobekO0Otg7F3esczwlhBha0Zjrwaeo+qUyQYcg3SoO+EV1ch
      MDZV0tpYEbY8ATQRUQwcPB5tZHhDgy6HhZbTe/E4/J9kFQqx6aOITRsZVkMlhMBadwRr3eGw
      5QnelcBxw69GowvuUJ5ACCEwtbdRVl2BLPe8EXAOlUrFsOzBxMeEt5flkT1UVp2hzWzq+maU
      rSA6IGQP4sjr4Tf+AI2HEEde9w4mhwlhKg+/8QdvfiVvefMPE8LZDsWvh9n4Awg4sxFRs+vs
      bKcw5CgEppaasBt/8LbS6yuLcQfolgeLx2XHcHpf2I0/QHv9CSzN5YSrnSiEwNZ4POzGH8Dj
      aKetbBsely1seZqtlrAbf/C20suqKjBbw/fOhBBU1VR02/iD4gD+hRCI8g1Qv6/3ZNTv88oI
      w8cknG3esE+4jf85PHY4ttIrp6fIHjjxPlgbep5Xpwg4/RnCdDosudktJgwN4XN+38TlsNFc
      ezIsYSUhZFqrDuN2hLbqtzuYakvCElYCcJkbsdQUhCWvzvDYTZgr9oalbF0uF6erK8Nu/M8h
      yzKnqytxhSGsJISgsbkBU5v/c5c7Q3EAZxFt5VD6Se8LKv0E0XamZ3kIGU79Mzwx/0DYDV45
      PfmYhEDU7QHD0fDp1akcN5z8AOHqWYvK43bRXHsqbL0Jf1jbDbQZ6nrUshZCYGmuwNHWW471
      nCAZY1URHnfPei2y2465Ym/P6lM3cJqqsTWd6nHZVtYHHkANB06Xk8r6mh73sGw2Kw1NdUGn
      UxwAZ0M/xSu7N22yp8hORPHKHoWCRPMRaDwYRqUC0HjQKy9EhMMI5Z+HUaEA2Bqh4ouQjbcQ
      gtamClzO8IUQAmFoOIPHFdr+QuAN/bTVlYRRI/+4HWba60+GbKiEEFjqjuBxhKFH2Q0sNQXI
      rsAH3AfC2GbCYAquNR0qBpMRY1v3wzbfRAhBdV1VSO9GcQAAhmPQ01Z5MLSVe2WGgpChalt4
      9emKqm2ht9rq9oAndCMXNPX5CHdoH77scdPe2sut6fMQsoe2Vv8bdXWFpeVMWMeUusJqqET2
      hBauEB4njuayMGsUANmNvelUSEmFENS3hHusKjD1LU0hO9dzi7tCQXEAQiBqd/e92NrdIbVU
      ha0Z2sIT6+42bae9coNF9vTOgHogPHZoCS3cZGlv6VODCmA2NYYUrxZCxtZa0wsaBZApu7Gb
      QnNYDmOVd/1HH2JvPRNS2TqcjrAOznYHs9XS6UKtrhBC0GoMPRR80TsAITzQ0jfd6A60lHhl
      B0vriV6PoV6AkL1yg01mawR7eAYPg8JwPGjnKoTA1t7zMwqCxe2043IEH3Jy2814nKGHOELF
      0d4YdEtVCIGzrbaXNPKP7GjHYw8+5NRm7r0B9XDLFUJgtnRjFb0fLnoHgK0F7H0T6+uA3eiV
      HSx9Garqqdz2Knq+kC4E2isJZTW0wxb6h9QTQpHrtPZDnfXJDfadCtxhmkUULK4Q5Jptfdv6
      74lcl8uJyx16z0r92GOPPdbVTfn5+axevZrDhw8zZMgQ9Pquz3Z1Op2sXLmSvLw8AF555RWm
      Tg3PuaJhxVQOtV8HvGXpRyW8veU000Ylo9d598+z2t28uPYYWcl64vUReGTBQ28WMDg1hmOV
      Rh57pwghBKOz4/3kKpBSJiPp07qvqxBQuRkc/j/+E1VGfr/iayw2NxOGJvmuHzjRyGd7ypky
      KvWCez7Ydool7x8iISaSIel+toFQRQa/4rbxkHe8ww9mm5Pfr/iKvUfruGxipu+M3HV7ynnm
      nf1kJscghOD3K76i+HQLsyZkUNtsYekHB7kyN9u/XI8Lsq5AUnV/r0NZ9tDaeCbgPdt27mHZ
      a6tJS00hLTUZAIvVxrNLl1NYVMLUvIns+Gqf7x6VSsVfXnyNfQcKyZs8Hq2mc320kdFExwR3
      nrHNWIvT4r/rb7HaeOr5v1Nw5ATTc8f5ynbLrgP87Y0PGZiahNvj4S/L32Xb1weZMmkM//x8
      G++v3czpilryJo7qNF8he4hJGRrUtgtCdmGtPUwgx/HlV4W88OanDExNJD0l8ewz2Hnixfc4
      cKSUS3NHoVJJrPzHVhpbjKSnJF7wW2eoo+KJiBvYfV2FoL650a9RbWlu4YUlS6mprmb8xAm+
      6+/8/W3Wf/Y54yZM4HjJMd589TUqyssZNWY0Lz//NzZv/ILklBRSUlP9ylZJKpITBwS1MMxq
      s2I0+a8Hn639nHffeZdhw4cRH++1RWfOVPDX517AZrN1rwdw4sQJFixYwNSpU/noo4/YtWsX
      hw4dorS0lC1btrBs2TJaW1sxGAwsW7aMbdu2eY9Ra2igpqaGI0eOUFtby9GjR6mpqaGlpYWi
      oiK2bNnC6tWr2bJlS7cfOOy4Ane7DpUZaGi18dNrR7DkH/+KLX+0u5L8E80Y2r1xu9c2nKSi
      wUKtwcrznxxj+b3TWbX5NFZHgGXuXci+EAHuwOGCx/+ez59+OpO1X5fT2u5dI2C2ufhsdzlb
      CqovuKeorJkN+ZW8+furyRuR4j9jt5WgW35dDMa+9nkx35kyiISYSDbu9y668nhkXvnkMC/e
      dyVPvb2PP71zgEX/PRW3R2ZnUQ1vf3GMnYe7iH0Lucty+iayxx0wbOTxeHj73Y/546L7efnV
      Vb7r7//jMy6bMZXY2Bi279rb4Z6PPt3INXOvYFBWJru+3h9AdvAtONkTeMbamo++4PIZk4mL
      1bN9d8HZZ5BZ+f56nvz9T3nh9Q9oMZi454c3MWr4YLZ9fZCdewtZ/MCP+eGt1/rPWIig9RUe
      VxdlK/PmB5t5+rd3sPSNT33X3/54O1dOn0B8bDRb9xRRUlrF3kPHKSwpv+A3v7K7tRHeN/QJ
      MA608vU3uP3/fZ/a6hpOl3oHtU8cO46hpYWFt97C22+txOl08qvfPcipEydpNRj4/h0/4Gf3
      /i/vrV4Tsly/aTz+7YvBYGD313u49/5fsPyVV33Xl7+8ggd+fR/bt+7ofgho1apVPP/881x+
      +eVs3LiRPXv24HQ62bt3L/PmzWPFihUsX76ca6+9ll27dtHY2Ehrayt/+9vfyMnxHlYdHR3N
      e++9x8aNG5EkiQ0bNnDZZZexbt26oB88bPjZh6SlzcEXB2spKG1hysgkJg1N5EzDvwz2/7tq
      KHnDk3z3Fp5u5arJ6QDoItS8sPY4jSY7dYYAhijoFy7Az7jBvmMNHDrVhMstk5IQxcRhSVSc
      1TcmSsvjd073HaRy/j0b8is5U9/GbY9t5N2tJwOI9hC0A/DzfKeqW9lysJLSaiNTRqUxZXQa
      pdXeXk1Lm50h6XHERkeg1agZlhHPC/84xKkaI2U1Rh7676mkdnmwvAh+nMSPgZJlmV1f51Nc
      cpLszIHE6KPRnNeSP1NZzYTxo5g4bhSHDpd0uOeymdP401+W8c77nzAlb0Kn+XtFhzAZwM/z
      lVfW8lX+Ycor65g0dgSTxg6nvNIbf281tZGdmUqMPgqtRsOkcSM4UVbFlzvyuWJGLrrICH71
      6Iu8seazroQHqWznusqyzLY9Ryg6foZBGSln9fpXz+J0VQOTx+YweexQTlc28Mrb6/nfOxZc
      +FuV/5lboQ2w+3++psYmhg4bxpjxY6mqrASgqrKSMePGMnLUKGprapl26XQ++uAfxMTGkj5w
      IPl79/GLn/yMGxbeGLLcUNLU1tQyavRIkpOTOwwwuz1uEgckMmLk8O47gDvvvJM///nPrF27
      FpVKxc9//nNUKhUZGRlkZWVhtVqxWq1kZmaSnp5Oe3s7zc3emSM6nQ6AnJwcGhsbOXr0KOPH
      jycqKorBgwcTHR3+DZy6jUbX6WW3R6bd5iI1Xkd5vZmqZivJcTpsDjcud8dKta2oHpvDw/s7
      zvD+jjO8/sBM5uUNJCU+koGJAfZ8CXpfIAn8bChntbuwOdzeTbacbs7Ut5E2IIo2y4UtxfPv
      mTw8mcsmZvDeH+ez9WwPoVPUEQR94I268+dzuDyYbS7Sk/SU15kor2sjfYCeNquT+JhI6g0W
      ZFngdHm4/9Zc7lownuzUWHIG+gunfQPJfzn5TaJS4+/5zFYrUVE6GptbkGUZl8uF2+3GZreT
      kpxEVXUdVTV1DB86uMM9H3+2ieeeeZgHfnEnmzbv9CtbFcIulio/4S2H04XFYic1OZGqmgYq
      axpITR6A2WIlLlZPY3MrsizjdLrYe/Aon32xi9eee4jYmGgeffBuXvnTg3yV779FDQS/62aA
      UJzZaidKF0FDi/GsXm7cbg82u5O05HgqapuoqGnEarNjtTlYtnoDm78+THRUhO+3tKSEALoG
      f+RJoB1bY2JjaG5upra6hqTkZCxmC0nJydRW19BQ30BCYiJvvfYGer2e3z2yCKfTyYIbruet
      Nav4YM17IcsNJU1ScjI1NbXYbXYkJOx275kFQhY4HU5qa+q6NwbQ0NDAhg0bKCgoYOHChVit
      VvLy8khKSmLr1q188cUX3H777YwZM4Zly5ah0Wi49tprsVqtXH755RQXF6NWq8nLy8PpdBIR
      EUFeXh5nzpwhNzeX8vJy31hBn+O2Q/WOCy7HRGkZOyiBERlxvLvjDGt3V/Hwf03gy4I6nG4P
      n++rZt+JZg6fbuWWWYO4+5oRDIiL5KpJ6Xy0u5J/fFXJ/CmZTBuV7Fe0lLMASRdc7JeW4k73
      08kZGEd2aizpA/Q89NoeRmQmcP2MIfxm2VeMy0li8Zv7MLTZaWi1cdOsob577l4wlk37q3hr
      4zHuunYswzL9GNnYQUhpU4MbA7DWeQ+l+QapidGMHjSAkVmJPP73vVQ3mvn1bXk8+uYersrL
      xtDuYOkHBfxw3hiqG828svYwkVo1P71hAg++spMmo42vj9Ry7fScztXRTvLwSAAAIABJREFU
      RCEN/o73/IDuIkm0GWovaDFKksSIYUNIGpBIS0srb6z6gIU3zMcjy2zbsZfvLpjLi8tWUtfQ
      xP/8+L8wmdp990zJncCKN9dwquwMP7j1u8TGxnQqWh+XjE7fTed2Fpe9HUf7hfUgeUACw3Oy
      GDo4k6Ur3qOuoYWf/r/vsmTZu8yeNhGjycyrq9fyvevnUFPfRHlVPdt3HyImOorXV3/KJxt3
      cs2cSxk3amjnxaTWEpc2MqjzAiRJha3pxAW9V0mSGDU0k+QBcTQb2lj2zkZuu24WHlnw5VeF
      3HzNDJa8+jG1ja0s+vn3+N61M8kdO5QBCbHctmCW77d7/vuaDj2H84lMHIw2xn/cvTNM7e1+
      p2RmDxrE35Y+j0ql4sZbFvL8c3/h5lu/x6YNG9mxdSt3/c9PyN+zj7q6WnZu207igAEse/El
      vt71FVdePYfhI0b4lavXRZP0/9k77zi5rurwf+970/vszvam1a56sSzJstw7YGywwQRsSCAQ
      SAIE8ksgcRJIfgn8IGDAxmBijFxwwRS5YMvGVZZsy3KTbMlWtbTS9l5my/R57/7+GEmW5Z3R
      vjdFDuj7+eif1b537p6Ze8+55557TiBo6AxA13VGw9MfdHu9Ht58YwcP3P8gf/HpT/H6a9tI
      p1IsXLSQG3/8E5qaGktbDbS/v5/rr7+ea6+9lvLy8uM/UAJkMoLc8PeluQV8NIoNceGNCOvx
      D9SPRrY9BJ1PFWlQOWi8BNGSewt7LHJ0d6b6Z6nxzUIs+6ohYyWlpPfAthOSCVTdtBiXt8zQ
      M/GJQUYOvFSkEWXH6gpSMedsQ4uUlJLw3sdJR0zcJckTX+uF2P11hp7p6u+lf9hcf4J8qA5V
      0lBda+iZtJZm1943TV8iK2kaaHV1Ndddd917ZvEHEFZXpt1gqfE1ISwmQl+B7B5EUTEj19uU
      qdlfavwthktDCyFwuLOHEoqFEAp2p/HyxTZXACFK33bU7ik3XL5YCIHVYyDbrVAoKlZ39h14
      Nnzu6XdqxcaMXFVRcTrMh9BP3gMQAqpWll5u9Upz9esDLWArXL3zGWHzZuQaRFicJ8BgCQgt
      NfWk21d6x8TpCaCoxuPUQrVi9xpf3PLF6Z95SuXR2IONBR7J8bF5a0w1YfK43e846C8FFosF
      zwzS649FCIHfZ95xOWkAAFG7OtMEpVSojkxOvQmEYoOqEt+nqDotI9coQoDJv9M03gaEt97U
      o3anF7uztN6fN1hjqiGIEAJXeWl3rlZXAKvL3GJjcZVhcZXWwDpCraZ0qwiFcr/Bs7k8KfcH
      UUz2YQ76g6ZbjZ40AICwB6DhvNIJbDgvI9MMQkD9+aUzWKojI89k1yJRtgA8OS5tFZrGi4wd
      /h6FEIJAqHSeqs3hweU1v9A4fJVYnaULW3kr55juXiWEgrN6cYFHlB2Lqxybwdj/YYQQVJVX
      FL1/82EURaGqvMK0bi0WK2UBc8b1pAEAEALR8mGwl8Dq24MZWXm0gRP2IDReUsBB5aDxkow8
      sygqtFxhelE2RHABojy/RcblK8dp8FauOQTlNbMNZdO86w1CwV+3EMPpuSaweytx+Kvze0eg
      HqvP2CGnOQTu+hV56dZmtVITKs25RU2oClseTeKFEFRVVGOxGH/HSQNwCGH1IBZ/trgLlVAQ
      iz+LsOYZZhACGi8sfnw9MCcjJ8+epcI/G+ovKNCgsmD1wtyP5f35CSEI1c5BNTGZjOAP1eNw
      GUv9nA6buxxPpfHzGSMoFjuBhqV5964VQsHbeDoiy92bQuGsXmQ49fNYhBBUhyrwuoobEvS6
      PVSHzHv/h7FYrNTXGt+9njQAhxECUXEKzP0ziuNRCZj78YyMAjSBFooVFnwGnPl90bPirIQF
      n8nIyReRadxOKPtt2LxQbLDg0/ntVI7CarNTWb8AUaQQgMtbTrCyqSDNwIUQ+Krn5e2dZ32/
      ohJsWoHFVpgm9qrdja/5nJyXw/LBFmjAXZO/sYJMaGZ2QyN2m9ELmzPDbrMzu76xYKEmn8dH
      TaWxHdZJA3A0QiCaL4W5V1FY1Sgw9ypE8wcKsvgfRjgCsPSL4Crw5HdVw9IvZt5fIIRigfmf
      gvICGwHVAYv+EhEwnvqZHYHD7aeyYaHxW6/HweUtp7J+fkHjy0JRCTYuL7gREIqFslkrsXvK
      KZxTJLB6q/DNPhehFnaXZQs04J11VkE/M5vVxtym2TjshTUCDruduU2zsVkLlyYthKAiVEV1
      5cwztUp6Eex/DVIi+15C7rwL0nmWhrW4EYs+bbySpgFkcgL23Ju5JZwv5Yth/icRtixVQfNE
      6mlofxy68+gydhhXFcz/FMJTXxTdSilJxqcY7N5LKpFv7X2BP1RPsLKpaIeLUteY6N/L1GAb
      +Zbhttg9BJuWY3X6C+JNH4uUknR0lMn2F9Di5tshZhA4qxdlPP8CG+zDpFIpDvZ2MT6Zf0tL
      v9dHc20D1jzi/rmQUhIeH6Onr+u4BeZOGoBsSImMDSH3/g4GthhfrIQCVSsR8z6OcFYUbfE/
      gq4h+1+B9kdzlovOij0AzZchqlZlDm6LiZTI8QPQ9hBMdRl/XrVD7dnQeFHmrkGR0bQ04aGu
      TKkIExUbbQ4P5TWzcbiKs5gejZSSZGSU8Z6dpGLGvwdCUXGHmvFWzUEpsIc+HXo6SbR/R6ZU
      RJbCjLmwuMpx16/A6qksiW6Hx0bpGew3VYPfarFSV1ltuOSzGaSUJFNJ+gZ6GJ/I/j04aQCO
      h5TIiXZk5zMw8BqkjlMqwOqFquWIxgsRvlnFX/iPRkqkloCBV6H/5UxDllxdx4QK3gaoPj2T
      66/aSzteXcuUi+h/Ccb2HacchwBHOVSeCjVnZNJoSzhWKSVaKsHEWD9T44Okk/Gcvy+EgtMT
      wBusweUN5pWRYgYpdeITg0RHOkhMDh+3+5xqc+EM1uMub0K1Ooq+QB2NlBI9FSU+tI/4WDt6
      4jhzTFGxeWtwhFqx+etKrltN0xgJjzEcHiUai+bcawnA5XQRCpRRHgiiqqW9vS2lJBaPMjI6
      zPjk+LvKR580ADNFykxP04kO5EQHRAffrjlvcYKrEuFrypR4UKylXUinHa+OTIxnOnlF+iE5
      kVlgFRvYfOCuztTMsftLk6KZc6wSmY5lOnlF+iA+lmkkr6hgcYOrIlOMzllR/N3JjIark0rE
      SMQmSSZi6FoKKSWKomKx2rE53NidXhTVUtKFdPqxSqSWIhkNk4pPoCVj6HoaIRQU1YbF7sbm
      CmBxeEq+kE4/Xh0tPkEqMoKWmECmE0ipIxQLqs2N6gxgdYcQqu09odtkKkUkFiGWSJBKp5C6
      jlAUrBYrTrsdt9ONzWp9T4z1sDGIxWIkUgl0TTtpAIwipczUuU9GkMnM+YCwucHmBkU94R/0
      O5GZ2u16CpmKgZ4CxYqwOuGIkXrvjFfKTL8DmU5kxiqUzK5EtSIQJ96oHo2USCRoKaSWzIQI
      FUsmxVEo77HvwWHd6pkF9ZABEKoNVAsg3lvj/V+oW6lrSC2ZMVaHdCvec+vB4f4BEl1Lo+sa
      pS148b8UKSVyohdt3zPona+gD++H2NjbjTGEAGcQJdSK0rgKdc6FCF/tCfrwMx4fo3th6A0Y
      b4PYcGZBlYAAqVjBGcrU9wkthbJ5hzIySj9eKXX0yCDp0X1oE93osbHMTuWIbhWEzYPiqcbi
      n4UanI2wlDZE8fZYJTIdJx0+SDrciRYZRCan3j4fEgIUK4oziMVbh6WsBdVdccI8ayl1tMgw
      qbGDpCd70WPhzIJ6GKGg2Nyo7gos/gasgVkIi/2E61YLd6BFBrLotgzVW4e1rAXFXXnidKtr
      JCcHSIz3kpoaJp2MvLMBkqJisbmxekLY/bXYvFVFO6A+7lilJJ2ME50YJDY1Sio+hZZOAfLk
      DiAXUkrk4B5Sr9yOfmBTZhGdCYoVZfbZWFd9DlE5v2QTSqYT0PM8dK6HePY+oe/CUZ658FV3
      DsJwkxpzSKmTHmsj1fMqemSAGWetqHasFQux1q5EsXpKsyuQEj0VIdH7Gqnh3XCcdoxHo7ir
      sNeuwBJsLtliJaVOaqydRN82tIiBssaqDVtoHo6aU1Cs7pLqNtm7ldTwLgO6FSjuSmy1K7EE
      87tRbQRdSxMbbiM6+BZ6auaZYYrVhatyLs5Qi6nif2aQUpKMTTI+1E50cnjaTm4nDUAWZDJK
      avPNaNvvm/nCfyyKFfWUj2E984sIWxG7nkmJHNuXSQWN9Jl/j7sGFnwSEZhTxMkv0ROTJA48
      jTbebv41Fge2hrOxVi4u6uSXUic1uIt494uZ5kEmUf1NOJvPR7F7Kd5OS6Ilpoi1P0d63ER2
      1SGExY6j/nRsFfNLoNudJLo3561bR/OFRdWtlJLU1BATXVvR4uZTQVWHD1/DCqye/G//5kLX
      0owNHGBytDtnC8+TBmAa9Il+ko/8M3JgV0HeJ6oWYrv8OhRfEW5rSons3AD77zeVRvcuFAvM
      uQrRcEHBjYCUEm2im/j+R8GA95QLS2gh9uaLCn6pCDLNzOPtG0kN7ynI+4TVhbPl/ai+uoJP
      fikl6cleom1PZ857CoA1NBdX07mIInisGd1uID28uyDvE1YXjpZLi6bb6NA+pnq25393BUAo
      eOpOwVVhvrheLlLJGEOdb5KcQXOjkwbgGPTxHpL3fxk5nqM/rgmEvx7bVf+D4i9gMSwpkQf/
      AG3ryPfizzsR0PIhRPMHC2cEpCQdbie+7xHzO6osqIHZOOZcVlAjILUU0f2Po4XbC/ZOABQr
      zjkfwOpvKqhuU+NdRPY/WRgn4Cgs/ibcrZcU1AhILUVs/2No4YMFeycAihXHnA8WVLdSSiL9
      u4j0FeCS5TG4axbjrl5YUCOQSsYYOPg66eTMnIATn/f1HkLGJ0g+/LWCL/4Acrw78+48to/v
      fKFE9mwqwuJP5n1t6zLvL5B/oEUGie//Q8EXfwAtfIDEwfXv6udrFil14u0bC7/4A+gpYvuf
      QIu+u5+vWdLRYSJtTxd88QdIj3cQ7XiuwLrdUPjFH0BPEd//WMF0K6UkNnKgKIs/QKRvB7GR
      A6bbOR6Llk4x2LF9xos/nDQAR5BSJ7Xxh8jh/cWTMbwvI6MAk0lOdsFbayn84n9EAry1FjmZ
      vzGU6QTxtscyuf1FIj28i9TgjvwNlpSkBncVLOwzLVqS2P4nM4f2eSLTCaJt6w0dTBslNfwW
      yaE9BdLtzoKFfaZFSxLb/0RBdJuOhZns3laAQWVnsnsbaRM3to9FSslo31uk4sZK15w0AIfQ
      219E2/NY0eVoex5Db38xv5foGuz9bVEXVCDz/r2/eWd6m0GklCR7X0HGDGQlmSTZtQk9NZXX
      O/RUJHPgW2T0+BiJ3q15eX9SSuJ929Dj+S8gxyPe/TJ6Kr+6WHoqkjnwLTIyPkqid0ueutWZ
      7HqtKLuqd6Cnmex6LW+nMDY5QiTcb/i5kwaATIGy1Is/L1i4I7cwSerFn2eKopl9xdAbEC7e
      TuUdhPcjh98w/bhMTpHqL64XdYR0nFQei6qUkkTva3llpBghOfBGJtfdJDIZITFQnPDEu2Sl
      E8T7tuel22Tv1pLpNjWwPS/dJsK9pCLDBRxRdlKRYRLhXtPPS6kTHjxg6tmTBgDQu7YiB4q4
      5T8GObAHvWuryYf1TJ5/KelYbzr7ITX4RlHi/lnlDe1EmlxkZDqRyfMvFXqK5OBO048nhnaV
      VLfJ4b2mQysyHc/k+ZcKPZUJCZogk/XzVoEHlJvo0FumjWt8KjyjjJ/pOGkApDwU+illMtQh
      mSY+cBkdztzuLSXjbRm5BpG6Tnp4bxEGlAMtgTZmzhtKhw8UNZY+HamRt5C6ceMqpU5qpES7
      wMNoSVImD8bT4YMnQLd7TelWS0yRmiqN93+Y1NQwWsL4jkVKyVTY/N2fP3kDIPU0WuerJZer
      db5qLgw0urswuchGkHpGrkH0+GimIF2JSY+3GzeuUpIOdxZlPDnFJibQ42OGn9Nj4eNXzSwC
      6fEu456qlGjhjuIMKJdYk7pNThq4mV4w5CG5Rh+TxKeM/42HOWkAJvshUriUvBkTGcrINsp4
      EdLniiRXnzoREwn0qf5MMTEDSKSxsgkFw5zcdGSQE6FbLTJkWG5GtyYWt7wxJzcVGSnCWIoj
      N52Ko+WR8aT+53/+538e75deeeUVnn/+eRYvXkx7ezt33303p59+etbf7+3tZf369cyfP/9d
      /xePx9m/fz+hUIj9+/djs9mw2QrXFs0oev8utN1/yPk7N24c4N4tI5zW6MZlyxR0+u1ro/xk
      4wDd4SSnNbnRdMk31/XQGLSxZyDG957sZ+9gnNWz3FkuekjU5rNRAg0zH6yU0PEUJLJb/L3d
      Ya79xUtE4imWNJcf+fmWvUOse6mDlXMreP7NPr5z7+vs6Qpz5sIqdF1y7a0vM6vKQ7kvS8Nu
      1Y6oPdPQBZv0yFvokz1Z/38qmuDff/YIr+zo4KxTZqMomXc/8cIufnjn09RWBqgo8/Kju9Zz
      z6OvsHxBAw9tfIP/+d3zCAFzm7L0Q9bT2KqXZ9pQzhQtSaL7ZXItbk+8sJMf3fkktZUBair8
      R/6G/7jpIV7Z0c6Zy1q4e92L3PPIS+zvHOLUBY1cf+eT/OrRlzl1QSNe9/S6VRxBLH4D3wMg
      NdqGNpXdgZiKJvi/Nz3IqzsOcuay1iO6ffKFN/nRLx+npiLTP/lb//N7ntq8g5aGCh5//k1+
      /ptnEEIwp2n6W+tST+OoMth5S0uS7H6J4+k285n736Hbf7/pYV49pNu71r3E3Y+8TFvnELWV
      Af7jpofZ1dbH6lOas16mUhxlWPwzb5YupSQ6uAc9x23qto5evnXjr4jG4iyY8/a7b77nEdY+
      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
      DvKRc5ewbd/bnYCaqoN8/erzcdqt7Ose5jOXruTDZy/izbY+3A4b//TJ86mvDPBmW/atmZRw
      7rLZNFYFZzxWKSWvdIaZTEx/kDY5Oswffv5dRvs6aVywDIBkPMazv7mFrU8+QHldE0NdB9jw
      q58x2NlG06LlbH7wLrY8thZfqApfeWVW2VZVsLTG2AWbjrEIQ1kWNy2d5oFbruf1TeuZd+oq
      LJZMG79tm57h4dtvIlhZjVBU1v7sB+x57SXmnLKCZ+7/Fevvu5tkIk5D6/ysctO6zvwqH6oy
      87EmNclLneGshqN95+s8uuZHWO12KupnAZnDt20b/8D40AChuia69u7g0TU/ZHxkgKqmFh5d
      8yN2bX6GhnlLsDmzN0Ivc1ppCDhnPFaAyfFR4rHpHZd0Os1PbvoFG57dxMrly7BaMzUfNz77
      Aj//xS+pqqrA63Fz3Y9uYvv2HaxcsYzJySnW3HYXS5csOvL70yGlTqCsCsVAYTNN1+kZzH6r
      /s3tb3DLTT/DbrdT39gAQDQa5abrf8yON95g2fLl/OHhdfzmnnsRQlBdW8MN3/8Bm5/fhN/v
      p7I6e19sp92B3zPznr5SSvYNhrNmk4VHhvnlDd9loLuTuUuWHfn5w3ffxsZHH2Tu4mUk4jHu
      /sl1bHtxEw0trfzqph/x2qaNdB/Yz/xTlmeVrSqCpjJjcywZGz9u9s+au+7n/nXrWbZkPi5n
      pgvZgfZuvnP9rTPbAaxdu5bm5ma+9KUvccMNN9DZ2Ul7ezsdHR1H/v3sZz9j165dRCIR1qxZ
      w9NPP42maTz44IPccsst7N69m7a2Nm655Ra2bt064z+w2IxP5baeHzp7ESvm17/jZ1/+6Flc
      /9tnuXBFK6sWNlLud7P2me189rJVfOHDq7nnideorwzQUpe7p+7xZB+LBOKp7GGjjb++mTM/
      8hlG+7oYaN8HQDwyyZwVZ3P+1X/Diw/eRTqZ4LIvfoP+A3voP7iXvrbdXPa3/8pzv12TU3Y8
      pRv2qnPlub/+/NMEQpXMW7aK5x9eC4CuaTz9u7v4i3/6Lx667adseuQ+TrvoUirrm3jzxedY
      dtYF/NU3v89zh34/G1JmbvIaIVPSOfv/P3nXTXzsH/6LZ393+5EQSMeu7Rx8cyv9B98C4PHb
      f8xV/+f/svKSK9j14gZqmuey8MwL2fLk73PKNpN1lOswdsPGTVRWhFi5YhkP/P4RADRN41e/
      vo9//8bXuPmWO/jd2oc4+8xVeL0ent/0EusefYLXXttO6jiZM5mS0sYyeQ6XdM7GL9fcxtf/
      7V/4zT2/OvJ7D933AKvOWI3H6+WlFzbjDwS49pv/xv2//R3dXV34/H6++rV/YMHiRTllp00c
      Wucq+vjA7Tdz2TWfYaCni662zBw7sGcn4ZFh3nfVNfz+zl/w21t+wgc+/imu/uL/oayiik99
      5essP/s8YpHckYaZFps8Gv04qbk79uxnaGSMT33sg9xyx9vz5oab7+Ff/+GvZmYA9u3bx9ln
      n01ZWRlWq5UDBw6wb98+Dhw4QFtbGzfddBNXXnklt912G/fccw9Lly7l2WefZWhoiA0bNnDB
      BRfwwAMPcPfddzN//nwqK7N7mqXmeIXefnrfJmLHxLFVVWFsMsZbnUOsXtTEjgP97OkcpK7C
      T2XQw4HeEXYe6D+ud2+myFyuVNWJkQGqZs2hft5SRnraAfCVV+L0BXj059/ltMs+Qevys3h5
      3a9xuL1UN88jPNDDr771FVqWn2labvZnsv9ff2c7zQuXMnvhUvq7MvcipsbHCNXW43R7UC1W
      lpxxHr++8Tusv+9u5i07jcnwKN/5648z79RVM5BtbLzH+32L1Ybd5cZfUU08ksncmbXoVJZf
      9CEAUok4A51t3Hf9f/D7m75DyymreHbt7Tx6yw+Yt+qcnO/WTOg214La3tHF4sULWbJoIR0d
      XQCEw+PU19XgdruxWCy0dx76ncUL6Ojs4s8/+Wc0NtZnfedMZZv5fZvNisvloqKykqmpzCLZ
      1dnJwsWLWLBoEV2dnaw4bSU//O73uOQD7yeVTNJ+8CDf+Kdr2f/WvsKOldzfhdHBARpmz6Fl
      0VL6utoB6OvsoHXREmbNXcBgbze9HQd5+O7b+NG1XyUej+Fye9jw8P188JrP5JStI42HLrNk
      gY2FJ3hu81Z27NrP0kVzWThvNl29b+/C0lqa8qB/ZgagtraWvXv3kkwmSSaThwTLI8odGRnh
      +eefZ/Xq1UxMTLBlyxYWLlyIlJKKigoaGxuRUvLlL3+Z3t5e7rzzToN/ZvEwUqXTbrVgUTMN
      P2wWlboKP3s6Bqmv8FNd5mVsMspkNEHI76auws9wOHe81G2iQqg1R70bh9vL5OgQo31deMsq
      iEeniE6Gefgn/8lVX/sedXMWs+He/8Hh9nDFV/+LgYN7aVhwCn/53dvY8+IzpuVmfSZHCCYQ
      qmSop4vB3i4CoUpikSlcXh/jI4Pouk46mWTTo/fzt9/6MR/9m3/k1Q2PUd86n2/eeh/7tm9B
      S+f27CwGa69bFCVnlc50MomUOlNjI1htDpLHlBuw2OxUNbXyyX/7IZGJMNs2/IEP/e21XPOv
      17Hlidw7ADMluHOFYCoryunu7qGru4eKinKmIhG8Xi9DwyPouk4ymaIidPh3eqkI5d6pvhNh
      uC7Q8cJFyWQyc5N1dBS73U48Hqc8FKKnu4fenh7KQyG+9c3/4CMf/xiXX3kFNXV1fOcH3+cz
      n/8cz23YmPPdRmvwC3J/d1xeL2PDQwz2dBEoryAamSIYqmCgp4uRgT58gTIC5SH+8mvfYNGK
      VfS2H+DAnp2EqmvxBXI7hBbFeE+ObJ9FWtOYikQpLwvQ1d1P38AQZQE/8XiCVDqNlJJEIjmz
      M4DW1lZ++ctfsnbtWk455RROO+007rrrLgYHB1m2bBnz5s1j+/btAHz4wx9m8+bNRKNRVq5c
      yfDwMEuWLKG7u5uuri7a29tpaWlh8eLFBv/U4hCNJ3lg4xvT/p/TbuWfP3UBAY+D2bXlhAJu
      rBaVnQcH+Ierz6Ojf4zfPbONy85YwEUr57Lm4Zd4o62Xf7z6fCRw/7PTvxcyX7TPXHoaVWUz
      j08CtA1Hs2aNhOpm8dia6xCK4LQPfoI//Py7BCrr6Nqzjc6dWzPGobeDsYEedm9+mjkrz2Hf
      1hfY+dzjLDzzYqpnz8sqt9prZ1G1sUqL47EUfZPTh7kqG5p44te307bjdT78l1/iodt/yqLT
      zmJqPMxjv7qVsy+7inmnrOSRO2+m58A+Lvzop7j3hm/z+vPrqW6YxZLV52aVa1MVltT4DdXf
      V4Vge+9kVm9cUS08fseNzDvtHGxOJzs3P0NsaoJXHruP0b5ubA4nodoGnr7nZhoXLGXpOe/j
      2d/dzoE3XuXMKz6Jr7wiq+zWkItan2PGYwVIJGJEI9MnETQ21HPnPb9h+xs7+ZvPf4abb7mD
      M04/jfHxCe64816u/PClXHThufz0f25loH+Qz37mGtbcdjcdnd1se2MHp56yBIdj+vEoikpZ
      yFgDdiEEA6MjWb1xi6py6823sOqMM3A6HWx69nne/8FLufXmnzM4MMCfXXMNT/7hcTraO3jt
      1S1UVFZw0w038ua27Vzz6T/H589eYLHMF8Drds94rAD9E1GmsqRkVjfM4u4br0MIwcUf+QR3
      Xv9d3nfVNWx6/BFe3vAUV/3Vl2hdtJS7f/x9UskEF135Z2x6/BHe99Grcbo9OeUGXXYagsbm
      mK5rREa73/Vzt8vJnJYmmhtrefixjTz+zGb+7gtX89yLr5FKpVm6aC7fu/F2Y9VANU1j3bp1
      XH755VgsfxzNxMYjcS766s3Ek6VNV3TYLKz/yRfxu41N/I37R3ipBKUKjmV1U4DzW414itA7
      HuOZ/cWrrZSNkNvG++cZa8QjpWTtm/30T5Y+E+iKhZU0BY0dAkcmw/R0vVWkEWXH4fTQMGuB
      Yd3uPrCfqVhp74QAzG1qJuA1VoZ9R88Ibw2Wfo7NrQyw+DjnhseipVP07t5o+kKgof2Rqqpc
      eeWVfzSLP4DXZWd+U+nPJOY3VeJ12Q0/12hwoSgUZuSWu22GMnEKRZWJZhtCCOoMeuGFwKII
      qjzGQ4EOp+eENHF3uoyXWhZCGPbCC4EiBJ4c2VfZCHlPzByrMCFXUS1Yneb7jPzJ3wNQhODi
      lXNLLveSlXNNtQisDzhw2wrfoCMXbptKfcD44mhTFaq9xo1cvjSYNJKt5cYXi3xp8DuwW0yc
      AagqLnfhGwwdD49v5mnLRxP0lT513OfxoqrG50rI7cBuKe0cs1tUyg1GAyBjXF1+8w7sn7wB
      APjgGfNNHciaxe2wcekZ2fPYc2FVBIuqc8cSC82iak/OA91sCCFoDZV2rOUuG2Uuc59lhcdm
      yhvPh0VV5jpYCSHwB7KfKxQDu8ONw2HOk3c7nbidpfWsK4JlpnSrKoKGYGm/tw1Bj+ndsitQ
      gzDZsOekAQAqAh4+et6Sksn76PlLqAiY+4IJIVjR4Memlia0YlNFXu0h6/xOyk0uyGZYVO0z
      3XxdEYKV9aXzqis9NsOx/6NxewPYTS7IZigL1Zj+HgghqAllv7BVaNwOp+HY/2GEELRW+rGU
      KHxpUTLyzOpWtdhxB2eWwnssJw0AmQ/8r69YTWUJrH5l0MNff3h1Xm3gfHYLq5vMbcWNcsas
      ID67+TMfRQiW1wcMp7eZodbnoN7gjdpjaS5z0WQi3GUURcA5s4J5nZEIIaioaoASaNfl9uPx
      5vedC/p8hm7lmkUADTXGMpWOxWm1MNfALf18mFcVxJnj9vXxEELgr5qNYjEebj1pAA4R9Lq4
      9V8+bjgrxwh+t4Nb/+XjBL35xZqFEJwxK8DyuuJ6q8vrfKxuCuTds7TSY+fM5vKiLlPlLhvn
      zA6Z9v4PowjBpfMrihoKEsAlc8qp9eV/PuJ0eamum53/oHJgd7ipbWjN+3sghKC1oanooaDZ
      9Y14XfntjIQQzKsKMDtU3Dk2O+RjblX+c0y12KicvRJFtRp67qQBOIrmmjJ++Hcfwmk3psSZ
      4LRb+eHffYjmmrKCvE8IwYVzymkNFefgsjXk4sI55QVpWC2EYFbQxdLa7Pna+eCxWzh3dsjU
      ZbXpsKkKH5xXgd9RnGy31Y1+5obcBdOt11dGeUVdAUb2bqxWO7UFbAqvqiqtDbOw24pjYOsq
      qynz57+gQka3S+rKqfYVZ45V+1wsqSvMHAOw2t2UNy5FiJl/VjO6CPanghCC+go/S1pqeG7b
      ARKpwtwN8Lsd3PDVK1i9qKlgHzaAoghaK9yMRVMMR/Jr13c0CyrdXL6oqmALKmR0W+mxY1EU
      BrJcDjNDwGnlwtYKPAU22naLQnOZk+7xOLEc9ZeMoAg4synAinrz8d7pEELgdHlRFCXr5TAz
      2OxO6hrnYrMVdldsUVUCXh8TU1OmavVko76qhtqKysLOMSGo8buZSqSYjBdujtUF3JzWVIWl
      wHPMYnNic/mJTw7P6G6AoYtgfypIKTnYN8o3fvFYzoqeM2FJSw3f+etLaa4xl5EwEzRd8mpn
      mE0Hx/LqvmVRBGc3BzmtMVC0/H0pJT3jMV7uHM17YW0uc7GyIVjUlL14WuO5A6PsHYrmVSPe
      bVO5sKWMWUFn0b4HUkoiU2EG+trR8uzf6/WXU1ndhKoW785POp2mo6+HkfH8Ll1ZLRZm1dYT
      8PqKplv9UJXQPX1jpmo3HUYVgvk1QeZUBvIOV2ZDSkkqEWG0awfJWO7OZicNQA6SqTT3bXiD
      2x99hf5RY637qsu8fO6yVXzsgqXY8jjgmSlSSoYjSZ47MC8LS5sAACAASURBVErbcNRQ0xhF
      QEvIxbmzywi5bUWbRIeRQCKlsaN/nP3DEcNGq8xl5ZTaALU+4xe+zCClpGMsxkud4wwa7HFg
      VQWLKj2c1uDHYVVLchieTqcYHe5lPDyENNiFy+5wUV5Rj9tT2F1KNqSUjE9N0j3QTzRurHa/
      oihUBMuorajCWoLLqVJKJuNJdvaN0j9uzCEQQLXfxaKaMryO4s8xAKnrTI52MTl0EC1L86CT
      BuA4SCmJJlJs2Lqfx17azbZ9vUxEE++qayKEwOeys2xOLZeuXsAFK1px2a0l+aCPHe9QJMnO
      vknaRqKMRlPTGgNFZBbSlnIXi2q8VJRg4Z9urLGURvtolK5wZqzTeVcCcFpVqn0OmstcVHkd
      RfOecqFLSfd4nL2DEbrG40SS2rSLgEURVLgzup0bcuO2qSdEt+l0isnxEaYmx0jEI9lr8Vhs
      uNw+vP5yXO7iedG5kFIyEZliJDzGxNQUySw7GCEEboeToN9PuT+I1WI5IbqdiCfpHJ08Ujdo
      OtUKAR67lWqfi8YyL74SLfzHomtpohODRMP9JKJhpPa2bk8aAANIKYkn03QPhukZGmcylrGq
      Xqedugo/9ZUBHLbSfyGzoUtJJKkxFk0RSaZJaxKLKnDbLARdVtw29YQspNMhpSSp6Uwm0kST
      GildRxECu6rgtVtw2ywIwXtCt1JKdAmTiTTj8TTxtIYuM5f0PHYLAYcFu0V5T4wV3q7hn0zE
      SaeT6LqGEAJVtWK12bFabYB4T4z3cJXhZCpFIpkgdaiXgKoo2Kw2HDYbqlp6g5oNKSXxlMZU
      IkUinUbTJaoisFsseOzWzK7vPTRWKXXSiSjpZAxdT/PHU9SnBAghcNqtzGmoYE5DaW9hGkVy
      yMOOxhkcGGN4PEIimcZusxDyu3FUBXFZXeSsgVxiLGj4iOIWMXSRRggFRdhQhQuBSiny3WeK
      oqdxTfRiGexEmwoj0ykUhxtrWTXW6llg8fJeGm9aCiZ1G5G0esS4OlDw6SqqFJyAkk3TkhmG
      xCZjWLQwMh0HqYFiQ1G9KASA0pZpyIWUmWZCEzGNyXialKZjVRW8DoHNomK3qO+lKQapJIz0
      Ioe7ITZ50gD8saFLyf7uYda9sJPnth2go39s2ubzFlWhqTrIuctm86GzFtFan38OvVGklGip
      OLFwD/FwX+bASk7XJEegWO3YPRW4yuqxe0InpBCa1NJEdr/MxOaH+P/svXd4XMX1uP/e7btq
      q14t27Il94p7xwZMDYE4OPANAUyJA8GYhBJaQiiBAAESEoL5kF8IELAxhG6wccXG3bJwkbu6
      1dtKWm29d35/yFokSytrpZUs4/s+jx7t3r0zc+7M3HOmH/vBrXhry6GNdywJyWDE1H84YRPm
      Ez71KnTW4K5M6ZSsQtDokcmpdpBb46TK7kZub5gCsOg1JIUbGRxtITHceFZ6hUIoyLZCvJWH
      kOsKEG47tDfAptGhscShixqMLmYokj44y2kDk1VQYnOSmVdNdnEdFfUuv8OssWEmhieFccGA
      KBIiemfO6jRhUVyNNO79GvvOz3Ed34PiqIdTK4TUIaAfCEIITpys4pUPNrNxbw5yAJN/Wo2G
      OePSuHvBTAYFcV2yfwSy10192VEaqwoQSmBLAfVmK+GJQzGG9Y5iFYqCff83VHz4Ms7cA7Sr
      mPygMYUQMfs6Yq6+E11oZI/3uJrchspkldRztKIRT4AT7DEWPRckh5MSYey1SWC5Ng930VYU
      e1lggTUG9HEj0SdPQqM309M9LiEEZXVOvtxXSnaxLeCFFsOTIrhsdALxvbV4weOm/pvl2L5a
      hlzd/mpG1QD8APDKMv/5cjf//Ghrt/wamAw6fnXNNG66bAK6Lpyi2BmEEDjryqgt/A7F2739
      AObIFKzJo9Doem7Xrmy3Ufr2E9Rt/dTXauoKush4EhY9TeiYOT26DLTQ5mRLXi2N3VxiOzja
      zNRUa5dOKu0swuvElbcBb+VhAjGqpyPpQzGmXYTWOrBHl1pvOlzOmoOleNrrSnUSvVbikhEJ
      zB4a16NLrT2lOVT+6z7cud91eK9qAM5xHC4Pj/3fl3y140jQ4rx08hCevP2yoO+IFkLQUH6c
      upJDdOeFb4nOFE70wEnojME/FM1dUUjRS4txFR4OToQaHbHX3Uf0ZbciBeiq8EwIIdhf2sCu
      orog5SxEmXVcnB5NWDfOgvKH4rThOPoJorEySDFqMKROR584IehGwO2VWbGzkKyC4DmJGZtq
      ZeGkfhiCvIdFCIEz+1sqli1BsZ9ZXnUn8DmMy+3lvn98xtrdHTvGDpTjJ6s4XljBvAvSg7ZT
      UQhBfdkx6ksPBSW+ZhSvC2ddGaaIhIDPQekId1UxBc/+AnfxiaDFiVBoPPgtkk6POSN4ikoI
      wXcl9ew6GdhelTPh8CoU1jrpbzVhCGJPQHHV4Tj0IcJZHbQ4QSDbCpA0WjRhyUHLW4+s8M7W
      fPYXdbyhKlBKbU5Ka52MTIkIWk+gWfmX/+OXCEdDp8KoZwGdoyhC8MJ7G9i4N4gKqgUb9p7g
      hfc2ogShgyiEwFF7MujKvxnZbac6bxdKkI4VUJyNnPzbXXjK8oMSXyuEoOLDl6jb/rnfdfmB
      RSfIqXawJ8jKv5k6l8y6E9V42llI0BWE7MZ59DOEq2dcLroLt+KtOkK7C/MDRAjBZ3uLOVgc
      vOM1WnKwuI7P9hYHpR4AeEpzqFi2BOHq/IY61QCco6zbfYwV6zoe3+suK9ZlsT4IvQvZ3Uht
      0b4gSOQfT2MtdSWHuv0yCSEo/+BFnDk9KK+iUPqfP+CpaOvMO1DqXTLf5tcGbdinPSrsHnaf
      rAtK3roKuzDZG1gquHLXobi632LfX2Rj6/FgDVG1z9bjlUHpXQiPi8p/3depYZ+WqAbgHKTB
      4Qpa67wjFCF4/r2NNDja30beGYQQ2IqzW+0+7CnsVXl4znD2yZlw5h2kdt07QZLIP4rdRvmK
      P3fZmTc05e2uIhvubkxKdpZD5XYqG7tXhoq9HG9ZVpAk6gDZhatgc7cMltMj81lWcY8aVmia
      Cfssqxinp73lz52NRFD/zYozTvi2h2oAzkE+/uYAJyuCOybpj5MVNj7+5kCXw3scNpy27h2o
      12mEQn3Z0S6/+EIIKj99FdHNg9Q6S/3uNTjzsrscvqrRQ15N8E5W7QhFwHfF9d3KW/fJHd1a
      SRUIcvVxFHt5l8PvzKmmOsBzn7pKtd3Nzpyuz4corkZsXy3rUljVAJxjeGWZFet7oRXVgvfX
      Z+GVA2+hCCGwV+YSrBU/ncFZV4rsbuxSWE9FIQ1Z64MsUQcoMjXr3+2SUhVCcKjc3os5CwU2
      J/WurrVUhcuGXJsTZIk6TBFP2XddyltZEWzr4aGf09l2vBK5iyf5Nu792u86/zOhGoBzjEN5
      5eSVBHP1xJnJLanmUF7grSkhFJy20h6QqMNEcXSxx1G/ezX0Uuu/mYY9XyP8nNTYEbIiyK/t
      ndZ/M4qAvJrATuxsxlt9vNda/740a05AgJsMAU7WNFJR3/Vhz65QUe/iZE3gDRchBPadn3c5
      XdUAnGPsyM4PxgKHgBCiKd1A8TTaUOTe6Ua3xFVfEXDLTwiB/eDWHpLIP3J9Dc78wIeBqho9
      OL29q1ABiuvanoR7JoRoWqLZ63gdKI0VAQc7VtbQqz0raOojHyvr3NLNVuHcTlzH93Q53T5j
      ABRFwe3unLJwuVwoAZ5z/kNACEF2F1riweBQXnnAL353J2S7isdRR8DDTrIXV0GQNnwFhOiy
      ATgbVDvaP/q4Q4TSJUUcDOQA5wEEdKklHgxO1gTudMhbUdB0tk8X6dQWv23btvHxxx8jSRKP
      Pvooa9eu5cc//nGb+z7++ON2r59OdXU1n3zyCbfccovv2rFjx9i5cyc33njjGcO//vrrLFy4
      kLi4uM6I/4NBACcr/C/zSowO557rZvLp5oNsPZAHgFYj8dQdlxFqNvLKB1uIjwplwZwxnKyw
      8dy7G3joxrkkRIezfO1eth3w38ovqrAhCOy0Fa/b3uHvhcXl/OH5N9DrdPzl8bsJDWlyFv7y
      6++TfTSXi2dPZGC/RN549zMcTjdPPHAb/37vCxrsjaQNSObOm69tN15FdqHIXrQBHBEhOxvw
      1nc8tBZz9V0YU4fRsHcdti0fAaAxh5Fwy5OgyFT8769EXvwLtOYQ3CW51G56n5hrl+LMO4Dt
      mw/8xuspD7x1XOfyP7TRWF/Hf56+D0WWueG+p4iMTwTgu81fs/a9N/jtqyuoLClk+V/+gE6v
      5+ZH/8L6lf+mLD+HsKgYFtz9iN+4nV4Ft6xgCsBHsJDdCG/HQ0d//v++Zv/xYi6fMZwbLp8I
      QEFJNQ+89DF6vZZXH1nIZ5sOsPrbbMYN7ceU0QN4dcVmHC4Pz937YwYmR7eftjPARogQVDX4
      b4iW5WSz7X+vY7KEMX/xH5E0GmpKCtj24Wt4XA7GXHwdRdm7qa8uw1ZWxBX3PMeW9/6KVqcn
      KWMsIy/0rx+r7O6m7nYAm9g8lUUdD61ptMQseg6NOYyaj17EU9TUyAmZdi3mkbM6ZwA2bNjA
      DTfcwMiRI9m3bx9vvfUWpaWlzJo1i08++QSNRsP8+fN91y+//HLeeustIiMjueOOO3jiiScQ
      QjBr1iwuueQSvF4vFRUV5Obm8vbbbxMTE8O8efMAyM7O9sV577338uSTT/rCpqWl8dZbb5Gb
      m8vChQs7nUk/FIQisDv8V86IUBPZuWWYWmzdv2BICgdzy1i17RBLFswgItTMva98wkM3zmN8
      RjKKIvjtK5/y3J1XdmgA7A4XQhGg7XzlPNPSzxWfrOO3i68nJ/8kazbt5NrLZ+Nyezh8PJ9l
      zz/Arfc+wzOPLObVZ+/jzRWryD6aR15RKU89eDvJiR0cxy2aTu4kAAOgOOwdbh6SdAaM/YZw
      8pVfk7L0NZ8BiJhxDfZ9m3Dk7MNTXoAhLpWytx7HU1WMIX4AzhNZaEMjO0xbbgy8BdfR0s+9
      G79kymXXYo2JZ+sXK7li0RIAdHoDlrAIAL79dAVX3/FbSgtyyNq8hvxD+1hw96NEJ6Z0mK4Q
      4FEEAXkJlt0d5q3L7eXgiRLefvoXXP/gv30G4O3Pd/LwbfM5XljBqs0H+d/aLB65/VIG94vB
      7nDz5pM38vqHW9h/rNi/AZADG8sXAlwdDK3tXb2cSxf/kf3rP6L42D6Sh4zFmpDCZXc+xYnM
      b6jIO8KMn92N22Fn1T8eITQyFkd9LRff8XvCouI7TNvlUQLV/4gztP5NGRNx5x2gYcenRF77
      W6r+8zAAxoFjqF/7ZueGgO644w7WrFnDb37zGzIyMhgxYgSLFy8mMTGRgQMHkp2dTUpKiu/6
      +++/z9ChQzlx4gRFRUXodDoeeughdu7c2SregoIChBDMmTPHd61lnBUVFa3CvvPOO9x///1M
      mjSp8zl0HnE4v5zy2tbjiNYwCxU1DVTXNRIWYkIRAkURVNY2MDApivLahnaPi+5JNm3by4vL
      llNdW0d8bBTxsVHU1DbttqxvaCTK2uSVSq/XERcTyV9ee4+i4goumT2JWVPG8J/3v2TJoy/3
      jrAaDbE/vY/QMXOQ62uAU8blFLrIeIwpGURffjthEy7BfmALkRf9nKTFf8Fdloe7NK935GxB
      fW011ph4ImLiabB936sZMWU2mlM+fhtqq4mIiccaE09DbQ1jZl3Ct5+v4K9LbwzaztQz4ZUV
      Hv/nKlZvPUS0telYZ32Ls3Gqau0kxoaTEBPOyXIbhaU1bN+Xy42PvEV8dBhPv/EVBSU1XDFz
      RK/IC+BxOTCFRhBySrEDSJKGPaveYc8Xb5E8dBwA3639gDEXLUCRZVKGTWDXJ//mm/++1Gty
      6uIGYL32Pgwpw/DWlqHUV6GxhPt+dxzcjGnErM4ZgLy8PG666SaSkpIoKirCbrdTX1/P22+/
      zbBhwxg4cCCKoviuWywWJEni2muvJSQkBI1Gg7ad0yXT09O5+eabefHFF31j+i3jFEK0CitJ
      EjabDZvt7Iwtn20kjUSI2X+r1mzUE2IyEGo2YtBpmTC0HydOVjJpeCqThqWSX1KN2+Olf0Ik
      IwYmsO1APmMGJZGWFEWjs+PWeojZiBTgmSWSn7N5Jo4dxi0LryAjrR+bd3zHlp37SE/rx869
      2USEhZBfVMLJkgq8XpkPv9iIxyNz6/+7koZGB2n9k7jl+iuorulge74EUoDOzDXmkPabXopC
      9Zf/ouHAZvRxqeiik5A0WrShVgzJ6biKjuAuL6Q+cy266CTcpblUf/0W2rAoJL0RjSUMyWRB
      MvhvM2stYQHJCmDooCeWNDCdQ7u+5dCuLSQOzOBY1k4UWaahtgavx0V9bTVJaRkc2rWZw7u2
      kDQwnYjoWC5ccBOKLHfoR1iSmjyfBYTW0G7eajUSd18/m3mTM8g9WUXhKd8VVbV2snNKGDow
      gQ27jrFp93HGDkmhX0IkP7loLDqthuVf7cHjlblz4UwcLv91V9IaAxJVkujwBNTw2CROHtlL
      UfZuopMHUpi9G1t5EUOmXsLFt/+e/ev/h9ftojB7FwPGTMftaCB56DjGXXoDtvKTHaZt1GsC
      Pi1cMrdfd7xVRdSt+RfOw9swD52KaehUPKW56BPS0ITHIFyNNGx6t3OHwZWVlbFq1SoyMjKY
      OnUqoaGhbNq0iYsuuoivv/6atLQ0RowYQWRkJJs2beKGG25g165d1NbWMm7cOAwGA/3790ej
      0dC/f38ADAYDZrOZTz75hMmTJzN06FAsFgvDhw9vFafJZPKFnTdvHitXriQlJYXRo0djMPTc
      McB9lW0HCzhxsqrd36aOHEBaUhThISZqGhykp8SwdX8e1lAzIwcl8q/Pd5J59CTXXzSO1TuP
      cDC3DIfLy7wJ6bz+ybYOjcD4jGTmTxoS0CFbXpcdV33bbf96vQ6zyciwjAF8/c0uIiPCuHr+
      TLbvPsjQ9P70T0nk/U/XcefN16IIQXllDQcP5xJpDeN43knWb9nD7T//EXEx7Q+taHQmwuLT
      A5JV0uio3bAcxdl23kK4nSB78VQWYZ21gKovXgdJwhCTQsPe9ViGTEAf14+aNW9hGTKR0LFz
      qP7q3+ijk7AMndzkvEb24qlsXwGET/8x5rTRnZYVoM7ppdDW/vBGXMoACg7vx26r4cIFN3Es
      ayfJg4awbsW/CIuMIS87i3kLF/Hd5q8JiYhk4iVXk394P3vWf8GMq68nNqW/33TNeg1jEsMC
      O2xN0uAt3w9K6/olSRIWkwGDXkf/xCje/mIn9/78QgAKSmq4avYovtxykMhwCwsuHsvwtESW
      fbCFn18xEYvZQGllPd8dPUlkuIXE2Ih2k9bFDEMbmhCArBLHyuopq2s/bxMHjeTAxk9IHDyK
      fiMmUnBgBxFxyXz39UrK8w4z8cqbcNrrSUgbTnhMApIkcWLPRooOZzLp6kWYQsPbjRdgYEwI
      Y1IjA/Nq4PVQv+k92ix6EArC7USuq0QTGolx4BhsX76GLm4AeD1oQq2ETr1GPQ76XOONz7bz
      8vubez3dpdfN5LarpgQUxtVQTeXx3pfVGBZHdNqUgJSUEILCFxZh3/dND0rWHhL9f/8+lvTx
      AYUqq3fx2eHe3awEkBJuZH5GYE6DhBA4D3+EbMvrOcH8YB7xM7RhSQGFWZddxqp9vbR7vQWX
      j05k3vCO5wlOR3E5KLpvGkpj10ZF+swyUJXOMXl4/173MSpJTekGit4SgUbb+700Y1hswMcB
      S5JEyPBpPSSRf7RhkZj6Dw84XLRFj6kHnbX4Iyk8cE9hkiShjUjtIYk6QGdGYwncd3d6fGiv
      e3OWTqUbcDiDCePgC7qcrmoAzjGGDYhjQGJUr6Y5MDGKYQMCX3IrSRpMEQF0v4OBJGGOSOxS
      0LCJ80EXXCc4ZyL0gouR9IGNU0PT+Hl/a0BrcbqNRoIBkeYuhdVFDYZe9uOsixwEmsCd2SRH
      WogNC7xMukNsmJHkSEvA4SRJImTSlV1OVzUA5xg6rZaFc8f2aprXzR3bJReRkiQREjOQnvbV
      2hJTeAJaQ+AvEoA+th+hY+cGWaIO0GiJnHtDl5yXSJLEsLiQXm2ppkaYCDN2zYOVZIxAa00L
      skQdpog+fkyX8larkZg6OKYHZPLP1MExXXYMYxl3MdqorjV6VANwDvLjWSNJ9jPpFWySYyP4
      8ayRXQ6vN0dg6mKLPGAkDWHxGV32BiVJEjE/uhOpl3oBYRMuwTQg8OGfZqItegZE9k4vQCPB
      2KQAJ39bIEkShuTJvdYL0Ealownp+kbRSWlRRIX0zvBlVIiBSWld79VrjBYiLv1l18J2OVWV
      s0ao2ch9189B08OTARpJ4v7r5xBq7np3WJIkIpKG+10SGkxCogegN3fPMJoGjMA67+dBksg/
      mpAI4hY+2LRCqItIksTElIgOl4QGi2FxIURbuleGmpA4dPG90HvVGjGmzuiWW0iTXstVY5N6
      vIclAVeNTcKk74ZvYEkibNZCDAPHBBxUNQDnKPMmpLNwXuAFHggL541l7oT0bsejNViwpgS2
      zDFQ9BYr4YnDuu0LVpIk4hb8BlOAyzIDQqMh4aY/oo/teNdtZwgzapne39qjiio2RM+E5PCg
      5K2x3zQ0IYGtdAkwFYwD56Exdr+HPColgmk9PBQ0bXAMo1K6L6ukNxJz6wtoQqwBhVMNwDmK
      RpK47/oLmTNuUI/Ef+G4QUHrZUiShNmaTFjCsCBI1hatIYSoARN9u1y7i8ZkIXnJP9DHB77y
      6YxIErE/uZfwKVcGxXG5JEmkRZm5IDnwzWSdIdyoZd6gKPTa4KgKSWvAlHEVkjEwRdVZDP2m
      oYseEth5Cn6QJImrxiUxIsn/2v3uMCIpnKvGJQXNgb0+IY3YX/4Nydj5ifpObQRT6ZvotBou
      HD+YwrIajvvZHNYVLp08hGcWX4HJGLxhG0mSMIREIWm0uBqCt35dZwonJm0KOmNI0OKEpt25
      oePm0pi9HbkuSPJqdMQufIDoK+5A0gSv7SVJEvGhBvQaiWI/G5i6QpRZx/yMGMKMwTGszUg6
      I7rINLx1heAJ1smbGgypM9AnTQyaQoWmCeERyeFUNbgptQXP/8LYVCs3TEnFoOvG0M9pSJKE
      LrYfxoFjcOzbgPCcWV51I9gPAK8s858vd/PPj7bidAfuAKMZk0HHr66Zxk2XTejSqp/OIITA
      WVdGbeF3KN7uvVDmyBSsyaPQBHDoW6DIdhulbz9B3dZPu+XQRBcZT8KipwkdMyeoCqolQggK
      bU625NXS6One+U6Do81MTbV2eCxCdxFeJ668DXgrD9Mdr3GSPhRj2kVorQN7LG9lRbDpcDlr
      Dpbi6YYPZr1W4pIRCcweGtflVT9nQgiBpzSHyn/dd0Y/waoB+IEghODEySpe+WAzG/fmIAfg
      L0Gr0TBnXBp3L5jJoOTAdnl2DYHsdVNfdpTGqgJEgF6b9GYr4YlDMYbF9YKsIBQF+/5vqPjw
      ZZy5BwhEWWlMoUTM/ikxV9+JLjQyKEMTHSEAl0dmb0k9Rysa8QToZjDGoueC5HBSIgLf8NUV
      hBDItXm4i7ai2NseG9IhGgP6uJHokyeh0Zvp6eXGQgjK6px8ua+U7GIbgWStRoLhSRFcNjqB
      +HBT7+Stx039N8uxfbXMr8tI1QD8wFCE4HhRJZ99e5DNWTnknTpg63R0Wg0DEiKZOTaNq6aP
      YHBKTI+vKjodIQSyx4mj9iTO2hLcDhuI9nzOSmj0JkyhMZijUjCGxnRr9UyX5ZW92A/toG7r
      J9gPbsVbWw7K6fJKSAYjpv4jCJswn/CpV6Kz9o6haiWrEDR6ZHKqHeTWOKmyu2mv4SoBFr2G
      pHATg6PNJIYbe70eNMmrINsK8VYeQq4rRLgbaNfQanRoLHHoogajixmKpA85K3lbanOyJ6+a
      7OJ6Kuqd7RoDjQSxYSaGJ4VxwYAoEiJ6R/GfJiyKq5HGvV9j3/U5ruN7UBrrfb3Z88YA1Nd3
      3WvOuYqsKFTZGikoq6HKZsfp9mIy6IiOCCE1PpLoCAvaII5FdwchBEL24HXZkT0OFMWLJGnQ
      aA3ojBa0egtIUu+/QH5kRfbiqSrGXV6A3FCL8HrQmELQRyVgSBjQdAroWTBS7SGEwC0LbE4v
      dreMR1HQShJGnYZwo44QgxaNRJ/IW4RACAXhrkdx1iK8zqZGgcaAxhiGxmQFbe/0TjqDogjq
      XV4q613UOz14ZAW9VkOYSU9MmJEwow5NDw31BIoQAuF24q0owFtZhOKo928AiouLe1u+HiUs
      rGdWSaioqKicq5w3PQAVFRUVldb0jT6qioqKikqvoxoAFRUVlfMU1QCoqKionKeoBkBFRUXl
      PEU1ACoqKirnKaoBUFFRUTlPUQ2AioqKynmKagBUVFRUzlNUA6CioqJynqIaABUVFZXzFNUA
      qKioqJynqAZARUVF5TxFNQAqKioq5ymqAVBRUVE5T1ENgIqKisp5imoAVFRUVM5TVAOgoqKi
      cp6iGgAVFRWV8xTVAJzDHDly5GyLoKKicg6jffzxxx/396PL5WLPnj0UFhYSERGB0WjkwIED
      VFVVERsb262EV65cyYgRI7ocvry8nJycHCoqKhBCEBoa2i15uoMQguzsbLKzs5FlmaioqKDE
      u2rVKpKSkjAYDG1+27x5M1u2bGHy5MkIIThw4ADfffcdWq0Wq9Xqu2/Pnj1kZWURExOD2WwG
      oLS0lL1795KYmIhWqwWgqKgIjUbTblrtUV1dzauvvsrmzZuZMWMGAF6vl4MHD1JeXu77k2UZ
      SZIoLCwMWr60JCsrC5vNRkxMTMBh6+rq2LBhA4MHDz7jvUePHsVisaDX67sipl8URWHPnj1k
      Z2cTGhpKSEiI77eeKjtZlnnzzTf54IMPGDt2LBaLBYDc3FyKioqorq7GYDBgMpnaDd/Q0NDt
      8nS73WRmZpKTk4PZbG713H2FYDyn3W7nyJEjlJeXKxYUkAAAIABJREFU43Q6CQsLQ6M5u+3u
      lnXZryT19fXceeedHD58mCNHjrB06VIqKyspLCykoKCg20J8++233Qr/+eef87///Y/t27fz
      t7/9jccee4xg+Ld/9913qays7PT9brebe+65h08//ZSKigqWL1/O8uXLuy0HQGZmJg6Ho811
      r9fLf/7zH26//XYAHnjgAdasWYPT6eT5559nw4YNALz55pt89tlneDwelixZQm1tLdXV1Tz5
      5JOUlZXx1FNPAU2G/tlnn+20AgFYtmwZ06ZNY+nSpb5rsiyza9cu39/LL7/M+vXrsdlsZGZm
      dicr/JKXl0dRUVGXwjqdzk7LtWvXLhoaGrqUTkfcd9997NixA7vdzoMPPkhWVhbQs2W3bt06
      XC4Xjz32GJGRkb7rL7zwAtu3b2fTpk089NBDrFixot3w3S3PoqIibrnlFrKysigqKuK5555j
      //79XY7vdAJ9h5vZvXs3W7du9X0PRr09fvw4r7zyCjt37mTFihXcfvvt1NbWdivOQKirq+PN
      N99sda1lXdb5C5iVlcWMGTO46aabALjpppt8ClaWZbZt20ZVVRUzZ84kIiICIQQHDx7k5MmT
      9OvXj+HDhwOQn59PZGQkO3bsQJIk5syZg07XOtmCggLCw8OJiIhoN46SkhIkSSIhIaFVuEsv
      vZTJkycD8Pjjj3PixAkGDRrkV47k5GRKSkpwOBxkZGSQl5dHZmYmI0aMYMiQIRQWFrJnzx6i
      o6OJiYlh2LBhWCwW9u7dS35+PuPGjaN///6tZFixYgUTJkzgF7/4he9acz6dnmZ6erpf2fR6
      PXv27GHAgAGMGjXKF5fdbmfv3r1oNBpmz56NTqdj586djB8/3tcqvOuuuxgwYAAAY8aM4Z13
      3mHmzJmsXr2a//73v2g0GoQQfPbZZyQmJnLllVdy2WWXsXPnThRF4Z133mHRokXtKhFZltm4
      cSMul4tp06ZhtVo5duwYx44dY968eRw7doyRI0cCYDQaWbRoka/Mtm/fzs9+9jNkWWbKlClA
      U8/B5XKxb98+zGYz06dP97Vkq6ur2bdvHzExMYwYMQJJkvzm/ZEjR8jPz6ewsNCXj16vl/Xr
      1yOEYNasWZjNZoQQZGVlUVlZydChQ+nXr1+r51MUhS1bttDY2Mi0adMIDQ3F7XZTVlZGQkIC
      e/bsYdy4cUyfPt2nLE+cOEFoaCi7du0iMTGRCy64wJf+nj17aGhoIDk5mfT0dLRaLXl5eRw9
      epTExERGjhyJJEm+snU6ndx1110ApKamsmHDBkaOHNljZVdaWkpmZibJyckcPHiQkSNHYjQa
      fWFuueUWdDodsiyzaNEirrvuOgoKClrV4/79+/vK01+57d69m+LiYiZPnkx8fHwruf7yl7/w
      0EMP+erN9ddf73tn2ivD6upqX5m31DlAm3Tae4crKirO+B7W1tayZ88e3G43RqORfv36ERMT
      06re+pOhrq6OzMxM9Ho9ycnJvnexmbFjx3LrrbcC8Nlnn7F69WquueaaNnVMp9O1KS+3201p
      aSlFRUXU1dUxbdo0wsPDAaitrWXTpk3ExsYydepUJElqpXPq6+spLy9nz549jBo1CqvVyqBB
      g1rVZb89gMGDB7N69Wq+/fZbXze+uevy9ttvk5eXh8fj4emnnwbgu+++Y9OmTb7fv/jiC9/n
      xx57DLfbzf79+9u0Ko4dO8Zzzz2H2Wz2G8fu3bvZuXOnP1EBMBgMCCE6lGPFihU888wzVFZW
      cuDAAV5++WXi4+N588032bp1K5WVldTW1pKfn8+JEydwu92sXLmSTz75hPDwcJ5//nn27t3b
      Kt2tW7dyzTXXtLrW/IKfnmZHsr366qsYjUbefvttPv30U19cL774Im63m6ysLN5//30AtmzZ
      wpw5c3z3NFc4l8vF66+/ztSpUykpKSE9Pd1XZhMmTPB1/err6wHweDxUVFRQV1dHQkICJ06c
      aJOvf/jDHygoKECSJO69915sNhslJSU0NDSQk5NDbm5umzBCCJ599lnuv/9+dDod5eXlvPfe
      ewDs2LGD3/3ud77hoieffBKAnJwc7r//furq6li/fj0VFRV+8/6NN95g+fLlCCEoLCxsJWtt
      bS1er5cHH3wQIQTLly9nzZo1yLLMv/71LxRFaSXrtm3bKC8vx2azsWTJErxeL7W1tSxbtoyl
      S5eyc+dOX9jmVtOjjz7KsmXLMJlM/Pvf/+bQoUN4vV7uuece9u/fj9vt5rHHHsPlcnHo0CGe
      e+45ADZu3MihQ4d8aVssFsLCwvj888/Zv38/7777LnPmzOnRsqutraWyspKSkhJfHW8PjUbj
      M8yn1+OW5dleuS1fvpwNGzYQGRnJo48+SlVVlS9eWZaprq72Kf9mmt+Z9spwx44d3HXXXeTl
      5eH1en11pr102nuHO/MeNjQ0UFpaSllZGSdOnMBms7Wpt+3JUFJSwq9//WuqqqooLy/39cz8
      0ayn2qtj/spr8eLF5Ofn09jYyN13343b7cZut3P//fcTFhbGgQMH+Oc//9mmrJqHyevq6jhx
      4gSlpaUAreqy3x5AYmIizz33HO+99x7/+Mc/WLBgAddeey0AN998M/PnzweaKjU0WbmhQ4dy
      8uRJQkNDWbduHVdccQUAjz32GDExMYwePbqVASgvL+eFF17g2WefxWg0+o3jqquualfGzZs3
      U1BQQG5uLrW1tQwaNAiNRuNXjpycHP7+97+j0Wh4/PHHefDBB32tsj/96U/8+c9/Jj09nSuu
      uILk5GQA1qxZw2uvvYZWq2XUqFG88MILjBs3zieD0+n0zT/8/ve/p7S0lBEjRnDPPfe0SRPw
      K9vSpUuJiYlh1qxZ/Pa3v+VHP/pRq7wbOXIkH374IQAnT55s08rIycnhqaeeYsGCBcydO5dj
      x461mhcJDQ3F6XQyceJEPvroI3bs2MGkSZN45513mDJlCi+99BKRkZGMGjXKl98lJSUIIbjl
      lluAppd09erVXHfddXz00UcsWLCgTW8O4MMPP2TUqFGkp6e3W2433HCDr/7ceeeduFwu3n33
      XR566KFW4/Ht5X16ejo7d+5k2bJlSJLkGyIrLi7GYDBw3XXXAXDo0CFOnDhBZWUl6enpzJs3
      j0svvbSNLNOnT/fV69LSUvbv309ycjLffvsty5YtIyMjo02Y+Ph4fv/73wP4FEd1dTVjx47l
      tttuA75/L2pqakhISGDatGlccsklreKRJInp06ezdu1aEhMTURSF/v37U1VV1aNlN3bsWNLT
      032955Z89NFHvp7MnDlzfIq5ZT1uaXTbK7eNGzfyz3/+E0mS8Hq9rF27loULFwL4xsEBysrK
      ePbZZykuLubuu+8mLS2t3TKE1jqneYjTXzqnv8Onyw/tv4fTpk3D4XD43r2Wz+lPhpUrV7J0
      6VLGjx8PwPr169vk6eHDh/nggw+orKxkx44d/OUvf8Hr9baqY/7Ka86cOcyYMYPrr78eaOqJ
      ZGZmUlFRwdVXX83cuXOZO3cuixcvbvdZR48eTX5+vi9PW1JcXOzfAEBTl/TBBx/E6XTy0EMP
      MWTIkDb3NFeQbdu28fbbbzN58mRkWUaW5Y6ipqysjCVLlvDjH//Y1x0JNA6r1UpCQgJjxowh
      PT0dSZI6jGPx4sW+ClBVVcVrr73mk9/fRI/BYPC1hGJiYrDb7a1+Dw8Pp7y8nPj4eJ544gmO
      HTvma9mfnmZnns9kMp1xkkgI0eqeffv28eKLL/LEE0+Qmprqk6tly6uqqorw8HD0ej3PP/88
      siyzfft2LBYL27dv59577yUhIYEHH3zQp0QqKytJSUnxxZGSksLmzZs7lO3kyZOsWbOGV199
      tcP7momKisLhcFBeXt5meK29vK+qqiItLc1Xbi2f7/DhwzSvaaivr8ftdrNo0SLeffdd7rnn
      HpKSknjwwQf9TuS2LN+LLrqoXeXvj6qqqjbyA0ydOpWKigoee+wxoGm+JjExEWga+tu8eTMv
      v/wy0DQ59+KLL3L33XeflbIDiI2NxWAwMGfOHJ+c0Loet6S9cisqKuKPf/wj0NQrnTRpku83
      s9lMTU0NQgji4+N56aWXfL05f2V4Os1l31E6pxPoe3gmmmXwV+4tsVgsxMXFkZ6e7huuKy8v
      b1XHOlte0dHRvvdg9+7d7N69GwC9Xo/X623zrB1RVVXl3wCUlpYSFRXlWw2Qnp5OXV2d38i+
      +OILnnzySaKjoyksLOSNN97oMPH4+Hj+/Oc/88ADDzBgwACmTJniN47mAmpWBs2MGjWqTSum
      IzlaKo3U1FTmz5/P6NGjAXxda71e32riVVEU6uvrCQsL4/Dhw61eCoCLL76Y119/nUceeaTd
      TG+ZZmfy6PDhw0RHR3eQc5CQkEBBQQEZGRkIIXjppZd44YUXWq2EiYuLo6ioCLvdTkhICBs2
      bGDs2LG+310uFx999BHPPfccr7zyCi6XC6/X2+oZ+vXrx8GDBxFCIEkSWVlZDBw40K9ciqLw
      zDPP8MADD7TbMzgdu91OcXExVquV9PR0du/ezdSpU4EmI9de3sfFxZGTk+OTqXlIJzk5mfj4
      eP7whz8gSRIejwdZlhFC+CbLX3nlFQ4cONCqB9eMEILt27dz4YUXArQxMGdiyJAh/N///R9z
      5871Dc9AU4v36quv5uqrr2br1q188cUXvl6Cx+Npld9arRaPx3NWyq6ZGTNmtFt2/vKjvXJL
      SUnh/vvvJyQkBCFEq8lzjUZDRkYGq1at8vV+m/FXhvn5+e2m7S+d09/h0+X39x7q9XrfWH9n
      GTp0KKtWreLGG2+ktLS0XYOVmprKrFmz2lxvKVNnyksIwdatW1myZAmSJLXqMdTX1/vKrWW8
      7eVFM8nJyf4NQFlZGQ8//DCxsbF4vV5CQ0OZOHEiX3/9dbv3T5kyhccff5ykpCSqq6vbXdZ1
      eiUyGo08++yz3HfffVgsFr9xvPnmmwghfC9Oc1ztVcrOyAFw44038uijj5KamorNZmPYsGHc
      dtttzJo1iz/96U8MGjSIW2+9lVtvvZWlS5cybNgwDh065Bv7a+byyy/n6NGj3HHHHSQnJ3Py
      5EmuvvrqgPPomWeewWq1UlhYyBNPPNFh3k2bNo1vvvmGjIwM6urqyM/PbzX2OHr0aBYtWsQv
      f/lL7r77bgYOHEhZWRkvvfSS755ly5Zxww03oNFouPLKK3nhhRcwGo385Cc/8d1jtVqZMmUK
      99xzD/Hx8VRWVvL888+3kaeZzZs3c+TIkVat/+nTp7dpmf33v/8lMzOTY8eO+bquN954Iw8/
      /DCrV6+msrKSRx99tN28N5vNTJ06lbvuuou4uDiOHDnCbbfdRlRUFOPHj+fOO+8kMTGRsrIy
      HnnkEVatWsWxY8eIj4/n6NGjvhemmaysLJ5++mkKCgq48MILSUhIoLy8vN3ya4/mfBgyZAgT
      J05k6dKlhIWF+RTBnj17WL58OYMGDeLw4cMsWbLEF3bw4MEkJiZy9913Ex8fz4kTJ3jkkUeQ
      JKnHy6698gvU6EH75XbLLbfw61//mkGDBlFaWsrChQuZOXOmL8zSpUt57LHHWLduHWazmeLi
      Yn73u9/5LUN/cvpL5/R3+HT8vYejR4/mnnvuITc3l5kzZ/p60+3RLMO1117LX//6V5YsWUJC
      QkKbPPSX16fjr7yqq6vZunUrf/rTnygsLGTatGn069ePpKQkHn74YR566CG0Wi1ut9s319SS
      5rr4xBNPkJ6e7htKglOjHqIDFEURtbW1wm63d3Sbj+rqalFRUdGpe/tCHIqiiOrqauF2u1td
      t9vtorKy0vfd5XKJ3NzcNve1xOFwiLKyMuHxeAKW7cknnxSFhYWiqqpKKIpyRrldLpe49dZb
      hcvlOuO9dXV1Ij8/v028pz+L0+kUDQ0NfuMoKCjolGxnYtWqVeKLL74Q5eXlQpblNr/X1NS0
      ks1f3tfW1rYqo5b319TUtJK1oaFBFBUVCa/X2+peRVGELMuiqqqqU3nZEW632xeH1+sVN998
      s+/5XC6XKCoqEk6ns92wjY2NoqysrE3+9rWy64jTy02WZVFZWdluGbeUrbKyso1s7ZWhP/yl
      c/o7fDr+dITb7RZlZWUdyn16Os1yVlRUiKVLl3YqnD9OL6+ysjLx1FNPicrKynbraENDg9+y
      b0ZRFFFeXt5ueEmIICyeV+kWTz31FIsXLw5oM9Pq1aspKipqt4XTl/nyyy/RaDS+ybQfCs0r
      QAwGA3a7nSuuuIIrr7zybIul0sNs376d//73vxiNRhobG/n1r3/tW5YcDMrLy3njjTd4+OGH
      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
      7Gx2/wbZxZ8jH2+K5gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Purvi: Data Analysis Using Cluster' width='384'>
      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
      p5AKAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Purvi: K Means clustering using Tabpy' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nNy9eZRlx1kn+Iu4y9tfblVZa1Zl1qrapCotliUZWZYt27IlG9vYpkWDMTTg
      HjMDzYE+MDRjehqfgebQLMceDme6T4ON3YBpwDIGL1iLZUsqqVTaat+XrMyqrFwq377cGzF/
      xI374saL+5aszLJnvnOyKvO9e2OPb/l9X3xBpqamuGVZ8DwPAEAICX904pyDAyDy9+An/D74
      lgTlUErDMhljkWdVks+p9TDGIp+Z2qN+Zyqj03uEkPAZtV3q553aJMaCgxIKDtF3SilAANdy
      wuc931PaQmFbVuzYmvoRqS94xrIsMMbCH0mU0vB99Xm1PsYZRHN4MFOtfrOgT+JTEvwu/uII
      +s8BGpSnlh23ZnSSz+nzCwC2bcOyLFRrtbCO5Saf+RDd56DUQjaTQaVSWfZ6GGPwGQOhBDa1
      lr38Xtvgum7bOumVfOaDUgtxM+H7PgCIXa/OFxE8gjEO2mFNm0jfZ7Jc+XlkXxP5udiBtu0g
      n8vBsjqPd6PRQL1e77lNOr3y6mHcdttteOnFg6jVaqCUYss9+0FtC4WFG1izYT04Z5iduY7v
      f/sp7Ny3Bztv34crFy5izfp1sB0Hl86eA2McGcfFgR27cPjwYdx5551LbtNSiSwuLnIAqFar
      4JwjkUig2WxGJlRlZuqCkBPFGAPjYhJACCxCQ2ZmWVb4vj6x8hmVeUjGJQWSfFY+p5K6GNQy
      ZD2dmJL6rC4s4gRAuOA5DxipEAAgBJxwWAFzT9iu6IPvodFsAlLQAHAsO1ygqhCVfZQ/nfoq
      BYBkpL7vh3/L8Vb7oNbX9L0IA6aEBvWL9qlECQXjwZzxoA1KW9U2mtocR6oAU8c9k8mg3mig
      Uq3Aseyey+uVZP/l79l0BrZto1qtLn89nicEKCFwbWdZy++1DYwx5PN5cM5RLpfb1kWcwhHu
      QebDtmyjMJbrDggEACUtBYXSNuWiV9L5hLpWfN9v2/M+Z2C+D0IpEm4CI8PDXQXAsZOnUCiW
      MDG2AY7T/9z4vh8qfY5l4+KlS5hPU2QH8uHeiii8RP4XHQff84DpeezZvrPvNpiIcaF02NSs
      ZJrIppTC8wRTcF0XmUwGpVJJbJBsFuVyGc1mUzACQsA4AwFgBZVI5i/qE5X6jIFSAsLF93Ea
      gMrs1Ab7vh/RxOMEAGDW9NX6TJqPKjDkj4np69oqIURokEqd0gqwqAXGGSyqMHemlRkIBcaF
      ZsQ4B+cMBOZ2yA2l908VRABCoW0SZJGxMFg8LJgr28BwZR84YwiXryKo1Of1d+UGMM2bFO4s
      sCpoYBkBQLVW7WsB90Oy3za1wAGkUimUy+XYZ/W106uQk9YhAFikd+13uYkQgsViAZRSsECb
      h2Gdm0isa51ltZfPOG8xuED544yD0N4sQkkmRQwwK2Nq/eAACdZjOp3qWifnHP/40lG8PtvA
      OvcE7p1Yjf07JjA8NNSXAsM5hx+sD8/3QK1UtF3RlhrHcWH6Gm5fs6mnOjuRVEhle7hm3Xci
      GxAbUgxgWjA530cqlQo1WtkhSmlEOyBcSB29v4SICVUbId/VNX/TptKZoc5oVJijF9PWpPmY
      ytUXm/4Z46rWSsED7Vj8LxY+gw8fJFggfmTDtawOHxytzUPAQdEaWyk0TRaTaZF6nod0Oh3R
      ZE3PUUJg2U5EQ6FWi5mr4yT/pyDggZWAGKtNHWf191gLTFqHlMC2LXAOWJSi0WgE37e/shwU
      aqeEwLFtUEpDYbrsdYkKw3HtV6B5vgdKaKyGHtbTxcIlnIP7DI7tIJ1Oo1AodG87IbBIZy1a
      Wpu+1wQJ1jtVhN1S+myiTgIAyj52HAcJN9G1zlK5jHNzZTA7iysM+LszRXzj5EHsHE7gvh0b
      sWPLRN9WQZP5oFar773Aob7nozR5Dblte/qqy0ReoJQKgdg78wcAW9Vya7UaXNdFIpGA53mo
      1WrwAlPWth0AHM2m12IUHbUJEmpBgJhIx3FCQQDED5QuGOI0TfmcSQjoWq76tyrI5LMmOEmF
      aFrPEAGX8BaEQtCyEjiH0MbR0rjb24ZwbGRvfOaDgcOCBQvtm1xOsL6xZL21Wg2JRCIUApJx
      MM7R9JoRWK4bdKaOh87sOwki+Z5lWbFWXzKZRNP3hFXpC+vCsR0wn6HZbK4oXq4zNtVSCn0c
      ENatCUbslaERQgR8BqEEqIyxZysCwZrgPLSOwu+Cce6Grcv+MsbgeR48z4PjOCGUoiobse3Q
      1oJaNoCwbaoVuxQyWb8dlQgg9DUCQCad6WlsL16+giJXGDyhqNgZvLrI8drBy1j90mncO7EK
      d922FSPDwx2tXCvYS4VqBTlnJLI3uykXV86ex8SGsWURkjYNYHbOAdpfebbntRh6o9FAIpEI
      f5eOEmkJ6NBDJyKkHZ6RC06aUJ20F9PEq5/p1oRJCEjGb9LsJZmsCNXKUDdL8IYi9xTmACEM
      fMZC4dBpbEx9BufwPQ+MMmFKE8GMpCnuMwbGGWzLCrF72Uff92FZFlSHvmyv53vwADiWExkz
      fSz08dGtAf27TvMTO7eUolqqCudgABdIzV9nAJ3KuVmS82rbNhrNJjzfD5kYgK44cjdinIUK
      gLCSo5Z0t345lh37Xb+MVip4jWYTyUQi4vTutJd7sbCtFRDYunLWqa8WFT64hOt2FYiccxw9
      PwlmJ9q/JATccjADB09eqOGfTx3EjkEH923fiNu2jiOREO/o+6ZUKqGZdMIx7mVumO/jyslz
      ePjDH+n4XK8U7uklvGvLxSA7ViwW2zQM3/cjHbcIFfBGB2o5QKKaoySpeXSyAOIYt7owdY29
      V9KFhipQTOVxxbSKMLkA7rLp8jktme+DExaOnXQmyh8ZXSKZv+yHFOCq5kFAAsHko+k1Q63J
      xOBUZ7FczPpYm6yDsK4e+29y8Mp6GBeRRhxic/fjXO6XpDJCAsvjZjRYlQgRPhXf9+FzBp8z
      EE6EIDdYcf3QUt4lRFjjIogjFWqn3fqrWr69MNfwd0S1c1OZxvdioNqO/eJAwnVh2/ECUxJj
      DEevzAFwuz7bcLM4UuY4engaw4fP4a6xIdy/bydGhgYjCMXl6Snk14yE70lFrBMvunTqHLZu
      nuipzStNVG48XdNVN39kIjhvRYZATlp7wYLJ2OGiVzXPhtcMnBZ+7EDJCCL1RxUAMvJFtl0y
      tX41N5WZmSKSIv+LnslhCE19O9DWJENRwzE7UScLSNbLGRc+A22jyPBSNRw0zmS2KBXOMt6K
      svA8r6N2Z1oXnUJ5eyHHccC19aQKGA4xr03fg+d7aPqd23iz5Ps+bNuObOjlIrl+bSrWA0cr
      csxklfZCnPMQ713Ku41GA9VaNWTo3frcrxUWri3fM34nAiDEmpKQlL5+5RqOgx7b2ggeaufd
      6MbiIi4t1vqaA04tzNEsvjVZx5unz8FjPnzW6sN8vQLHjQqUTmG3vufhymwBdc4xNzd3U/up
      X9LHGgBsEw4uB181aUKGoLysMkFmgD1kDLA+mRQktCB8xuDaTs+LTJ08yfi7LeZu1oGu+auf
      R9+XP1FHtOp19wPG3CmeH5DaNgHnfjBW4gyB+LrlY2HcBxgFIdH2+4wJB62mMdVqtbZxoITC
      CTTSbpiv2s5OZzH6ZZiO4yCZTKJUKhnrkOuIEArmizBk3/dhkZWzAjzPg+t21waXSmq7PSbW
      ic9aEW799Emud8/3wKnwm/Tzvm3ZyOfSqNVqoZbajfT57uV5Ex/gnMMPhJ+MilL5TuivUsLK
      VbhMlq0GK6jkOr3N4cmz59Fwsz09q5PLGti2cY3ggVzMYaFQwOXpaSRHh5HJ5yL9jaNLp88j
      NTaBOdvBP1+4guGz57FzdBUmNm3q67zEUknnFxEbRIVlWDBplFDBiBhD0/fQinzhyqYlsKgd
      RLcA4Dz8XFakVi6eb8X31puNUAj0opGYNk8vjC0OblKtE32ApGUhISOftPwgPhP9VOOkCUgL
      uhGBM7AsWxyeCwSFjCayLAtWEJLoMx9gqmNbhOYGAypgHdLy71skGlUlGVmbxRbT/37gDn2M
      +oVKZGCBDC/WKbQweBAWq5TtcwbrJiCTTsQ51/wly08q3OYF1pTPemPAKqlMNC64oBNRSpFK
      pdBoNHrWOrtp36ZnOedt5wYiyh8h4Iby5FruBDvp0CwHD6O5uhHnHEcuXQMP+Fm/NGI1sWbN
      GjDmAyB49dVX8eyz38VlHzh/vYBN60axbs0g1k1sjh2rZqOBq4t1pPIuCCFwhoZR4Bwvlmt4
      /ttPYTSRxq6tYxjbuHHFYE9JcozbQCiJMbcwfrHg1BOtwYMhk5eYn4x8IIRG8NtOsfiUWCBE
      xIRT3u6gNVkoktSJV81HE+nmpP6/zvx1D77K+DzfE6ccg8MvDDIEC0EsLodt2bAtCxxBHL3c
      IGidD/B9P3TmhvUQEWVk6ofXbAZjDvBg/CmlcAMHWL1e7xhW280SUsdSHR89IqvfxZlMJo3h
      h3K+GGchtMEMMORKkW6RrBRJISBPBywF1pLjblt23xaRZVkh8+91/lhggfarlYqghfZ3hIUb
      Pe2uMvtOULDa3hAqglCaUj1YcBcuXEChUMALb54EG9wE2ov1A7HHpLDYsjof4XXPPvMMJnbs
      RGZoFN/+4p9jzS/9Ci5UfZx97jAGEgQTO7bCcmwAHKlMBpxznD95Fjw/hGa9Dsd1BQTpOIBt
      4+S5GTxbcJF44Sx+65Pvxtq1a7q2sV8y8b02AWBZVnhaVGLG4eQoWLgMK5SbVmi6FpwgzE5d
      aHGOHUpp6PRzLNu4CHTcWdVE9bJDOIa0QyP6wleZjK556O2IaDCUgviCSctDTLI8AilIFKw3
      8BxQzUcvoZ7AWwbCAQ4WQDs08hwJhLCwIhgYF7g+oSTc3MVi0TjecTiu+mycZaT3fakUFw5H
      KQ1DHeX4SehLto2vkCYkY71X0segkmTenu+HZxH6fd+x7J4hPJWy2Szq9TpqtVpPz0srpd+Q
      XEJIbAy6sArM35n4g2nPys/lGuGcw3XcrmP52c9+Fjt27MCbrx9Fpfx93PH4vzY1whyeJyrF
      yeslVGtVBW4iaBIKEIpkJgNqWfiX//El+M0G1m/ZhlfeOIkzr74C0qzj0Y/9KDZv3Yrf/83/
      E1vvvgdT587iJ/7DZ/BP//XP8N5P/hs8+Sd/hKHxB0BdF3WSwPnJ6RUTAPpY2bpUkL9LKSsW
      AwNTsEsVi/OD069qjps46EctXxIlNHKIQiXdYaEvDr1cFjAzn/kiPE3xYag4oxqbbbIiOsEU
      LVNWWDssgMkIWtoB44APIdgCwyAUkpLRid81LDgcXwI/OENmWbSVb4i3mD8NnnVdF41GoyMj
      M82x7JPpcxW2UOdBvqNCQb1QnAAQPoDWWEsn6a2glYwuiiNCgoNv+gnxPt7vFzpKJBJ9M/+m
      7/V1mKhf6qRgqX93EnSM856DPoaGhrDrwD3YzNfjjX/8Epr1KqbefBmluWsY3bYHvtfE1eOv
      glALu971ISxOX8b08cPwmw1kV63Fmp13YPLSaXx/Yx5XzhzHE088Ac4Znn76aRQYkM5mYTsu
      rp4/hw/821/Ems3j+Ps/+UN86N//Jli9jn/4w/+MiW17kRiawIH7Hwozph14x7vw337917Bp
      652gTjroPMWFqTnct6SR7Z8oEXiDyOVBxKkyIOrQkbgsB9qwfdd2QuavO3x1060tRwZa4Zg6
      k5AOQvX/ECtWymj5LBg85rXC22iUSUXKCzQc3dFp6oPaHhXOEvBVUIc8BNN6OtBiRYRU6KyV
      H0tBQBBaLC0SEsOyLIFvktahNXHknQCktUmkANBJOg1lFI/eN/1ZVfCp82cah36YtBq9pdcp
      TosjTC7IGGvDZ1eKDXVjMCtFBOSWhv+5AdTQC+npBOLmeTmFdCfmHyegxR5mcIODpd0E+dTU
      FH7/v/whnv/vf4C1O+8A8zycef5bWL/nbgxv2oapo6/g9sd/EpvvfhAXXn4W1cICVm/bgzs+
      +AmUZq8iMzKKhauT+P0//jz27t0b1vng+x/Dj/3KryGVzWL2yiRWbxzDms3joo0Q+9vJZMCo
      hesFBm65OHFkGpW5OZSuTmHm1GkUFioo+3bE+rh47caKnVAHooqWLTTpINdLwDT9cGMK0CEA
      IUAQDW/UN7cOJ7TBMzwaz64zc/1ZQJjqpjw3vsIsOAJnK7EiHEM9jafj7LpvoVu7pFncBi1p
      Sa84RJZJzli4CBAIC4CDgoCx+HFCECkiyhO+lECUAFxkzJSas0VauZZMAlTto9xUpr7Kd3vV
      ivvRnGU2Sp3UtoEHVoKBsawUk75VlsYPmirVqvBFxVh7EeIyWyoPlRoTmc7g9EPqOYRu1kAn
      cnqM/hkZGUHyjndi9J1pvPbVv8DI+A6s33UnBjeMw2/U4SRToJaF7MgaXH7tBaQGhuCmMmLf
      2g7AgVXjO3DqO38PD/K8CMU//s1fw8kPol6tYHjtusha3Xn3W/DVz/0JqGVhdM16lHgKBARN
      ksTMtQqe/86bOP3K93HnYz+HI8/8LfKjm5BIi0iiK/MVVKpV5LJLi1jqRIwzND0vTFBoA4LR
      SLNEamRSOwMhgTNTxDUnE0mUy+XYjek4IppHTbcqmY5p09m2jWazGT4HtHD/ZDKJVCqFUqkU
      lhdZfEF8NQ/wO6YkVpNZKNrqDfw68j35vWrVRJiTHDjGQgevZUXN+HYhAvDAvyHgStY6BCR9
      FPK0k0D1AbSPjyxXRk7Ylg1ICCnI4eN5HgYGBlCtVsM0EGr4rrqhTJqVLgjjSA3HM2KJth2m
      EFHn3hRlo9el4v4qEUrDpIPLTfV6Ha7rIp1Or0g66B8GkoqM5bqh1WsFY2qicJx5vOWmlivX
      Qadn4+pRlZG4IJE4YlwoPZLXdKPp6WnMVFOo1+pgQUZjyLY7LrxGHddOvYG5i6exeusuNKsi
      QaAsuVpYwLVTb2D/h38G//y1r+Lu/fvw6V/8NP7m1SPIrFkH5nmoL97Ag+99FHOnjiORzWPn
      XXdj2/47wTnH5KtHcG6KYXxoLQBg+32PAQD2vfNjAID9jzwRaW+d27gydRW37djWtW8SBjOh
      ADpxztEI0sJIuNoWE0iFVgohBCRsoOaPoZQimUy2adT6BEiNr5MzVX3H8zxkAi95o9Fo1W1Z
      YXI6me0SUGKFwUGUiCPOOSxKw3MKjDOAGeAiyDDLFh5vsgJM7baD1LQ6hssDJy24jJoIEmNx
      1Z8imXkrDC10ggdlRBzbgXWhjr+JQXueh2KxiEwmA8uyIsJZxUe7aWu9fmd6hlKKRJBiwLIs
      ZDIZeJ6HRqMBSmk4dzqFwkcUHDriQsZCrb6ZSz9UqVSQy+VAKb0l0UCSTMn+lpOktWpZFlzX
      Ra1eiyhOce94ClxodTjHou5tk9XYKSWCyjfiFI5O8y33WtJ1e3am3/fI+/H1o1eQGExgbP99
      INTC5rsfFHVRin2P/jiunX4Ta3fegaGxrWiUiyCBhrz1/kdAKMWe934Moy7wkffsB2MM167P
      ojJ7Hc1qFZbjws3nkV81AUIpGqUiStPTYM0GCKVYmC2CkN61eUYcXJy63lUAEEKQyWRQLBZ7
      K1dCP5SIVN/UCpzAQTCKXJScRWN5CWnhllLLVLVnPUzQFKEDxC+WcrmMXC6HXC6HRqOBWq2G
      VCoVlieTyLVrk1FnsBRinIvQS+bHhJ/yIMEWj2rApkMnej9Cht62kFVtRqTDlQfkCEEYxcOI
      GGxxfoBCzeAhrQSfMUj0Tc3IahJMcgyLxSKSySTS6XTPDj+9nE4CoBPJk5ic8/CEp0wtLg+f
      mag1hvGJxlaK+QMCdiqVSshms0gmk32P2w8jhU5cQpDN5lCpVtBoNEIYyBSiKUlYB/E5onSK
      8yd5jIEStFlvus9N/axX6McPnk0lUz29wxjDDZLC6q27I5+nB1vpG+xEEhv23hP+7WbzoZKW
      HlotPiTAeM7Dnj17MD0zg5fnCxi9/YCxTjebg5sVcE5ldhbF6kW0x1t2pheOTSKdOozt4xuw
      etUqo7PbcZzwnodeiIDAsZwA4hNwnx3CDAEux7k5+6Bt25ELGdoKDyZDmtZxWrT+uyy/VCoh
      n88jkUiEh5osQ2SRXqaESCSDhczMSdqhEEmMc9jByds4MmkqqubWOrQUROkQCUW1Qj5Z8L2w
      CEgI3+gnpHVrKm6c9LHUv2s0Gkin0/Gd0vonN6PrukilUmH2V506nRxNpVIRP4LaljizVG+/
      yNBJ4DEvhO5kvPv/H2kltX9ADGE+m0WtVhVWGOl+eK9XBiyf1VPFA63spUIZ6k946zBs3DOM
      +XBsJ1QKu9HCwgImSx5g9XHim8vwvVabOPOwa8MIJqev4uX5IsjAUKTNsfVPTsGzMn0HM0wW
      Cf7i6TNIkBMYzVnYtWk1dk2sx5bxMWQyGQDoGfqRRCkFURQEzrkQAHIgJeQiMVGVSeiORtlx
      x3GQzWbRbDbDcMRqtWpk+PJvyfjU8mQkkH40X77nOA5k5lJCoqmmZfhnGEeuvasvVH2htTl7
      Na1VWgSe74H7si6BoomoHBKxJghRj8Qrh2k4wmsX1frj2mXaEJ0WXK9MRXVyW5YVwjfyMiD1
      NLEq/NS6ZWqHarW6pIgFOSdh+XK8iDDzLevWhGlKRrKSURe3mtKJJBzbQa1a65hVdKmk+4Mi
      FECxcVd66tCP5D+9OKlZEKzSq/YPAKcvTqLGbeSrV1GyB8DsZCTiRqewbRofSfh1gHt46UYZ
      JD9g9FmZ6NrlORDSm1LWRoSiDheXi8DlI3P49pHrSNOXMT6aw96JNdi7cwtGV6/qK6RZvRSK
      EiJuBKNUXAaTSqVQqVTaJkne1dpsNtsmK5lMhs4YXRqpjZL1SJKWh4rRx+GUan3hd9oESH+F
      3Mg641eltQzL1J9R4Z02c5XI9gmmTyDCZkGERu9LwcQ4fLBImWr9oi/iKjuwQIAE5cvnl6r5
      qonxejELpaNdCnzJ5NXDRirEJ+fKtm2k0+kwc+xSKLQYm2LNiDTXdvSqzVtA6pWlt4J6nZub
      KT+VSsX6XZaj/HioUJxS7+Rklv1XFcteSPg1GKzg5HsvDI9zjiPnr2BDsoJHPvQjmLkwiTeO
      XsFULQHPSbcEQah8aG0hMjCGI8tLuJSYAE1nemb+1YU5FCoAliNjNiHgsFDmKRy95uHYzBT+
      5wsXsCFVxkcfewg7t2wNHus8LsJvIuByi9IWBMQYQ71eR71ejyxS13WRz+cBtK5qBMTGSSaT
      ocauLziTJq6T+kwmk2mLj5btkn6BiEAJnL9hDL5iXeiCRR0YXfuIQEOGkNTwfZBwYQstXjAs
      hPi+jPBp1WdJuIixEA8llIRhqyI5mHS+d4akTKT3RVovamSVsS/BeEnLTf1cht3qFpD6u4zM
      ullGJtsrww49eH1BEctJK8mUVZKCdCVJWtKMsUgI9UoTJaSnNAsmUp3Kxu8h9nQ2m2tTJuOo
      Xq/j6tVJ/MhDB2A7DtZvn8C6rZtx9cIk3jx6GZMlkQl252qxA0/McjRtRVvngNUsY32OY+OB
      A6CJpPiwx+Gcu3gFHk11f1DtpzZXpr1AKYWDBnZtzeC+tz+AKqU4e+kCNm8cCxXhTntIHL4N
      oH1Zqcpg1UYwJm4Kk0zBdd0w/YDUuOv1ephkStegVamvMyxJyWQSiUSiDWeWGq0MK1Q1druD
      ialr8kthKlITV0/AgiB0kMsrHS0qEH/P90Fp4IsI/AJyoVjKxdqyHX5wtzIhQU4lpd5O1E1b
      lYnrummAcv7UssrlMhzHaTtcpo5hOp1uExBLIanRiT+CsFxfOa+AvuXhkkhVGG4F3QrhVqvV
      wMGRTqfhed4tjXDqhXT4T92ncSSt0kSi+7WPsswrU1PYevsEMoMDIc8mlGLdlk1YM74R1y9N
      gROCNZvWAwAmLkzixVcu4DofACcEeX8RE9vWIb9unSy0r37OTc4A6D+Wv+Pa5z5G0w089NAe
      jG3bHO7hRW8Rp86ewfjYJgFrEhoiFZ3Gi0xPT3Mdqwfi48JldIfETdUQJPV59QSqyYEo8ed0
      Oh3GsupYlu/7KBQKqNVqoJSGuds7kWy3yqTUNnTSHvTwVRWa4ryVrZIH4Z3y4msChPi+hHT8
      QOuXoWqyDTzwAXi+LzA45S4B2b5OfYyLpJD9pJQik8mAEBJ74XkikYBt28bvfd9HNpttYxqW
      ZcFxHNi2Hbl7OI5MFoRubdWbDTS9ZkSjkn1IJZK3xAk8NDQEAFhcXOwoBHpx+PVCK+4A5jx0
      xuayOVBCepqvpdQDLE2g6WtYDUSJ4xUNr4l0KoVMOtNTaDBjDN/53ndBJ9aCqBFmndoFwGs0
      cOzQMVy+NIPN994DS9X6lZdJD+pJdWEe189ewtXJeZTqNpjV270FJuQCABK8gnsPrMOB+24P
      7yAgIDh39Dh8z0N+aBDc84GmhySxkLQcDORyGF09CtdpZVtW+bwNRLH3OKzeBDfIECT9e1NF
      klSNixAS+hdMz3LOI9q/OjjxOGQLw9Y1i7hUCGrbTI5uuSiFcxgB7CPCTFvMrSVxgVa+Htkv
      Pb2ExLilJqQ61nol+Y56aQshwonvui5yuRxKpVIY2SPTMvu+Hysc1MNl0rKT5DhOW4BA3Dyr
      PgNZrjqHco7a7pLogCGvBJXLZWQyGaTT6diQOs5F5ITpJrN+aKXxf0AoISzw0yQTiZ5jxPsl
      Pzjpbnc5qBdnXan7OM5Kl8/4vg8C9OX89X0f880aRgNrEuhuURIAjuvi9vvuwLY9RVw6dQFl
      mkZ67fowKig4Hdu1fgBIDQ1j8z0jGLvTR2l6GlfPTeLa1CJqNN/REa1bR5R72LLGwkPvuh+D
      q6P3FF+7NInhtaPIDw+Fz8sQcub7uF4u49zZ46CejyS1kaI2hgYGMbp6NVzXlakgWpMhTXyJ
      z4aFBtRsNuH7PqrVashYVM1Zarpx2ptan7wRSGZmNJFkyrpGKZlqXB26phXHqN4Q9aYAACAA
      SURBVCTpDE3/Ti0HEKGLwipgaB1nUmAhEs0ppLdVx9V7JVWYqJ/pVos8VJfJZMRl68o5jm6J
      46SzXw0PBcTBKd0qknMeJ8DU5yPWJYBsJosbizeifSPkpuL/W5Ya7+mgkIxcy2azyOfzqFQq
      7f6sJbWknW4F/i/SsIsDQrV6HU3Piz3UtVRirHXrF2OdL3QywT2S4lAG9XvGxJWaycAi7NUq
      vDw5ieSqQdGGnt6ItjkzkMeue25HebGAiyfPoOZmkVy9tj31S4f2h8qeZSG/cSPyGzfCff11
      zC42UJ5eRIOk2x3P6rucIe808Pa3bcX2fTuMfS8uLGDVRgFRRdpCRL2ZfB6ZwIcLCKh1plDC
      2XPHYXmBD0Bqy9Kxm0gkwsNFOrwgoQUT3t8LqUwjk8nEMn+TAFJz1nRbCLI/quO6G/NXF6TJ
      l2CyPmjgvFU1GZDuZxj6JT0raqQNirUj+wMIYd1sNmFZFmo1cRq012ySMiAAaEXKtENiLDyY
      46Bz3L46xoxz2I64JEcPv7Rp//nuVZL3ChDSOu3YrSzP81AoFGDbNlzXheu6EWFHgI5MVAo0
      KXRMdCu0f0m5bA62bWOhvIDlE1+CpDUUCv4eorVMsLL8TPKNbqknnB4Tv0k6c/kC8ls39PRs
      J8oM5LHrLbfjyHMvo1D3MDA2tuS12SgVUbDSsLZOIL++jOaF8yjPVeCRVJtFYLE69m3L44F3
      3I9UNhNbJulnrxCAcIJ0PofMgLjfIHIOQEaAmNI9mPwDcTivFBYmCS+ZgOu6kVweKlQjmX+1
      Wm2LUlHbFdtPZXGpTMmEs5uSvskxibSHtdJI6wxYbm7GORwqbvnSD3nFtVmfPD3RlnxXFwCy
      H/JvNTw3DmMFzKmZu20sNbRWNdf94KS1iQmYyuOco+mJe2HT6TQ8w6U7N5v6QTroOXhfeYRk
      tFmj0UAikUA+n0ehUGhZtSRecMo8O4QQWDAzxFt11kD6d4rFYnht6HKSDMwAgqifHsbXtG9N
      sLHpPZkipdebvyQt1CsY7fnpGCIE4EBxbh6HXp/F4HARA2NjbW1UKeyToT8L01fh54MTyKkM
      nF17MVhcROPiRZQXGvCtNMB9JJ06xten8c7HHui6ftv4StzjRPk/eIVSKiAg+dNoNEK4IJfL
      iWiCGHxOJx0C0Bm63mhV8OjfeZ4XJjfTBYtaRyeSz0utV4Ug9LI6af1hX9By4IlMnNG01z5n
      kQs0dOYd10Zd0ETqNFggKiOXTN9xnLZn9LGKM7dDSKtHy0AdO4fYwdj0Ni+c8yBUUERFlapl
      uI5IV8wg7rm9Ge0faPkPbiaKSN6s1i2cVlI3Id/tu+UiQsS5nGKxGNw2RyKQxc0S58IZK9cl
      7cNXo66buBBto9IAIOEm+rq7mTGG7aMbcWX+BrLDgz2/pzUYgLjE/blvHUaJpeDNVlErLCKZ
      H2jjbXrb9Z4wz8N8uQ6ktYN5uQG4e/bBuTGLwpFjoJkkkrftwVzpBhq1OhKpZGwTyzcKEXhH
      NMhQOWk5rblmEbYdE5QSfn5+vs3JJxmqSQPVtV0T01cXge4UVQdQnklQn5PPdGIQahpb9SCT
      ZMK6Vq6WKeslpD1qiXEWRO0El5YzBkZl/H4QZURoWx9k/er/bW3m0egSdWGpp6t1ks8lk8m2
      fprKUutThYQ+tv0Q7ZJOw2QJer4P13JQqpTh+z4STgK2ZYWHfJYDLgOWzvwlVatVJJPJngSA
      RWkQHhyv/d+KMFM5/2EY7xIMjk4KhOqsp5QGlyH1n/KhV9+crC8TZCjopd2+76PZbOL2PXuw
      8NIL8LJN2G68j9FISp+Pvvg6zs8IWNfjFKXJy0juHgi/19sQR6XrM6hlhmLr47khvPz8v2DN
      7n0ov34Iwxs34fLmPLbt3dlWhxyL4sICBkZXt5fXLWJJgazDcwCiHeJBNfJDDZ/sJrlNWq+J
      qcikZZ0mVX1fFwJt/ZWTr1xmQwMYhlIanlGIiw5StWCdWYoIBBLJjNrkrTxAhLQzLbX/nfqo
      Lxgd9pGO27iLvG3bhuM4EWGjWzltmgmJ3neg/t2Lpac+2+0Ivx5jz7mIUKjV6wABHLsVmibX
      Wa/MRMeTl0twqNRsNpHJZCL+ABMRQmJ9DbeK+UuqVCpIpVLI5/MolUp9nQiWhxZV5SBiobLo
      3pdCwerxqGvceoybO5+130RnIrkW5hfm8erxY5ivlnDfbftw/4G78c2Xvo/UxjVwEr2dHlYK
      xfVLUzj46nVwkgA4x/YNSWRTXYSJArGo7ZubXQCGx4yvSMqv24B9j38M9VIRr37lC3j95EXM
      z1/HqTeP4qH3vQeXz1/Aay++hLUbNuADP/FxvPbSISwWFnH1yjQefM+7QC0L6WwG68Y24sWn
      n8XDj72vNXfKvwARvgMAVMeXZYMZUy+Gb4cn1MUCoC3yRxcUapx/NpuF3QHTM1kQpoWitkO0
      t/UDRSOWh9dUZhdHusWja8iMsRD3lCF3nfogF64URvpP3KJULSX1kJwcS9d1kUwm2yAjddPq
      loX6o1pDqvXQDarQrRz1Jw5iUvtpWxZcx0HSScCmUedyv0y86Xlo+t6KMVipTeZyua7ProQA
      WgrJDKdLif1X14FJ2VN/JJznOm5f11TqeypOUZFnbnql+YUFfO/4m0huXouNu3fgyIUzIITg
      R/YdQH6ugsKJC7h+9iJKC4td1rjA/evVGp576ghqXMTuJ0gDb7l/N1KuUMrU/Ra2PUZJbZRL
      KKC7FTJ/8SwO/sWf4uk//E/Y/vZ3Y7LYxF/88efx1nc8iOzAAA5//0X8wq//KtK5LF598SUc
      f+0N3PXA/fi5X/1lvPj0d7Ft92346hf/Cv/9Dz+HXXfcLtoJmXtMmgUEhLQMBOr5fnjTlRwY
      xsVdv3FQjvxfZRoqowOiAkFnempkjolULUSty0Tq57ZlwbHs8IL5sD+MRQ6RdSqvE4Wx60GY
      JyGtvOm6gFTbJ5m2HJNuzF8tQ5arpsmQidjUsmzbDg+mxfVROlmlMOx23iOOVHhNfb+bEBDX
      XDoh1g8EJ6KXoMFL7VOP3lpuajQaQsO/hdc4Lge5rrvsY8IBEErg2DbyuRyymSwIIX07t3Ul
      xLQXGBOWt3Rqd1sfZy9ewPDY+nBdJdaM4NS5syCU4o69+3DfHQdw7/hOrCr7WLxwpcPYCMFz
      +LuvYWoxmHPOsXtLFqs3rEUy4YLHnWvg3Bh0dWNqCmzQANVoNLRpC+5+4t/ggV/4FZx+5pvg
      uSE8/P5HsW33LizOzWPT1i2glOK22/di8vxF1CtVjK5fB8u24bguUpkMNm/fivnrs1g7tlF2
      J6CWcJLBEYEQb4VyhRtJYkQQGxRozzSpToiuxakHu0yTa0o5LMtpNpthQrpwYGNI1awty4Jt
      2SGT1RmSzkRNgk3XaE0wTiiYAseKPCErPjPfixynietjE1pewV2+avpt1ZTXmZGcTJ8xeKw9
      /z7R2qVG2+jaWC/MdCkMW7eCwr7cxI1f8t2Vvkze87y+/SM/KFJP1/dDccqL+jclBAnbxdDg
      EJKJJJpesy/mr1vTcfyBB5Y1B5BJdcf/GWO4XinCslsBAIlMGlPNEp567WV849DzeOHUUbw+
      dQEzrI5BZuHG5NXY8iZPX8BrJwqQMfopUsU9D+wDALiOBV9Letlt7dWrdaAHh3mjXMLC5fOY
      O3daWD+UYn5mDgCwZuN6HD38GqYvT+Lb//A17Nizuy3v0sXTZ1FYuIF7HnwAz3z9G61IJBGj
      DAAt9CLgb7at495aoywSD+uon5vMxbiBibsmUOYt0ePVOzGcXplHKPEUX4auZZs0d1Md8n0r
      YKRSG5cH2/R3OmGXav3q5yrWLoWCFK4qjBXZVIREICmduauk+kJ0fFV1mJvarAv8OCvR1HfZ
      dpWhLkUAhLAib90C11ZPkLbjZp3LnufBtu2+cq//oMj3fdRqtfCSnn7JtGfVuZbCpdFooNFs
      9p1u2gSrqnNz5swZHDlyBI++/31wbAfVahVf+MIX8IlPfCK2T9dmZkCzKVTLFTz/1DN4+PH3
      AQByq0aQWzUSWaONWh3pG1UUigvgnKNWqYJSgvmpaygvljA/u4gT5yvwiCs7jzv3tU7aZnIZ
      zFbNCmwc9QJkEUqx+S0PoDB9BYlsDvf85KfAvCawfjsatTqSqRQ+8UufxotPPYP7Hn4Iu++8
      A4W5eTiuSM/yjscehec18eO/8LNIplM4cuhwWx3yHpIwcwDCO4EVZgWhWTHOAoybhRecdNP8
      dKbZSQDIKItQew3wVpXRdapHb7dOMvQTiKZM0B3Bpp+4vuqCjQTQizRRKaWRW6U6jZcJMokT
      SJ7nhbBPKBCY33LpBMyfEiqyjfJ2Z3An0q0t099xEJE6JurvcRajCsvdTMin2i/VGS3r8Fjr
      LEtcbH6v5Hnekhiq3q5bRUv1iXRqq9yXhIiT4ovFwpLqUC1009o8cuQIvvTlL+Ot99+HifEJ
      /O1XvoInn3wSH/3oR0EpxeLiIlKpFDKZTBgc8eqRN5DeNoZ6tYbpS5dRXCyAEoJsPgfGGEqF
      IhzHQSqTxskjR3HimRfwlg89Crdaw+d+63ewcftbMF914cFBs1GH7SZg2YDve8jTMsa37wyV
      gGQ6hebMLJxMtue55T3EpBFKsenu+6Mfui74+G24dmUaY1vHsW5sAz70iZ8Ivz7wwFsxf20G
      I+vWYnR0NRrVGlJpcajs9nvuCsuVSmHI9+R9JFAEgK61WaRX3z7CwnWtt5PZXK1WUa/Xw3uG
      G41GxDKIiyLiXJxEBATmHxd6p9av9k9nrPKzXkjmgwHEMWupWcprENVoHRP8o5IKMalauPq8
      KqikldFi7gSEt+J61TBKit4u2FC/1+Ef+XucY7/TZ3GWQy/PLYX0ceNoKSM3AzFJkhlpbduO
      hS8lydPnJj/JraReHPoqxc2Puiak9lgPQpPtJeZs6qaUvP3tb8fBFw9i5/YdOHLkCO66SzCz
      L3/5y5ibm8OJEyfw27/92zh48CCefPJJLNarSGQz+MQvfxqvHzwEADhz/AR+5T99Bq8ffBmT
      Fy9h8vwF/NjP/BReeuY5HH/1dbgbR2FbFg4ffBOTsxRje96KyWPPgTOG4tw09j38MVw6+gLW
      5ur45t9NwbJs/OT/+ikksxkQb7o1boFzteMKu5m7LZJpXLo6g7Gthq8yaXiFMkaGOHK51bhc
      mgLzfVDbDl2+EqkAxLiLwB4ivwQN8XMlKVscHh4X8RGnyXWbaMYYKpVKmH9FLTtOi1E1527r
      Wz7reV4ET9dPycrPOm0Y6fjlADhBmHdfMkkZ2mrCUk3tUn8P8Xsl1YV01krtUz/1K6LNokLb
      ZyzISEojDEhaPnGbPA6u6oZ7y7LVsY2bu1uJoVNC4Fg2bBqfk6of4pyjUq10dQRLBtk6MHjr
      wj91UoVQrxQn4FVloFAqolKtoOvmuwnaf2A/jh09iuvXr2P16tXhuD/44IMYGhqCbds4fvw4
      arUaHnjoQXzop55ApVSC12jgjnvvxr/+9C/g3rc/iPnZWey5az+GVo1gYGgIJ15/E3t378aD
      jz+Kt737nbhRyiC/dgLb7n4XEqksVm++DXYiCd9rolKYg8Wb+NRv/Dv81P/2v6AUJNVzXBfc
      E1Bga/91Hgt+E2uQEIILZY7SYrvFxTlHLp/H3l27sWlsDCODg2jWlTTuiCpDnHMRyst5yyeg
      wgW6BuizzhEWcU6cfkjWo4ecdqIw2ZrBD6H3IQ7vl4xLblSTY1TVzCkVx9Fty4JNhcO50Wyg
      WquGd+nqPgMTLq2PJ5OOW85AqDhR7CvhbzI3jYn0dsqDcGp9qpUhfQlyTFRBo/dfh3RMpFsZ
      evlx7dV/XwnqBfrqldScR3FlqvvgB8n4JXHOkUr1fhmJus5lXxjnIBYNE+X5nIUHE1fyxrZk
      IonBwUF86UtfwmOPPQZAjOnv/u7v4pFHHsEjjzwSjnGJMNiOg9zQAK5fmQ4z9NIACv3i5/4M
      ++6+E297z7uwODMLXq6hVqngm0++jKsFO2SEjWoZF17/HtZu2YeRjdtAmYd1w1boaCWKAkYq
      JcweP4q58OcY5k4cxcK508Zx5Tc5Vo38ahw/ccH4XVPJfWVRC02Dn0rw2GBfat9REzTCOYfn
      e/CZD4/54cUdKqzRDeKII5OGKPK3tFOcVWFRy5gxUodV1Drl3+p5BN3xqYaLmpym0kqybRtu
      cOkCuEgpXCwV4Xle5GYzkzCKnFvwffjcD9ul1svAwwgjvaxwbHiwcSEvlSFtXn41qijOklMF
      icq8VYauj6XeFtu2kc/nkcvllmQN/jCTZHa1Wg2pVKrNP/XDoPHrVKvVwvMivZKq0AmL1Atz
      dnHOQyf4Ss2jVEoymQw++MEP4qmnnsLOnTvDRHCNRgNf/OIX8ZWvfAWWZWF2fg6lQhEbd26D
      m0hg3cQmcBmgYdnhYdDvfPXr+NqX/hobBkbgDOXx9b/+Op5/9nkh2L0mTrzwT2jWK2hUS7h4
      5HnMnD+KsRFg+94dYV/VfbhqzQiGt+/EyK49GLltD0Zu243hnbsRhE8a+nVz64JYFk7f8FAp
      tadwbwaKM2MMmWwGXq0eM7jKfcBo2Szk6tWrXJ4mlaa8TG4FQMS8EgLXdiKHkZZqWocRNMom
      Mm0edTFKp57U+nvFmPVwTj3yRGfQ8hkT7m1yTKvMVTI4E3OQz8ryWsyfRd7TLQgAIc4q39fH
      Lew3EcqMxPuaXnAhDm/fsOrYyt/VOwXkM6Zx1sNjZTmDg4OhP0TmoFd9GOpcqu34/wqpgjKf
      z6PRaKBer4d9+2Fi/pLkfd3d7gSQFrEkeTYIAPK5PFLJJIrl1uEy24omPFwuYoyBgWNoYNCY
      Ut7zPJTLZQwMDKBcLuPbhw+i5jUxtqMFkF86cRrrt46HF6Ywn6FcKsFfKCDrU/zltw9hppIA
      Yz5sJwHOGbxGHbabBGc+mO8h6VB8+H07sWnHFmM7F67P4sSVRSRXKenmCLBw5jRGtrenbjjz
      5jGURjqfAu5GnPm4HfO48y37ImM+deY8Pnjf2+E4DsrlMp59/RDym8T9BfrMcNGgyGdUNjLy
      IRE52S3LQsJNwLGdgMHwm2L+gFl4xFkWEcdeIJR8w0brBhnpMfDqwRKVCZoWdCdLR2Xeodms
      HhZTmL9uAXDBmdve1/vssegl97H9Cu5IlvWxwB+gJ3/SYTuVKXdiziYoUH4mLSMAbXfQ6mUv
      1XL8QZPa3lqtFq4h27ZXnPl3gmE7kTzE1k8dYt20BLwd+KHUi5lMGXFvluRaTyin9nWybRsD
      AyIPz/Gzp1GqlLFufFP4PSEEqzesw+xky0lLLQp4Pm5bvxlPfv84ZusZUMuG7SSCdyichLho
      Rn6+ZZ2DjdvGY9s6uGoErLTY3gdmPhNhOjjWLxFq4eRCA/VqK8qQcw43mUChKLLWJhIJ3Lfr
      dtSuzIA1ewtVpUBUkww1YUJhWyJdg5T4JuZtggQ6dsSwcCQTVPFo2S4JQRAggDyY0ekYd4hL
      PSimnoKV9XZyYHf6W31f/9H7qfsnQhgrSB0djjuPZ8KybBP8QjXGDyCEhDg6Czm1jXqZqmAS
      ZmPUdyFJ3h/heV54Y5jetqUysTha7vI6ke78lX2XfV5J4pyjWq2GmXn7pV6ZdLgOlDlOJVOg
      lKIcJO5bSevNl34F3h0uLJfLmFycg+26bYne0vkcykEabyC44rTB8b1Dx3B+AbB5HcPJGhxm
      dmTbvI773rano5JLCIFrae3jAJhpfpZvnTaSOfzT334HJ189hkqxhBvT1zBCE8hmsigUCyiU
      ikimUnjbHXfBni+hWiwZUQlJ5cVCezZQlai2gSWDkROk4vnLGeWhaiMqBcGPkef06xAjz2va
      ps401KgnoCUIZV967ZMOJ6kRQvrk621q23iaELCtFgSkwlSmNqhQhBAy0RTdqiDQLQ2VdCEp
      +hGMjXaVJSEkTEgn7xFW50Jtl2mOlkLq2rhZi7QTqXdfy0tiZJ23iprNZuTmvVQq1Vd/ZYSa
      ej6l07O+54dWXSqZhOf7qNcbIRQsLNcld8dIvu+DUIKRoeGeLItjZ06hXK1i/bYWRKPu8VQ2
      g0qphNzAAApXriLPk/jWoTNYk6fYvG87sqOjqBUWMXvuEqYuzqHsJ8CIECR7tmSwesO6rm2u
      N7wo8yRArXADN86dgZNOIzEwCDuVFti7STD4PlCvAIwBmc5XRAIAGEPt1BlcryRx7pnLSH/3
      NAZTNjatW4UjJ67AohxDuRRWDeZwz1134t47DuDQm6/Dy4oTxSYqzs23CwCdMeibVo/80HFd
      STIeuldS69I1ZlmPzjTVCB/10hKglWOmdS8vBRBlYPphJDUbaC+HeHSnKZfSnhD4jQYsi4bp
      qSXpWnH4eWRXiVxMFhFphmWqA12Yqf1Vyzd9p74bB1nECQcZXioEQLQsmY66XC6LcxCBILNg
      G31GNysE9DFfKZLjIPFzVVm4VSGt8vyB+nelUkEymewpN5Hq1+tEhBDwIC5cOgplCoZqtRpJ
      Ax0GHCyTEGSBszlhJ8IgjE5UrVYxuTgHallwE2YH97ot4zh/5DisLeMYsZL42rMHsffeLchv
      bN3mlR4ewdjQMDYe8LF46TKunp9CYXYRd9/3jq5t5pyD0fZ2pkdWIze2Gc1KGZXZ62hWKwAI
      3MoNpG9cgcU82JZQmCzHAU27IJaNevEqKg0flYaHBmz4mTyQTIv0EVLRvnQOpbItoHhiocwz
      KFeAK2eLAIpKWKeH/2NwCHfs24Pbd+7CM0cOY3iT+Wa0JLGjV0LGMT2T9g/Em2rJZDLUOnrR
      PGQdJqes+r0JJ1eflcxK6tOUUvhhOcEJY4rIZdaqENBhmm7MKsKMSDRfDwgBQSvdsfoTN85q
      XVYQ0mmCfFQGrqfMUMdKHVfTWKvvyP9NEJ+wvFrRMOo8yIN81VotvCeWUAobUWa/UlrzSpWr
      H/pSL+BxXbfndb1UYoyFTleTUtYrlctl5HK58JxNxzp5a48DCA83IphHCQkv55jL0MReb4J7
      8+RxlKtVrNuyuTN0ywE+V8Dlmo+1D9wfhnHqzxLLxtDEBPIbN+LG2VM4d/4Ktjs28kPxF8k0
      Gw1QRxM+HMiPbUZx6jIGNk0gMTAYNAJw0mkkh4bhpDPGNufWtiwOv9lE7cYCqoV5VBseKg0P
      9aaPxcnrICQdf+JAKnewUAnWTSqVwmgyi1qzCSJ5DiFgvo/CzCxGcwOwVfO8bRDRrrH1ok2k
      UqmO2FM3MlkAQCt9gBpRoz8j2hu1UqUThgPhTUmgPFx0ctHrMI6sK07Q6fVqX8L3/cgYxPkI
      zIPQ+lV/tptQUknV6mUf9dBOPbJIrVP+qD4gWb90hNZqNfhsZbFwvT/q3ytBEvrRKZVKoV6v
      95Vnv1/inIcRRqZ29ZOZVOYGymQyHaOBuNT+iVCQfMbQbDaC8yl05SJ/gj3Xy/Wd1WoV12pl
      rN64HtPnLiKRSmF004Yw4kelbC6LwVQOx2pF2D0caCxOXsbQ1h0gto2j56ex6soMJnZMGC+T
      qZUrILYFPfc/dV2wRjMUmAhO3ObWb8CN8+cwuGVb1/GwHAeZ1aPIrB4V/AhCKDS3bERtcRFH
      XjqHGhF3BHMY0DhCUG+01uaurdvx7NFXkV+/Bn6ziRvTMxggNu7Zsh2rRkZgS6aqaoSmkD35
      XScB4DhOyPyB9msGTRq1iZmbzPw4HF9vj0iIxqL1EBKaSJaS+bThiWRWccxdFQomaCTOWlFJ
      CpKlnMpUy+9mdenvAO3XdJooblylAFcxfJMDWWj/VehDIOGwuLo7CdZudCsweM6FgqAyelUr
      X0lScX/ZFknqPdq9Uq1WC2Ejk9OaBVaerCfhJmBZFJWKF85/nPavrpulnTwO9mUPyuKbJ49j
      cMMaUIsiNzSISrGEK2fOgwAY3bwRqUwm5B2rnDSOzczCHu6ehrk6N4vEwABoEOufXrsexUYd
      h187ifH1I1i9YW2k3/VKFVYyFWH+khMnV61GbWEeqZFVra+oheTgEKrzc0grn3clQkA4h+04
      cIZHkB4eQe7IBdSqrapVISDGPwpRptNpjCayuHT2Igaoi30bN2HdmrVIJBLCqgPaQ/RMGHK3
      WGfHcZDNZiPv2LYdQkFyYtSJVhm9KZJFJ5M1YoIzBKBpeh5hsjTPF4vbpwy2duG3HAPJpNQ2
      qt+FPghwo7Yo61fN6n7J2L+Y59Rx02Et9TmdZBv191ULxiQASxVxMMWc3dXsQ1Lfl8JRtTR+
      WMj3/fDwz62uV8X9JalrYCnCU463sU7mg1ILDiGwmYVcJotypQIQAfu5He5q7jTH3UhalpRE
      Q7NNNDc3h+vNCgZpPvSXpXNZjO/eCa/RxNWLl9GoVrF2YjMq8zcw6uawmKZd85n5jQYaxQIG
      J6LJdiw3AbphHBcWb2B66g3ctm8HEsHJ6mqpDDszrA2E0DOdVBqVmasRAQAAyeER3Dh3Bqmh
      IZBecygZ9n12MIPr1Sh/5GgF7CR4Dbt2RPtyx+492Fouo1oTyovPWtl4w2RwOlZrwoilpaDj
      47ZttzF/WUYnK6BXLFPWrR+3j8dDRZ4gte0Sp1cdWpxzAQ/RlrPSBHfFQU2qkIj2S7TB5wyU
      ksixeb1MwJxLSY612s9OGpauvavl6aej1Ygc3bLQrRqThRi2kYgU2LzV6UgbeiHTobKVEgSc
      83Dxky5tNK1d/fvlbifnPNbC4JyH0Vb9wjCqEmMiediQg8JJigOfHhOROQnbDcvoVkc/pK5t
      13Vj550xhhNnTuNCcQ6D69ea2+862Lh9Cxbn5rEwcx0bUwN47dosrFHz82obCpcuxEIzhBAk
      BofABwbxyhvnsCZro1xtoGynkci2KwccALXb7wuQZRUqFRz8b/8PUoND2HTbLozv3df3uOUG
      M8B0PJS3fX0ew0PRu4ft4AKfRrMRKDYtCDHCUfR4dr1x8u+G14Tne+GCpFwlIgAAIABJREFU
      ymTanRuc8/DknnxXP2GrMyG1DtkePVFdNxLlUZhi1Qj0k6xBgjfNAlIPjUmYIy6NAoh0yqp9
      kGWJEDApdOSiN5UXp5mHJrgd74AzQXWmZ6QW2CkyJE4IAuaEeZE2EQIqbz0j7RFFnShemC8f
      yZxLIs1J50iiTpk/Rar05Tn85Xme8KH4PqrValubTBBLv+Pkum7H8wrqOksmk8ENgUxo2qQz
      c78ZeFOuJ5nm3ERT09N46tBLGFg32rUt89PX4HCCcr0Bf6Q79FOZuYb06jVGB7FKhBBkxsZx
      ea4Cvn4LUqvXxOT/5CAxkDIATJ47i9G1a7H73rfilX/5JmavTKJZr4P5PqqlIjjnqBSLKM7P
      h3PcrNdRXryBSnC2wUq6oKwB5nvgvn5lL8Ndt20yKi5ybh3Hga3c4WCrD/TKYC1Cw4gBeTmE
      vJ/W87wQw9RNTlXzN50fUD9TGZHK/CPQi2EjcIlnBh74iHZKWtPGeZCDyLDhVFIdz7qWTSmF
      53uBzyFuvKLMl3EWAniqVm+KDFI3ZidSxypuTNQNp79rKk//3QTTUELCKCu5iXp1FpqsCtUK
      UaO5LNI/kzFReM8F6y5sHMcxauOMieR9S02FrJJcE41Go+tlM5ZyHqTf4IpEItGz78JxHNTK
      9dAC6pLoGMDSfDJyr8v7ruPmN5vJ4PlXLmHVxg0Y27rJpNcBALxmE41aHVuGRnF4vgQ60vke
      52a1Cr9RR2ZNu5Uwc/kSDn79a3ASSeRHRvCWR98P23HAeghrp4TAb8bPZWbNWixcPC/gmlQa
      3/nyF1GvVDCyfgM27tyJQ9/8BjL5PPIjI7jn0ffjv/7Gr2LbgbswefIEPv7vfwNP/d1XMLBq
      D0698RK2HHgIiXSrnw6vY//u7fF1p9JIuG5krKm+CTuRCnlYSo6aSqWCQqGAxcVFlEol1Ov1
      jmcAVKxZxdOBltYvmYGu+XdiZgDCS5AJpTBxZUIpCKWg1Az16P/rpr6u8RCDEDFRM7gzwPM8
      ITQ0P4ccA8/30PSabcyxV9KFgW5ldBIQ+vcq0zdZaoQEKUMCZu/Yds+RIrqlpTIBP9DUwwBe
      3j2WvReS69a2rMj8x7XN6NcBv+kbxiTJCB2pPJkgR/mZjPzpdb1JkqffHcfpSXBwzsF8Fkkt
      0iuZ1lAcyTHudrDNsixw6uIb//ImyoVS7HPzV2eQsRxcL9dAhgQ+H8ewOecoXbmM3AZzfp7F
      2etYt2Ur3v7Rj4NzhlOvvIzS/DyIbWNuStwnvDg3i0vHj8ELmH158Qbmpq5g6uwZUMtGYW4W
      nHM063VUSy3I5uShl3HstVfRrFThJpO4MXMN+9/xTjzwox/Gm999Fo/9/Kfw3p/5OVy9cB7M
      Z9i8aw/e/VOfxPa77ka1VMK7fvKncejbf4WhdRMh85d7cfOqDNauGTX2SY5lwk1E1m7oBO4F
      09QxcPV/FctVG6W/Jz9XGbjJB6EzfbWsTouMEgoeYP2RzaJDG1AgIc7gkPboCh2yUtvcunGs
      V0bAjVlVI08Emu9yMBcV7pF/x1kYkuKskDhqCQE7fL8XDF+1AE11cOjzL4RCL6GCvZCwYuOZ
      oWVZYfoDXZipBwlvhjjnYXCEepFQ3LPSId+vj0SWm0wmkUgkUCwWO8JBnPMg3TrpSfvX3zXB
      ujqpcJOMaop73nEcDGQSuFS28bd/8ywefvsubNKcnIwxvP7i67h/3x4cPHseFTuBcq2JhuWA
      ek2kXQsJC8hmM0gMDKJZLiGzdn1H6KcwN4crZ07j6rlz2Hn3W/DMl/4C5VoN67dsw5Y79uP7
      //B3GN+7F698+5v40V/8Jfzl7/xH7Ln/AVy7cAE7d+/GlStPY9d9b8Mbzz6Nt334x5DKCmZ9
      z3vfh7UTW/DcX/45zh95A7nhYazfui3of8t3yVkQIRXywyAjbaWChGujXilEx4xz7JuIZ/5x
      ZPeDvXaCEXSNVWob+mZXy9LLkOWoh87UMtXvO7WREAKK6IEp8GhaNEJEylt5st1jPlwFjgEE
      PqsLL1lHePIYMYxT/Sz8rqU1x8E78oDaUhmMSXs0jZcqhPT2dzswZCpLLXMp70Y+A9rminEO
      s2dn+cl2HJRKJfjMh9NBMbnpegI/Q7PZhOu6YSI9Ux3ylGy/9es+p3Q6jUIhermIrtiJszJL
      D1vupY29aP+AgIgGs2lcqjQxWXLw5a8dw/a1p/DgQwewav0aVEtlfP2r30e9ynGp1MDFoc0A
      tUAGABACH8CNoF3XfA+4cA0bEixW+5c0f3UaiVQSlm3jxsXzIK6Lux98CFtu349vf/HP8d5P
      /ixywyO4MTOD4o0FrB2fwNs+/GM4c/gVFK5M4m2P/yi+8H/9Du599P0YDg562Y6DZ/76fyCV
      y6G0MI/db3sQlxw3ZPIHHn4EX/38HyOdH8CGHTtALSs842DZNnzPw/f+/m/x+E//PL715LdQ
      nL+K3LCAsBziY+/2TRFFoRfqeKJETqrJeas/pzJHlaH0w/zldypkYbIO4toKiDz6kJqI8l3L
      gSaR5YCZBA+pDjapIal1y5TPen84D9JLUEQhA43588DnoDJdE6wi27IURtNNOKqkWyH6/C0n
      ozPV3QmOkOPc3gY16nnlyLas8GCbF1ge1jKPByEkZPoyBYm6j9T5IISEOfGX6nS1bRulUsl4
      P4DOvNWUKP32Sf2/E6XT6a79kFZSudaAVJ58K4ET14Gzf3UQ+ybyuDpbwpWyg4/duQFHSk2Q
      TDa2XbAdIJFEbrT9mWjFwPYDd+KOhx7GqYMvYPryZSSyOazZNA5CCJKZDIoL88gNj6BWLsN2
      RLZkaTElh4YxdfwYVm3YgEsnjuOuR94DQinufd/juPd9jwMAagvzYJ6H9/z0z4bVbtyxEx/5
      d78Gr9lAMi0Oe737Ez8DALjv8Q8CAD7+a7+BM997EbseeCzS5KEUxbatW8KIql6Jqpq3OvCd
      4vEjY9UjzhyplEazcwLtzl0THmqyPrhsAxe5xIGAuSntQ2DOhreIcd4WtgiOSISMCQ/Xx0gV
      UH7EIy8WA+GtqtTIqjhNSRUMN0ud5iHU+g0Hy9W57Fa+cT6WwDgMLYypdBmK7kIyh5UVZGoV
      BwVbl2ksN0loRt4oZ1oT4T4hBIT2vkZkeRKu9Dzhe8rn88bw7H40R1NdJuE0OTmJz372s6FS
      Va1W8ZnPfCaMDuxEvu/jf//N38LFhfZzEU0rhVcuNjBZckCLV5EfzKKQyKI4M92+txVyayUk
      h4bE/kD7euWcw02n8MZzz+J//pf/jNeefRp3vONhZAeHQG0xZne96z14/sl/wD/+2f+NkXXr
      kckPYHDVaoAAiVQayWwOJ147jMc/9WlM7LsdZ19/ra2Oytz1trMCgLhyMpXJdrSmTZ82gmiy
      fufP1jXBbvisfCZu4+u4v36AzAR76OmdTfWZfgekhcHbMH5IRq9gmTKpmiinpZGDIMx2KOuQ
      jFpuIJOglM/6TI92kultzRk51TFUP1+OSBe1bBOpQsbnrYgWk4CLK9t0eltERAnM/Ga15Yjw
      hrIGV9AqkRRq5erZkGW2OmS/5Mn5arUaCgFpaaok/2acgfLOZ0HUebMsKwyxlFFGxWIR2Ww2
      rFdVeGQG2+VMcT03N4c33ngDR44cwf79+/Hcc8/h7NmzKBQKSKfTOHXqFHK5HMbHx1Gv11Gp
      VHDx4kWsW7cOq1atwrGzl1BfMwDmzSM7sg6cM5Tnr4FSC+mhUZTmr2Jg9g28cmEC1fRqvPaV
      L+L2D/0rpIcFcy1MTSI5MIjMyGo0qxWk62VMnjyJ4fUbkAnuFtBp085deOLX/wOKk5eQ3zwB
      Qgje+v7Hw+8zAwP4yC//KnyvCTchHPjv+PGfAABs3r0HALBu/XpQ38eBh99lrMNOpuA3GrCD
      ZIoqLV68gGa1glW37TYPKtFBUqDhx58h6US2ynh0DVw1xaNOue7akM7Q1c3czY/QjaJaNETa
      NJPEVLR9kXNEfBTRtLm0EsyCRj38ZrSWYtRSqTVSAtgdYoOXk+KElCpkIo5ETsL264JfF0a9
      wEsyxNXCzQky2V5bCUPk4LcE/5fhnys1X6r/CGilClEjgXzfj6SDkMKagBgjc1RrTBUu6iFF
      9T6BUqkU3vPLmLjnV2rv3cJRl0IPP/wwnnnmGezfvx8vv/wyHnroIQDA008/jRs3buDQoUP4
      yEc+Asdx8Ad/8Af4wAc+gD/6oz/Cn/7pn+Ls6ZNIVW2U5qaxYc9b4XsNVBfnUC3MIzO8BhQM
      WFzES6fPI7POQ2VhDtdPH8e6vQdw7cSbAIBj3/h73PGhJzB/4QyOHf4eNoyNYWZuDv/qNz8T
      q+AWLl9ETskeqisjlFLYyVTsnkitWo3F82eRHBxq+44QgtyGMRQnLyE5PAJXga1K01fAfQ+N
      YvuFM6332z/zGFCv9z93VC4QlSmrsI6ERVSHqD5oEp+UpDuedBhHfqZDRyqTjYNH2vPR0DC/
      j3yuDWOPMacI4m8CU/up9rs/xsAj7VHr6lXg6ePUjQmr46cf7FPDLikVYX42bb8gxxR6q0Nj
      Om5MCAnvLuilT03Pg6ddQ6mSTa0wlTYhy5uCuBv1k2xtqRT6rAzWsbQMZCoK0X8z85dlNP1W
      tk/XdZHL5UApRaVSiWQylXUXi0WUy2WR7jlwMDPGjGkobpZWrVqFcrmMmZkZDA4OhinEx8fH
      MTk5Cc45jhw5As45Pv7xj+OJJ57A2NgYXnvjTdD8Wmza/yNYs2M/GtUiUvkR1CtF+M0GSvPX
      sGPrFtir1mDiwXdjdMduDI6NY9uDjyA9vAq50XUoXJsGZww3pi7DmZ3CQz/xk3jnz/9buLaN
      hdMn0SwWIuMCAKWrU0ivHoWlZfzsC1uXfp2Y/UoIQW7jJtTm5lAvLIJzjtL0FOxUGonBoS5w
      Z3s7fE6WlLqE6kxZ3dSmDa/GbEvnVCqVQiaTMeKK6v/yd2lmesG9uM3gZKYeGtrWbYMQIIhq
      uHEkym31QQocnTGa6lL70I8QkIxL/Vu9lUwd407tlnPU9L0w5bL8Tj9JrI6F/mO6EU1n/t3G
      UCoEphuiJGbeiXRttem3ww29tGWlqF6vI5FIrFj56p5JJBIdoTqZVt1xnPB8RdyznIs7MDiE
      g5UQgnQ6HY61TNKo1icPoNXrdSwuLqJcLvdshfdLBw4cwOc///lQ++ec43Of+xw+9alP4ZOf
      /KRR4Xvm0FFwLRrp/KF/wca992HT/gdhWTbu37MJJTvVUosDmJd5Hk4+9c/Y9/hHMfHAO2DN
      TmPtZhH5Qy0bifwAhrZuR71YxMKZk6jMzoj1WK0CnMPN5iJt0dunQ9uyT8zzwvMHiYEB1Aud
      NHmC/KbNaJaKWDx/FnYqheTgUAA7xpN5WxD4hr3UjWwTRGPCq02MRQ6A53lwXTcMa1MXUdyJ
      X8aY8J5DHPTxmR8mSerGFE3UC7OQGwUgwWEgGjrIVAEnn1VDWdVxiDskFLwonmUsgiPrUT9q
      e3XNPvKdhAWYsKhsjcHqTLjVz+h8dksj0W38TGWrVluvFFp7wfs8AKFuPas3U71eD3HzlWKG
      MvIHaF1CFKfwyKidbm0hIEEKBx7R+NX5/0FQKpXC4OAg7rrrLnz961/H9u3bMTk5iUQigfHx
      cfze7/0eGo3/l7v3jpIkq+98Pzci0mf5alPd1dXeu3GMYWD8DE4CCasVy+qB0EpH2rd6ejJI
      SHuWRWcXSUgrnX3sogUtCMGBAaHBDAMjMQPjZ5hh/LR31VXdXd6nz4i474+IG3kzMjIrq7pH
      T/t+51R3VWaYe2/c+Jnvz1W44YYbSKfTQc/frq4unjk9QSLr/W3FEriGSUf/Bs4+90NAMLQm
      y/q+DkpLC7z0zS+z/2feS+fAIM995XPsvP2tJDJZXvzml6kszHPLHbcQz2aJJ72Cbl39a0AI
      OjZs9CCyuVnmz55GmBbI1j5Q8JLM8lOTXtMX18Xx+y8bsRjSdRGmRbp/Dbmxi5EwkE7ZDYNe
      AykVoSUE5VyO2bNnSGSzmIkEViKJ6VfwjJYA9WWg2yUxPj4upfQaMgtqzeDbeanDXbig0aRV
      x+iatNIeTb/Gj0QSj8Wx7Sp21W4QAFGwUB1k5c2/YcyB5eK6Af5vWRZoUTnK8aWuGc4/UC9S
      WFCqObhS4kY2g/ZMdt1iikos0++r1knd35WyznHtVU6sz46OEgBhH0srbTos+JodEzVWde1W
      qfxhCtbNdZG+3yUei6047vz1pHQ6XWuG8jqQej4KaooOeV3Z9WzHoWp7DMA0TbLpDNVqFSEE
      2WwWwzAoFotBo/goi//1FBSu9CrwxmNxerq7AwGrLK7w/H/02BP8xf0vg4jwRTk22ZjLe962
      H2NmkYfcblxhYMZivhZexbBinu/PsemYH2fnwb0YbUCUlXyehXOn6dm5GyvR6KAFT7kbf+E5
      enftxYhZWIkEhCBKp1qhMDVJbuwS2Y2DZNeuX7bmEHi1f1784YNceuU1KokBejdsJW64xGNg
      mgbJhEG1XGGmUl/qwpA2f/jBW7j68IFl76GTJaVerMwF2ktE0jNMgQZtOUqDUp8prUeFpsVi
      MX8M9di4GoMePhm+putrkWaL2ixKTJhmjfnrm12/jzLtPG0KLFHL/lQalWKYrutiCK+tZ5jM
      CI0/CqbRr6mvqw4RqbR8ncHrxzQTjO3QSjV4XSjqc3F9J2U71/IsGrcmtP8lmQB4VkAqlXrd
      BADUwi4ty6JQKFw23BUoBK6LLSWLuSXSqXSgMKh3DWp7JKoEy+tF6j6WVolSwVxhklLyyPMn
      /J549SSEIGbAnTcMMbhtiJGJFxGWgWnV/CUBdi8EZj7Pxg1r22L+4HXvmp5c4uTRx1mzLsu6
      LQN0bhpCGAY//vpXWZiaYml8nG0HDzJw3Q11Y9bJjMXp2DBIdmAjldwS8+fOIKUku34D8Wzz
      PIRiLsfJZ57murvu4ckfvcDc9CTbrrmNsgM4QAUgQfilcTG4ODnL1W3NskaWPnAd24/SwsMU
      Lv/Q6nf1t65hmNRgAKdqN5wbpZXomLh+7HLOUcu0AkdiFOPUx6sYXNWxqbheb95mJrpftyCI
      PZZS1tXDMSIYd5SWFZ6DEjKWhv3qVoj6XYeWmsEWzSAGBS0ZbRRba2WVCSGoOrZX173NejNC
      eBFIKxVAl0NRGd5R1lG7OTCrJX3dlJBp9ozavl7tD5CSZDyBZZqBNZPP5yP3kaLVwK4rIdMw
      EBKS8UZtP0wXL11iYnqSbsPCkQLHkVQxcY04ILl+dyeHbzyM8iUS86/n2DA3BR3dEE8ipUuf
      UyC7dnPb46wWCkxNFimbHZyfhJHxUdI/OcH6TX1MDw9z9S33UMkVeOGZh7nJdZkbH8cwTcql
      Iv0bNnL8J8+QzGTYdvgqyoU8S7NzjA+fZc2mIbr61zBx+gTpTJZcLs+GvfuIhQSgdGx6Ng0x
      sHMXmaePsugUmR49ycLkKAuTF9l3y89x+rkf+kcL9r35nRx/6gFcx+G3fvgV5Cc/xtzcHFu3
      euGrY2NjvO9972s6Xy8MVBgYfsN0HVrQzcSwDyD8uR4brl4q162vJa/O16+jUzjkVHdaRo1H
      wQhBqKA2nuCeUgbMGeqLzbUiITynZtWuBgXA9HsLIRC+L0Dhcp62Luogn6ixR1kCyzHwKOav
      1my1ZrvjOtiOg2msvNG5LuC8GkftwwemaQaNOv65nL0qwUt/fs2YvIqIeT0omUxSrVapVCoB
      zCTE6tun6qSqsyYSCeLxOOl02sO3S6Wg3ATUKxthJeVyBFErEkJgGdayEVaVSoVHT5zm0M+9
      3SvRUi5jl4q4lTJOpUJ+9Dxvvuv64JqO7XhCb3YCyiVkdz8sziLKJSynysChvSsa5+y5YcpG
      TUOXRow8XZwZrXJheIpS6RF6+xOsHdqMY9t8+zN/Rffaddz8c+/mwS98nq0HDjE+fI7Z8Uv0
      Dmzgme/dz43v+Fke+vLf8r7f+RiP/+D73Pyud/PKM0/S1d2NdGySvX2e89cwyF28wMjxYzxc
      KjL82ovsfNO7KS7NkZub4qp7PsjC1AU6+jew+cBNjLz2DAuTF3Bdh/23/jzl/DzPv/ASf/SH
      f8Cv/dqv0dnZyZ/8yZ+0nG9dHgDUM35oZOz6BtE1Cn1DhfHnMLV66dXLEN6YYejBw8Zr5+kM
      X30svBMDKyOKwUbBVIEAMgwwrUiN0JVupNViGWbd+MNrGBYiUfcNf99KMwsLhKjohGbn2UE9
      I9H2i68/l2AfCK8PQDvnv54wQzsUKA4t/B4tnfxtUrNnViwWSaVSWJbVAKO2Q47jMTwV/dZg
      xeIV51N5BcViMYB+bNsOnp3ut4naj68Htar7D9578tiLLzOf6QjKtMSSyUBLlo5Dn1klrkVp
      SSkR4yO4XX3Q4xVDEymvjIJdLjFybpRNWwZJdHQuOz4pJeMjUyAisH8hwDDZvmeI7Pq1nH7p
      eaTrkuro4F2/8e8xYxblYoH9N78Ju1Lhgb/5a3oHNnDVbbez4+prOP7sM1hWjFvf+wH+1x/+
      Ph/70ldIpNI41SpLF0aYOXGMZE8vYyfOkEp1M7T1GrI9+3jt6YdYu3UfG3ZdjWGauHYVy4e4
      rHgcx65CAL0avPDacarVKslksi3fkqEm3izWXC/ZEMWUdGsgrJmuxqTUYZ8oiEaNJRxPL/D6
      FJiGieX/eBaNEaT164xYp3A+AtQEV1R6e2B6hiwby7QaHLRRkJX+nbqHPi99fu2Qfh+FLes/
      DeOHIPxSX8OV5Bg0E17/O5Aab7PiarVKr6snKWWQP6N+dIZfqXoVQOPx+IqEou06VKoVKnaV
      SrVKtVrVrEtAUIf1KwEQZWHqfzeDRa8UCSEinb2KpJS8fPw4xyu1aMCwB2Dpwgibd2ypv65p
      wPohSDfW/xeJJIs9GzlxfoLZ8+eX5UfF6Snmm1ecxjQMtu7fx8E330IpX6BSLtHV1+9FM0qo
      VirY1SpLc7PEIhzI1VKJ5x/8Pvuvuopn7vt7Zk4cY+niKFYqxdpDV9G9dRuOkeTC+VF+8tij
      vPb0Q/Rs2Fq3Fl3rhpg8d5ThV55g4txRutcN1a3S6LzNh371N7n11lu56667+NKXvtRyzpH2
      WHhThCnq5dA1df0a+mfN7hP+fTkLIWBoFsHmhppWE2aIImS5tMLJFaSi7qOkqK5ZSzzns2nU
      a85GaL3C41DH6s7nMIav30cXrlFrHbWWYb9Ms+fnCU0wCM2tiSUQZvitKAxxNdzbd2Dp6xVl
      yVwuBevuDaZu/K3mEIvFKBQKl3Xv8PXV3FKplAcBVasYwvB6KKyg+Jq6qpRe8IYDCEdgGH7I
      aOi9U8JM7bOKXfUUJf+eChp7vWm5NZ+emeHJixMY3b2R30spSVbypDvrGb1pWQjXATPUdtWH
      hoUQOD3rOF8qIEZH6Blq7g+YGr5IleY5IMmOPn70zW+Q7utl7w03kspkWL91a/D9G9/583z7
      M3+FYRjc9LafYXHsEk5ukbnTJ+nq7OTS0dcY3LuXQ7fcxpPf/hbZoc0kUum6e2zdtYkb3/Eh
      Kq7Xt8S04kgtLNWKxTl01y9QXJxl077rMa04e/zCcIlMJ9uuuQNXSv7xyBy/eNcQ/+r225vO
      B/ww0GbYc1SCFDRq9zqTbGY+68fr1Q8bBhQBSenf6feX0sso9Y8kZsUaLBLd1G9mXehJTfox
      6v5RllG5WqmDpSzTwvKjOsL319dDh7iavRRhi0oXHuE1UesRXsNmP1J6zm0vgsljQOpzLxSY
      yLr7YYulGUnAcTyhHI7MUvfQ5xC3YnVrrMZ5OVCRxItok+Bn0EZr9FFwmUrSCpdMXtU4Qhag
      ytSsVKtBBJRpGGQzWVzXK8kQVQtIp3KlXFeYTkrpPUOt/LlpmnR2dmIYBktLS4EAcBzHEwCG
      Gfi01DooYfB6kBBeUlqzBLtKpcJXfvQopf51gQALr0FhYpwt3RYDW+sZ+PlnXuRRuxM3UWOk
      zRSQ2NQoe/ftwIw3jsOpVnj+gSdYqKYbvtNp99YkQ9dd5T1Xx8GplCnNz1Mt5L34f0CYJvFs
      B6m+fowVZpVXZqaZePkkx2dWpwDVOfpdm4/cvZ933H1L8+PDL14Y5mklGKL+bgazRDHE5TRN
      RbbrBEkuYcYY9GeNgF30BdFhllYadNR4wnCT67pBxqspvEgdFfOvn9NMgEatYdQ99flEjafZ
      uNUYw+U4AL+mTq0zliKVb6DitZvdd1nN3L9Gs7hOQ7NMDGEEiW7NLI/VUDBuSR1jbIcSicQV
      K4egr5lpmsTjcVzXJZ1KBQl9tuOwuLREuVzGsqzAAd2wz5XfQtRH8sStWF1JE3VfJUj0yp+q
      aKFKKoyyUF8PasX8Ac6cO8vC4lxT5i+lpDw2SjwiczqRSGC0QCR0qvQOMDl8PnIMS5fGWCov
      z6wXJqaYOXGM+TOnWBg+S3lhnng2S8/2nfTu3E3vrj30bN9JZt36FTN/ALOjg0O7NhAXqyvI
      V1fVQZg8e/Rcy/1fN8IoXLcVk2qmiYZfZvW3DoHoGza84dU5YVhD3/yu61K17Trnru3Yddm3
      6tiw0zJqLlHjDq+FToZhIKTrtZdsslZhaKcVNBIm/aVvdk4zeCjMPPTjnQCC8QSrEH6PZ7dW
      OCyKaTYTZM3IaLKOpjCD8F9HevkWBvUWymrgH2X2q/BoIT1YpBUpzVjNVWHUr0c9nEQiERR5
      cxwnsBSFELjS28tKaIeVF9vvJS2E1+gIKUkmkl7Uj9a1TEGYQghsx0FVsgksrEAw1lu7lxNJ
      thy5rttQXmNhYSGoVQQwPj/Lpo1ruFQoEMtkguOklExfvEhnR5bNmwew4jHGz40wsK1mBcTi
      cUy3iq2d04yEaTFZEfQuLpDorFUClVIycX4M12hRS0dKMlaF7UO9mH19JPobu29dCUXGjCco
      GQbpGESloayEhwCcn8yxuLREd5PKp02fejMBoDT48KZRnyvNI6zPMFboAAAgAElEQVT9KO1G
      YZL6jzL5LQ2OUN+pssqKKUUJCyCIZQ8fs5wgC893uWP0+8atWFPmH3XttjToEEXNVUoZtE3U
      hWmU87jOooOGNQlgGTW3kNbpuC4VrUfxsuMNhRM3I1dq2cXUkgNXGxbqWYISKQgESjsUi8VI
      JpN0dHQQj8fJ5Vp4AVdI6p2QUnrN1kul4DuVtQsEQsB26+srKYizlqjpwXdSShLxOIlEgkwm
      QzqdDorHxWIxKn6YqaJsNksylawVJhM1Jzh4Ya+vVzju6dOnueeee1hY8GriXLhwgVtvvZWL
      Fy8CeAXpTBjYPEhnaZbixFhwrus6PH3/t7GnxhjcuZWu/j6yPV1cOHUmOKbq2Jx7pVZv/9xT
      P24cxPQY8uJZ5PgIrguXTp6mNDdHcXaG4vQUuUsXmJ4s0MxqRUrWZip84H3Xc+PdbyI+O459
      mT6iVjSby1OqRlv2K6VcVXDu/IWm35u//du//YnwDcKmv/pfyvpIkbDJGQ4rU7+Hf/RrhqEM
      da3g/hCYuOHzavCOp/UrxqMzxHDxs2akM+fwOHXLJip+OjyHZkJKH/tyL5t+fliASMDFxQga
      nDd2itLPUf+7rlu3x5XWrJ6tDhmp0FBH+QXaLPfgSnfZpunBXqBmEUrprpoJKcFmCCOY3nL3
      j8ViXlcq08S2q5TKpddF83ddt671oxqbK+tDLwNNXEtWdFw30PzVuBVZplXHuF3XpVAoYPuF
      FR3XwbJqSlW5UqFatWtWpaj5etrZj6ul+fl5JiYmEEKwd+9evvKVr5BKpbjppps4efIkf/4X
      f8GJM6fYc9UhhAEvPvxDHrvvPnK5JTZs28ELP3yQ2fPnOPbyK+y7+jBTE5N896vf4OmHHyGT
      TPHQdx/gmcceIz83QyWX45Xv3Et+eop0Tx/T505y4qEHWDh/lv7r3sTC7Ayjzz/DkUcfYnJ2
      iWrnGqbyVWZLLsIuUy1UkeFe0dJh9waTn33Pm+js6fJgtZ5u5k+ewu3uqwsuUHQ5ayltmzWl
      PEcv5HBpbDW70vtIBGszcGDPjsjj6wQANEIGulAIa9XKsRTl5Gw3lFHf3EF0SoSA0P+uvSAO
      wu/yFRX6GD6+1RiijmuGw6pjmmn0rusGLyJQF2evM+VWFCWE/T+8xiBCc+Jp2rxOumAQwsu8
      bdbZypUurqPhwq7H/CUE2cjtCADRhvbdINhYfbln5bfQlYTlrpNKpXBch6Vcjmql4jXgvsLw
      t1pH13UxTbOu368QIhC8jfu7livhau9bWKGIx+KBU9m2bQrFIrZj1z3fSqWC6VvejuNQrngC
      LpFIkE6m6pS214Pi8Tizs7OYpsmRI0e44447+OY3v8nmzZvZs2cPXV1dyGQMmYhx7uQpLMti
      dPg8/+cf/S4Pf/3rbBxYz9Fnnub/+uQfYts2czMzrN+4gX2HD+JUqoyOjPD2t7yVlycXOPTu
      D9K1YRMLF0e57oMfJdnRhWlaDG4aZHp8DGmY5GamcA2TAx/4CEcf/SGDN92OSGUQyTTmmrUk
      4jbu/DyOtEAITFnlxv1d3PEzNxNP1EpDx5IJ4kjK07PYmY6G/XZZwnRxnr19PTx1bBx3mfoo
      bd1HCKrFHDcc2lnHCxQt66XQN6CeWKDCx3QoQTE3PZpAfa9H0YStA/W7OibQdLXNrJqNeAer
      CAoTYQikK1cFrzQjNV6dapqTV/ZAmdABAxIETFll2Kp1MY1GTDzKmmrmB6l/0PWCwZUuJo3n
      hh3QCts3DTOAFPR7KOaP/7fjX58VYporOdbSwh9X+9J4YJisg7dakWma2I5NLp/3YEPryjPA
      sIAzTbMO/mlVAsOVEkOzjPTgB52EEFSrVYqlktfqUT1THx5ESlwhKJWKJOJxYpZFKpnCcWwS
      8Svn6G5FCvdXFUGfeuopdu7cGXSu+va3v82TLz1PqquDNevXAbB5xzZMy6JnTR9XX72HJ9f1
      E4/F6Ozuolwq88pzz/PyUz+hd72HwZuGAVEJT1Jy9omHYWmefNWms5gHIejeOOQ1W/ergupk
      rB8k29FF7MRp3Irkzlt2sOvQrsjn1DO0AaM8wvj0BLl0FjOdCZQsxZ9aUdS+F0Kw1jKQhtWW
      PqICOpaj0ek8M7OzdPkBAdlsNuDRhq5tN9Oe9UE3K2mwnOYl8bDmcAibHq2irAnlKKu7Pp5J
      rHoIGIZfydNdPosxDEG1Ih23jTovKCegneNKN2huAj5kJKVfhVQGL7Gai76O4Sid8NooCqwO
      YdRp/0KIIEpKt1DCzF+P/VfCwPKriyqNn9DzlG1s5NVQOLHwskxmn+Ep2KOde1d8bVzvOHYl
      SUqv/n4ymSQej1Mql4Oe1VJlQTSZs4J+1D5U19OfqWmYFEtF8oUCVbta5yNQQlyfr1IuUskk
      2WzN+RplNa52vmHKZDJ1ZR/uuOMOPvnJT3LPPfcAXkns737ve9zznp9j/caNkRaYYZp09fWy
      NL/A0tw8AM89+gRvec+72LJzB1JKMqk0+ekJCnMzuI6DW62SmxqnUsizMHyKHbfeQ6pJbkEU
      iUwHnTs28Z53HWb34d3Nn5NhkBpaz/rOBPuFzdqlWeyZKaQTehYRa9Vszd1ymb0D65mdX2pL
      +29n7xqGQdVIce78aO08bU7m7/zO73wiyjTQb6QPXl00DFHoF47SxAXC1+IbyxzojFC/l75B
      vXt614n7lf+imF2YosLdmh2r4+D63IMxylr/X9OoNbRH+hCKW39+eB2jnOZRWr7O/KMEsmdN
      yIY1Ct9PH78ij4EYNYtEes626JLWBIXtrqSFFd4/l0e1onLtQGuWZVEqlzwB2CQT+EpQIpEI
      unFV7arnnBbRilWYAqUhZCmoKDiV2yCgjvkTWlNhGHRkO7Asi7Lf/EUpV3oE3uU+17DiAZ4A
      MAyvu1lPTw+7d++mr6+P6667jnQ6zezSAnSmOXnsGINbN7Nt9y76162ls7uLzu4ukqkUazcM
      kM5k2LJ7J+WCZ8n09fdx8thxevv72XVgHwOdPYzPLnD27Fl6N2+jY+16Rp9/mo7ePpLSZvz0
      SXq276Fn0xZSXd0ku3qIJVPEEkky/WuD8S6OX2Lkp08xd+4U165Pse+aQ8vO24pZJLo7KRuQ
      dl2uHdzI/OQEpWR9LkHks47YA+b8LLcfPsgrx05zZGQ+0r8QdT1TVtmxJs7m3qTnyygXEVJ6
      PgQ8QdoZs7nmwO6gNHhwrcnJybpdoxhT+IXSGaieKh+1mZu9iK7r4kgXyzDrNOCwtqtKC0sg
      EY8HJZ+llAHzbxd3U1rUcklGujWiupMpZu8xXSOIlRdCELOsIJbb8cP0FGYb9SIahkHMrEU5
      heesF73ThYIODam/1WcqpFNp9uHuY+pB63kXYSFU9UsKhMfsRVOKIFO13R4R7VBUAtZKSYcW
      V0LZbJZ8Pt8g5K8kSSnJZrOUSiWvXINTDRSPdvse1KxCAbhIVwZKshCCmGl5Vo90CPpaa/cH
      T9j19/YFe21paak2Ds06vFwBEFYGM5lMy7j/YrHIj155numZaXYcPhD5DKIgkktnhrHiMdZu
      2hgcY43N8dj5SU5ZtTBHd2EWp5TD7R/AWJglhoCeNXVGRviep378j8RwufPqbTz7yCP8wr/9
      CBuGNgX30d/NYL3U++7vxamzI1y3bTf3vXYcs6evAd7R5yXxa2gZqqy8YEs5zz033cAXv34/
      978wRgPVQbKSrFHhpn2D3HXTIbZt3YJhGNi2TblSYXxigkuXxhmfnmd6qUQmJvg3H/i5hnlb
      UMvMDUMR+qAV0xdCNDh9my1qmLzYedGS+av7Kc2m4mfcSiDmm5RX0nGlwzbqAasQPX0tHFmv
      ISttLrBQhOH1BvAzUBUpM2056yo8nnagEX8/BNEjyiJsdm4YtpNSYttOA/MP5qhFU71emvJK
      KCy8ViNEWnXgupLkOI5nvdl2wKyhuZ8i6r1TVprj+g5h10t4FIArDEA2QKACgSM9BS7hl17O
      5/M4jkMymaRSqaxoj7VDDRrpMhnFLx59jY71a1hcWqy3fKkFqUWNa/3WIYaPHGftJq+LVzGX
      p0sI4nr03vQYtmki13pCwu3pp7I0T2x6DLr7wWoW6y+5aec6Dl93FUee/ymmafKNv/lbqpUK
      ILjlbXfz9c99gUQqyZ5DB7nzne/gD3/lN9iycwcXh0f47U/9J772d1+m95d+mZMPfo+1N99G
      7+AmhFHPJ9TvCooFb1/buSX2bx/yhHvMwsdf69cZsAyXLb1x7rhuF2+87jCdnfVF7lQo8I5t
      29i2ZUsQfpvJZCLXNADplHao1w1RiwoE0Qy6NNQhn3Y2UjPsO5CKUiGkaqH8+xomhumNLdwS
      sR1q9dI1+1EvR8yK+dEzLpZheSn0NE90ipkxTYCJyJDIGsZez5ChPeGmfA76czBaPAv13MJ5
      GirBKIqE/48R2sD6WFdCuvbUCrpqRWHlY6V0ZaGnRlLXdlyHfLFAOpXy3inbs3olEtdtnSwk
      wGPqeMzcDjuBpcSwLK2hjjpR+A5g79rxeJxMOh2UnQbqHL8rEYLqvWzHeuno6GhZ8nl2dpYF
      w2Fp+Dzr/B696h5AS/+IYRi4jsPUxTGWZmaJp5KYsTQx00BWKrhTl7C7+yBUX0d2dFOJFzHH
      hsGyoFrFcB1EMu05bA2DrsIsr/30PK8+9yyWZdHd18vF4RHeeNft3HDbm/niX36GX/m936Kr
      p4fP/PGnuPVt97B1105+9fd/m+/d+/cszM7y7v/jX/Oxj32MX/nIL3PTgT2Mz88zs1RgplSm
      2tGFmfaS3KKU5kwxz+BGT2jdct0Bvv/sWUoyphaHzrjLtTvXcucNB9mza0dbZTsMwyCTyZDP
      58nn81QqFeJxL3pM3bchEzhcC900zYY+v4G20SbuGjwIDfrQmX8NxwyO9JmU95ntOBjIuo0V
      hZvrY4u6d/i7sEBS/+vM2IrII4iCvBRzU9+ZonZeM8gpLHCWG7eyTowQXFSLfm9OYShvOfgk
      CqvWYbTl7tWK0eqCYCV0ucxbL8F8pSnY19LFND0/g12t0tnZ5YUF2+Hqq7VoICll0O5TZbd7
      Wb6hTHD/fUskEj58YHovM6CyoBUbVXWxVFG7cI7LSsl2HCyzBjO6vhar7wXDMKhWq0F4ahQ9
      +dNnmakUqBRLrBva1PS4ZuS6LrFEnK0H9yGEYHrkAtXcAs5CGWftRmjGGBMpnE3b60rFSymh
      WsHILbCuK8lNd7+NXQf28egP/okXn36Wnv4+rrrxDZ6yZNvEfYvKNP0sbkPxCe+esVgMIxnH
      tCz27N7FHm3Mj7/wIkeqVYyotZGSXf01R/WmTYMcGOrmp8NeUuLBwRT/9r13s3HDwIqVL1Vt
      tlqtYhgGpVKJYrFIOp328kjCJ4RfcF0bDh/Xbjy7zvRtx9Ywc7eu561n0nqac+0+3o9hGJii
      MaolLFCajSHqM6URK8etJ4y00FPXpeRnVIaldjgxre4Fw8vYVEXXosam4/nNtP/wdYEgpyD4
      nuiKoVFzDz8vL4wsmizTwgoVc2uX+Tf7/HKhu8uFKwzDCOocXQ7pe04n23H863vP23YcFhYX
      iMfjdTV+kPiOeKN+72vPWFl4MdMibsVIxOLErRipZIqujk46OzrJZjIk4nHi8TjxmPd/Ih4n
      EU/gui75fD5QPtSzaxXw0YxqNYRq+9h26mvVWJZFV1cXqVRjeKWiCxcvkti4hp1XH2LP9dcy
      dnaYhemZ2n0ch1ef/ikXT5+LfEaLs3P0rltLd38NX+8d3IAoLOL09Ddn/hoJ6mEmEU8gO7qZ
      mprje1/7e/72rz7DIw88yPa9u3U2xM133c7n/uy/8tXPfp7eNX4JaO0A27b5yn//HP/hv/0F
      Dz/1OCdPngzW3DRN3nj4ENml+UZfm5SUpiY4uHtX8JlhGLz1jQexsHnz7m4++p476O/vW/X+
      N00ziEjr6OjANE2WlpbI5/OeEzisoYZr0NghzN8y6+vthCek/td/wHvA3sapaaPqEsIwsKtV
      L6bfNNHruAghiMfiQURMM2avMyjH9TJSw2NSC6ILgCDTF7/Ov8bYlf8jqVUQ1BlZeCxqvrYW
      VRP3tbGoF0/HssPOUTUfpVm6rkRPIJJSgluDVvQcDOVwl1LWOZ91h3DFruJq4av6+sSs2IqY
      hZq30rJXtVmF99w8zbLerrkSZYvT6XQQOqnWZKWkKx9hCLRiexE2iXiCYqkYnGMYBtl0JsgG
      1hkxaPsOtXe9eapAgzqMX4igzaOyzF3XJZFI1DWZX1hYiFRQVkqudKn4YxZCBJVEq44dFERU
      kFPKh7wir+O6PPzs06Q3rQvOkVIyc2mcaqXCui1DjBw/RWLdWlzHYf78KBs3D9LlMz4pJWde
      OcL2Q/sbntvMmREm5ss8Xo1Di97gzUhKyd7CRfZsH0Tkiuwa3Mz00gKLhkv/hvVe5r3rkltY
      pFgo0L9+nccXqzaxeMxrtOPzScuysC9O8aZrr29ALIZHRvjeqWHMrm71KUhYm1/gPbfdUjcv
      27b54SOPc9XBvQgh6Mh2kEm3rlTa7lzx57O4uLh8IpiKYbcdG2EYWIaBlM0zYIMXxLtbI9SB
      SoOvxy9dx4t08IcJWsibHq63nLbrul5NFcMwMOTyVkrATH181vu9frGUuRi2jHQhGczRz7b1
      nMQEEQLtMNJWVowXFaUlw/nHC+1vfY2UADLqFjoCChCizupSL3nUmMNzroOHVC6En5zSaq5S
      Sr9UgVU3H0ATHi6JWLwm0K8AdKOej3d/t63+xfVj9qI19NIg6tkLIfxS2tHvxWJuiUw6Qzwe
      DxyxSnAjCaLMlLM4bsUCKCW8LxYWFuosS6VlViqVoOVkNpulUCjUCYXVrJdtO3V/u9LFkKLO
      Osxmsy1hH4Czw+cQPV6rRV0w9W8c4PRLr1ItlSlUqnRlPZw8fWg/MxcuMnVpgsHtW1iaX2DN
      4IbIa6fX9nLzmgTDLxxlNNXb4DxdjoTrkjYS3DC0k4GBGswyPT3Nq2dPITvTpLo66OjuoqO7
      Fm0Ui3tzVmscN03mxya4YefuBj+IEIKtmzdzcy7P8OQUScsiE4+RTcTZtutww/timib33H5L
      TdG7TOtXH4e6fjqdbm4BAEGVQsdxvMbohod/qRcnDA+pTem6XgExb2PXOzyVc7R+PgLH12YM
      w8CwarV9VK0bXYsJh6AKIepi6l3pBt25WpE6x3Ydj1FKr1a749ZrsIlYvL6kQgQjjEra0v9v
      hfGH8x/C9YbCQkHiMSM//TVgAGqMjuuFsgrhvahR97Zt239GSnDVsPmEb22Fz9Nhj3BegBIA
      7TSGl9KDyGJWLNDyTdOkatueouGvsWWabYdNtkOxWIyqY1Mulz3/TpO1aUa26+A6noWi/CF6
      lJQ3di/PIl+sFQvTFYlkMoXlM2v13ICg4J6UXqizsgaj9rAKV9b3YTKZJJlMUiqVgp4Gytpw
      HIdKpbJiIeC4LlW7GowzHot7FrxbC4VUkEKr3JpyucwjLz1Hx6YBbx1Ca3721aNUq1X6du/E
      DAkSx7aZPH0Ws2qz65pDTVGH8oVJdg5u4b/8+DkK2e6GY5qSlBw2yvzGW29rGrp64eIFjl84
      j+jOkuqo9QsOmLNPrusixue4+brr27///8dkRCX5BFqiH42AVOUOjIYyAjrpjM70w9Q8xuCn
      qgvlzKo7Ccd3kBmGgWEaAU5mGNGMU2fGYQ0VohuaNCNhKLPW28SJeLwu0igMg0Rh+uoFURVN
      9YzqleKtYYspClLzqx/UddTS72ForTGbvTAKX7ZMi5gVI27FvHEbrXsm6FnNOhnCz3Ngecgh
      LJgUsxOhYy4Xqw+T4ziRGno7JKVESFDdmaIsJEMYVKsVEJDUWwJKGQjaYrFAuVLxHLkqT0Pb
      T2ofLueg16PllPPVNM0gA1eVW7AsK/hupTCQ6ytCY2Nj/PEn/9hTLByv6NzHPvYxlpaWPMdn
      i+u6rsvH/8N/ILG2NxhvxISYnJ0LmP+l4Vr7RtOysBIJNm7f0vQ9EkJQigmy6RQfPrCFzPgw
      tGkxDpXm+ZU73kjC7zVQKpUa1n5w4yB3vOEmtiQ6qV6YpDgyTu78JebPXWDu3CizZ0eZPjfC
      5MlzHN6zr637/kshS4/sUNqCrnUKBFYs5mkcSGJGDfdr5rTUswuVRu7YteQywxC1eiV6kpJl
      Bszf04QlArehH7EKXzQMA5NGQaBj5K1gFZXboFs0rusSj8WwHU+jU9EU0LwV5qrw7tCahaGt
      5QSH3tEpLARc162DzdqJ9gEwqPkLFOSiWz2266DAoqixKUGoxtWKkXnX9EJ8w9Vfm1EAQayy
      cJzrunR1dHmRNu7KcgFqApi6Cp1qLjUSVCpV4vFadzqEqHP+VaoVJJKujk4KxUJQcVUC8Vis
      DlqKHIuCGanBi4oRq4gPhccrhWU1EJppmCBd5ufnOX78GM888wzXXnstTz75JCMjI1SrVUql
      EkeOHKGzs5MdO3ZQKpXI5XKcO3eODRs20L9mDRPzM0yOjVPI5dm5fy+u63LuxElMK8bWXTsY
      HR7mmaefpXvjBtIdWb752c/zcx/9MP0D65Cu5LUnniZ7121ku7so5PJUKmUunDvPxi2b6enz
      BEuyI8vc/BzdmTTvuHE3x04Mc2zRxO5prNuvqDc3y79/2y10dHhtJh3HIZfLeeWzk/U9fQ3D
      YPuWrWzfsrXu8yB51LfIwue93vTKseMMDaynq6trVe+E+bu/+7uf0HFMqE/t9hi5nxGqlY+N
      0v4VheEQnQnXIA7vZVIvoqkxfyDIbNUxZYXPey9Vfeinjm01g6XCDFZBHroADL4Pmsk3L5ER
      ZYWshvT7R40p6ifq3LAg1+ca/j7s6PfWvLGshn4/ldS2Em2yWbinEKIuokl9VletVIgAAqrv
      Cue2VXU0ipJJry6+Hu7bLrmuW79HQ/vMdhwQXhkIVW8IIixlnzHH4x7Ob1dtv59FrbxIKyvK
      CwjwRHEqlfLKWvvMXylf6j0olUoeLLgKASCEl18yNTWJYZicOnmKm994M1+/91727t3L4cOH
      eeGFF5iYmOCBBx7AsiyWlpb4gz/4AwYHB/nsZz/Lhs1D3PftbxOLx3jx6Z+Q6cgyNTbBxfMj
      HHv5VS4OjzAzNcP5s2fp6uvFMAx++sjj9PT30d3fzxPfeYByppfvf+M+Uobg4vnzfPvLX6On
      r5fvfvUb3Hzn7QghWJqZZfeGIS6Mj2H2dbJpyyBbsha5kfMsStNLANOed2dxiY/ddRPr16wJ
      PnMch0QiQTwer9sbtgZPR62Rsvz1+Pp/DnrlxCn++tURnjp+GrE0x6b161bc1tMAT/Ow3fpw
      SKi1UYzHYgGmrjOPMEyhSBcoUtZKS+gvjCo+JoTwKnqGBhZAKKrCpj82gQcNBS8XmsNTY3S6
      9q9+D3wbmoALPzAdEtOvF/683XLXKyG1maKuq98TaGgeos6PIl0IhiNY9LVVfwe+mJAgCPIi
      aC8mv10Ip84KESJ6X2nPS3onrRgiUvdQ2PhKKXyO0v5s30/murUaO+FseWEYHgPyr6F8W4l4
      Asv04vmV9r8cGcIgmUjS3dVFOp32orb8c/X7Sim9BvRRraVWMGdDGPT19mLbVcbGxkin054g
      lZKNGzdy5swZqtUqx48fB+D9738/73vf+xgaGmK8vMTWPTt55y9+gFvechcLc3P0D6xj4tIY
      haUcLz7xNNfefQdbdu/ijW+9mx0H9zO4fStvesdb6ezsRFhJJkbO47iS09M5jp8c4abbb+XW
      t7+Fnr7eAJJ28kU6OzvJl0tengzQu24Nb7nrBu4ZiNE9PYIo5MB1SRYW+fU37GXDunrrQBec
      +ho++uxzfOmhH3NuZOSKw5KrIdd1GZ+c4ssvncaOp1jK9vHNiTL/+b4Hee7VI0xNT3u9Iezl
      Q549PEe9bP68g5dxBZihzkB00kMCw4JB3dO1XYThO7yEqIuRDpvDUnphmSq9PtgArhNoizpz
      C2uYEokUquxuvRWhH9dM628mOK4UhQVYFCkN0NTC8PTz29H29DUKU7M5NrP+WpHSSNt1QHoJ
      Uf6z19QCPTLL8guhOa6zIn9POp0OEqNWQlFKjv4d1KKnMqk0uUI+8ljdSs2kM2TSGW8+fujs
      SgRm1i+2po+jUqkEFpcS9nX5B5dBQghuuP4GPvOZz/De97yHl19+GSklf/3Xf82nPvUphoeH
      eeqpp+rOyRXy9GwcaLjWNz7/RT78W/+OUqHI1z73RTLdXX7JBX8ufmjzyLFTvPrSy7z/d36f
      Uy/8lGqlQmrtAGMFyYs/PUI+lw94V1J40GNFOiQMz/+Iz9I279pGQgh29Q/w8sgldu/cxt4d
      2xvGZRhG4JxXazs7O8vR+RzW2nV878wIW0cu8OZDB+gKlWC4HFLPbn5hgdGxSc5PTGMJeOdd
      tzbs7XK5zMLCAl987DkWEtoYTIuxVC+fPzGBeOksKRz6EhZdiRgD2RS9mRTrerpY091Ff39/
      YClY4Dvl/NK4YcYQ3jjNGEaY1AKqJtuRx5h+1Irjeg5ff/MqqCE8hmYvovdZvWMsirwIGRfT
      NOosBwVHKJM36oVZjUO3HWr2YqpNGMWMHddbLx1eUevdzvjCwmWlc/rnOL7pM/TXRRXfo00h
      oMxz1ZWrXQpbu81IPaeyn26v1//X/WGGYZD2YZvV7qVMiPlDDb82DCNoD5nP55tCFyuhdDpN
      X18f119/PQ888ACHDx9mbm6OVCrFrl27+NSnPoWUMqj02dvby8zsDNML8xhCsG6DJwTSfojn
      7kMH+PJn/id2pUr/0CaS6TSlYpF7/5/P8q6P/BuGdu3gbz75Kfbdcjdd/Wv4wf/6HJVymcO3
      3o5EkunoxNy4FaOrn1dfOMK2HUP0prNUqhVslT8UelRrtm6iMlfkX7/t7qbzFMLLZ9DpxRMn
      Mfv6AbA6OhmVkq89+wLXru3jmv37Vgy5KJqbn+f8hUucG+1njXgAACAASURBVJ/m9Ng044tl
      ZqtQNeI4wmTQKPCzdzb6qUqlEg8+/wrnzGx0aGgsjozFKQAFYBR4LQcsFhEj8xh2lbsHu3n7
      9dd4UFc4DDSsETcrbxxFzV5cVYZWGEZQI18Iz+mrx6AbRq0zVJSmGcAQlhXETEvpQUm69q/M
      ON05ozRRKWXQgzb8YkjpOUHrWiOKWjbfah92K4rS1qPwX90aqjp2XRy2PsZ2tH/F1NTahAWb
      utaVopVYAFEkpRc2qsjyo41UPRxzGaewEILOzk6WlpZWNI4wjAjNHeo6xGmYvuPc9TQ71y/t
      IKWn9PT19NbtJ9d1yeVyQbmI5UjtD+XolVKyuLgYaK+JRKIO7nw9FJeurq7A4a/KP+j3eOy5
      nzA8Nc62Q/si97JdrXLu6El6d23H9Pt6OI6N5UNZx555kcyO/YAXCmqGSnfrSmHl3Gk+dOdt
      nLk4Sqk7hRXT8ku0c2bPjPAzb7qt7bXI5XL83ZM/QfStafjOrVToyC9y656dbN60spIWtmPz
      6S/dx5GcCWYsyP3QKVGY4XO/9aEGgfT0iy/zpdNTuPHVO5uNapmfH8hwx/XXNpaCaKbpNHOm
      qnOiUuMVWbEYViKOaZmYMR+2MLzICFUDxRCijolH4e71AkZzOiPrwlPDfozAQaZKT7jRxeiA
      IFEoyncQtVat1iW8dqs1w3VG5LpuwPDCgqK6gubtOunMqxU0dDm0nAat+ziifCwCiJl+MT4/
      Csc0jGWZP3ga82ri4HVlSI1lOQe4lBLHdrwsUZ8pBpCmX88qvM4KqmmH1DVt2yaXy3ldwYrF
      QHgoweK6btCG8kqSaZp0d3fXWZxhp+nU1BSFuKBvwzounDzdsO5CCJDgmiamVeMHlh8GOj82
      gdW7Plgnq4Vz1S0VeMf111Islcgl/GvoU/YVxOJSjl0Dgyua68T0NE4yOvvWiMfJdffx3dPn
      +f4TT5IvFNpeaylheDaHjVFXZUEn20wwOTVdP57JSb5xauyymD+AG0vwnQsLnDo/2igAws4/
      aG7CRzGNOmaqm84aEzNMdf2ab6BZSGnYEas7C1WvWtMwscxag2xdu9XH6Urpd+7yqjOmkykv
      Llwft2xkflEvfFg7bPXw63weTagVvKVbJLomqr9Ytt+GsqF6ZAv653BoSSlrHa6aOK4Vw9Ln
      GTj91d6CIATUNOrr27QiVQxLh2RWMvbwWKMEr/ou/HuwZ/2qnkJ40XQ6vFcsFllcXGx7fOF1
      KRQKgZP39RTg6vqpVKrlukspee3caTr6e+lZu4b1W7wSzuPDI7hObb+OnRvGKZfJz83XjdV1
      XCbHZkj09i07FuHYXN/dweYNGzhy6TyZ7q6GXBKAarlMZ9Fh13avMXqlUmH4/AjFYrHlOm0d
      GqKv2vwYIQRWRyfDiSx/9/hTXLh0qeWYFeVzOYqyeTkdACeWYmqmJgAKhQKfe+x58vFMW/dY
      juxkhi+8dGb5UhB6XL+OR+s/UbVfwjiziluvh5hqCWZGk43bbLMFLyJGHVMMM2T9ZQ1sB8MI
      IhmsiuUVRTJq91cMW59jlD+iXWr1wkRdW81FfabWUmcsOimrRflOgkxmKeqSxcK0nCZ7pWCD
      qp8VLoxG5qkEXDvkuC4YXqXVdkgxrOVe9CiSUjZUxlUhyYEi0yTEFaiDeBzp1aUSeJn0eqTQ
      SgVTlDatnpPrelVHw/26rxRFwYVhmpicpJw0UcBFPJlk28F9LM3Nc/7YCTr7euno7UZK2HP1
      QSZHLzIxPkHv5iHi6RTTI6MYPWuXHbd0HLZKmzccuJonnn+O7MBar4aS/zgCQei6mHMFrr3q
      GoQQlMtl/ubvH+TRV0bpTZvsGuzl0M5N7NmxhYFQGKVhGNy2fx/3HTuF2dkVNYzgXrKnn4uX
      xtjkl3RuRaMXL2HHlvEBGSZnR8fo7OjAdlyeOH6GUTMTjfuvknLx9PICQH9hdaYo8aAX6cf0
      h/G5MONSmrrrugjTzyhuMRmdAS3n4NQZo45v6xaBTjHLCkxx5bAL2uSJ+th13QJpxajUGFQ0
      UnisrR52lFNWFwphZqz/rTegkUgMvLUV0nOJu8JzcKvwyqj1iBrbldAgpZRB9U2vrLbRMNfl
      KOhOFwH9LUeJRMIrebGKMEghBMlkknK57NXuQZJMpRACyqVynZIQtVIBZGRZ4EP78XictK9B
      l/xm7leC9GelsoLV71cK/1fr0co35DgOL587ScfQQKCMKOro6Sbb3cXc5BTTF8YY3LkN0zQZ
      2DLEWttmYvQi89MzTE4s0LmjMXJIJ7daYZsJd1xzFcfOnKbSkSDtB3bot62WKyQLFa4+eBjT
      NJmYnOKL332c505NIUWcySJMnlrgiZNzxMULvHH/Jn75PXeTydRgnw0D6zl06RKvVpqUcvbJ
      LhbI9DcKCSklzz77LC+99BI333wz+/fv58LkDNJsXTtJSsl9J+f51smfeB0Fq3kSQ4OQaF5t
      daVkT15qhICiKIzHh5uQS0CKxtDCwNnrM3DT8OqkSEFQ014/XrU4dGV9WeaVajI6g4w6V8VG
      K6y5q6uLTCbToPWra6mwy7BfIQwHqGSgakTJ4Xbm0AwCihqT/r1eO0jVmFfC1XVdZAheiSLb
      depyCy6HaSi4x5UShO/Yp7U10oocx8EyLa/k8TJFxxQJIYK+vKshJTxUaQBXSqqVKoZpkUgm
      UXWFpYB4Ih5g2Yqq1SoLi4s4jlcxMpvN1vVjVYLlSpFSFPSmP1fa+ZtMJlte79jJEyTW9jVE
      4CgSQtC7bi0D2zYTi9fqa8XicTZu34IsFtmxeR2l86exy9GWkZQu68sF7rr6MDOzs1woLZLu
      7NAO8H5c18Wdmue6PQeIx+NMTE3xX77wPZ49Nd1YBF0YVIjzyGvjfP7rDzS8hzdfdZhtdpHu
      +WnSM5PI8YsULoyQu3SB0sw0lXyO6tIia9c0OosffvhhHnzwQW677TY+97nP8eyzz3J6bKbh
      OG9u9TzPMeM4VhLbiFOJd2OPDHsOhCtBUmLPzS9vAegDUhq2ItMw6hi147h1UE5UUoVhGEi3
      1sxaufiUQPE2LX6UD7XmC8to0LqmHAVXhZlmuNRBKpUKXnadCTrSxRL1xe/09VCkY/TNsodb
      wThR11TM3YN0jICBBoIAfE1LBmvpamMM1iV0j8jf/avoTGO1MJBK1BKAgfc8LzcUUd93usBt
      RomEV5J5NZaMlJJiuUQiFq+dL7w9WimXSSaTxPyqnumkH4ljScp4DmDl93BcBxyvwGAykQwg
      iMuNiooab9jv88/N/G3bZnhuip7NrSEQ6SsFAfm/LkzNku3qZO3QIOs2bWD4xBnGJ8qkB4cQ
      Ru39S83N8PY3vxHLsjh7YYTU2u7IZ7x4/hK3XXM9pmkyPjHJp774AKNzy4QAC8Fjx2cYuP8h
      3v+zdwXzNU2Tt735TXVQs1IOCoUC+UKBYqmL7q4u5ufn6e6uFaO7//77+fSnP00sFuNXf/VX
      +drXvsalpTILmU10DQxx/EffYfft7+TMU/9EYXYK13E48PZfYPSlp1icuIBTrXLw7f+K8z99
      lKXxUUy3RN/h69h46Dpe+oevEM9k2Xz9zazfu3wT+way7ZoA0HHNMBOqrY+oYzB6+JKUsi6L
      M5yVq/94QkL4paFdn+HXogMUQ/MsAhtJ68JmYfhEZ7J6GnwNKqGufG0Y3qnzHyBwkUHY5XJ4
      vpA1zTustetCajlBEGy2IN7dRor6bGCl8bfU2iXIkEoWJcy9nsK1GPuqbRNv2j+1OXkCR2tS
      fwV4UFh4qHEr53EUAzBNE7uycohFWXy24yBd16uwWS7V9rzjUKlWKFfKXqOXmBWUMY/F4th2
      ASlrNf2llHRks8TjcWzbZmlpKQjTXI5Bq3m2KzyjLNTVzF+RzgCXq3Hz2vFjZAfW1p3X9NoK
      GjZq5UAmRy6y46oDwfi37d3JxmKJM8fPsECC1Jp1WIvzvPvGN5BKpZBSsn/Xbp5/7RWMtT0k
      0jVoZHbkEtfv2EMiHufi2AR/9qUfLM/8g0kbfPsn59g08BJvfMPV9V9p62GaJolEgq6urmBu
      k5OTkXtRhXKuX7+excVFLs0UkHGvL0I5t4Dr2MxfHObA2z7ApSMvMH3uODPDpzjw1vczdfYY
      E6depVIqsO9tv0DKznPspSfIb9xMpq+f3Xe+g3REmOry8xSYybhfCkKDbNyICegvmefMIjC1
      VEmHcDheeCF0n4BX0qGeAaowUOFj1iLiGmFaDk+uY6RurY6LEI1x7nqzbD0UUVXK1CGwZvdS
      88BnAM0qZzY7P6yde/Pzx6SFfirBFrO8rl0qMzZqfcK9i6Oc48GaGKoHg3EZzB8MaiG9l0th
      +Esn3YqLOHHVWrbjuEFXLhdPY1X3r9pVSqUyAkG1Ug38A0rwWaaFqzUDSiQSZDNZpJRBKGqp
      VGprX7TLwHV/xJXA/cPr1qyhuKJSqcSl3DwXT53h3KvHWJyZbXqszzb8Jvfeuk2NXoqs9Z9I
      Jdl39X72DfXhjJziLXt3Bhm4QgiymSzXHjhEarFEbm4eCVw8fY6BRIbu7m6N+bcHtam1q7oG
      n7//OU6eGW55fLlcDvw4uVyOUqkUFJYL5pBIMDc3BxCU0aiY9cJUOg752SkuHXkeKV1Snb0U
      5qe5dPR5qsU8nWs3eBxRCKqZPiiVWLf3AJuuuZGTP36QUz9+sK35Ncw3ZtWqgaoSCVK6mNRH
      aej/CyH8Te5DHm3cKHwNnZpCIX4LFENEN1YPX1+3NKK+94SY97frenXOkySD78Mx07oDWRcM
      zSgK6mqAGjWtX79ulO8Eaj4RteY68w8LiyCHQl+TZdRvHS4Lz2E1DEQJkSsJbyxHusUJWq8I
      WkNErUjfb3bVDu4jAsu1RuWy5xC2LItKpeJXza1BoN2dXQH0o0o0r4RWIgSa7Y+VUPj9yWaz
      y+YovPzaq8zMz9M3sI6O3m5mLo0zffEoHT3d9A8ONECw+r2cqsPIiVPsue7qiCt71NXXw+aN
      edb11YeGxiyL7s4u3nD4as6NnOd/fO4LmMUKLxgmj61/guFiJ6PzfojsMu+CWjOlVCyU4b/d
      +xCf+LV309/XG3lOqVRicXGRzs5OFhcXA1+iTr/0S7/E7/3e73HjjTfy3e9+l//6X/+Swt99
      g3967DFmhk+Sm57AjCfoGhjCsavYpSIIQc/gNuxKGdeu4qgwX/+abi7H9JGXmDx/jngmi10u
      t5xbU8p2ehCQ0l6WW6gwBh7+bjkKoAefIUc1DgkzYUMYLbVJHVYJ/62Em+szUvWdZZqUip6T
      ybIspPRK9FYdG9MwAmarX6+duTVgu7Lm6wj7Q5pFFNVZY/74w81tdIan31/4uLsTFMfzOq0t
      B1u1QzpsFI4K04+5kk3XlUXaTg3/MFwSaMWrxKB0hlq1NVgk4thyuYR0E9h21Wug4u/bVLJW
      kll3Rrd6HuExtEt6FdHLocDSN02y2WzLqB/XdckXCkxVi1RLJbr6exFCsHbTRtYMbmBhepZz
      rx0jkUqxYfuWyGtMnB9l59WHmZuaZvLCJQZ3bMOKN1qfhoxWwJTw7e7oxCpU+NM//VPGxid5
      x3s/yKYb3sX8+Hn6h3ZTys1TLZfI9Kxh9MhPKC7NsfngG0lmu7hw9DkKizMM7n0D6a5+Lhx7
      juLSLKcMk2ev385Afzff+ta32L59Ox/4wAeCBjvlchnX9cplq/XQ3w+Affv28elPf5rR0VHm
      5+d55ZWX+eT//euQynLBzbDtxjsAOPQzv0hhfgYrniCR7WL/W95HYX4aMxYn2dFNx7oNmLE4
      IDh41ztI7j1Ecu0GXLtKx7roTmnLUmcvVgCj+FaAXmceGmEWfUPUYIpaFIpOUU5TpdWqNyko
      z6CFi4Yx8nackXrcvD6WWmKRGyQSqYYvxWIJV7rE/NhsBXtEQVnhz3SMP+xzUL+3yiBuNgf9
      u6DnQcTG130bdWMAhGH68BMIrbxGM2qHaeiCsC42vk2Ia7WkWhC2y9jCY1spQ4yCLg3h+YEg
      OsBFSrDtqt8S0yux6yJJ+h2mCoVC0/29knFFvWeruVaYhoeHef7553n3u9+NYRjk83nuvfde
      PvrRj7bU/oUQvPTaq/z4oYeCssz6d91r+ujq7+X0y69RzOdJ+dpxIZcnnc14EFqpTLa7k46e
      Lmzb5sLJM1gxi4FtW+p4jdsk10jd68KFC+zfv59L4xN86ovfh471FBfnmDx3hDVDuykuzVNY
      nGFpdpxYMs3AzsOcePr7rN92EIlk2zW3c/zJ77H/tnczdvplrrr7Fzn/2lOUcvN89u+/xp//
      +Z8zPT3N0tJS08iypaUlisUivb29gdNcCEF3dzfd3d0cOHDAi2izLP7jv/0gn77vx4yUvHIa
      wrTI9q2rXcwwyPTW8iEslf1bLZFatw5Mk46169t/yFFkGBg1rbzW2KBZyGAYtggn9ET5D8IO
      YUNjVLVx1Kf+qx+9VkozRhN+AcJYvReR4QTJUXG/cYaHRdZHCoUxft1hq1sEelmGsNNstRhs
      GMYKri3rj1HruVxOgiG81pBSW6Pl/Bj/0khBKWEn9nKUSCSoXmaMfQOTpXHf4o/PNIy6gAjH
      dYMCdbZtBzDR5ewNPclRLz9yOSVGFJ04cYJ7772XyclJLMvi8ccf5/vf/z75fJ5qtcrU1BS5
      XA4gaAIzOTnJ3NwcY/kFzhw9QSyVYmlhwZu/47AwO0d+KUdhcYmLI6M8+A/fIZ/LUSoU+ZtP
      /yX5xSXOHjlOPpdnZmKScqmEZVls3LGVzr5eXnrsKcbPj9YG6cqGQn4vvvYaX/7Hh/jBE09y
      ZmSU144c5U+/8B3GF0rYpQKxUB0dgKWZMWYvneXcS4/hOg6L02MsTIxy9sVHcF3P8Z/p7iee
      ypBId4CUvP/97+cTn/gE3/rWt5ZdS9u2mZycZHZ2tuEdVdYKQF9vD7/1rltYTw6rtISoljDs
      MsKpgNv83Y6X56F/PdhVKBW8H2d1e10IUasGauJ36orQeJe7CPgJUIYZvLTh89Xf4Z4CUdcL
      a0q6xh01Nv24MCNVJRJABG0P8ceI9GCSVnPTx6oLQF0bbuUY1o9fTgvXx65IIoOyx4ocx1m2
      WJsQWtmBK9hX95+LvPBXzaprk2eapkksHmdxcXHV846yAJUV0LD3qBfMNS29dq2wErEaahbw
      oK55uY7fO+64g0cffZQPf/jDvPzyy9x0000AfOMb32BiYoITJ07w8Y9/nKNHj3LfffexY8cO
      nnvxBX7lP/4+ly5e4Pt//w+cPnqc3/xPf8Sxl1/h/OmzjI2MsnX7Ti6MnGdmeop4Ik7vmjWc
      PX6S+/72K2w7dIhTJ09SfuIpxk6f5td//3d47smnOHPsJL39fTz+0I/4hV/5MOu3DCFdl3K1
      QkqmgnmWyxWWunrJx2LY/TGePHKUN79zF5s7HEbjea66apAzzxYo5ReYnxwlnkzT0TeAXSmx
      but+crMTOI6NMAw27r6G3Nyk17dBra3rMDw1zU0DA/zRH/0Rf/mXf8nU1FQDzh9FuVwusAZU
      +YwwrVvTzz2HNmBnk9jVKuViiWKxzGK+wvMXSpSNemexcG0GUg5r7Em6Mgl6ezqQUjI9u8js
      YpG5KuRcEzuZgWQG2lD0aj6AFg7U8N9hWEe9GKt1vOkMNsrBGQgZv75P1Mukz0FnysIv82yZ
      Vl2bxFgTBqon0ajrttKywj4InXRmHsaoG5yWoj6hTLUJBPwG7365jJCgixpHYEG1WTLhXxpJ
      6ddsonVrxDAJIchkMiwuLa06+lRBknophZoQMHBkfbhwsN+EqBMCSnipblFXwjfSCjq8XAGz
      f/9+HnnkESYmJujs7AwUjDe96U08/PDDJBIJXn31VWzb5iMf+QgHDx3kQx/9ZarlMnsPH+JD
      /+7X+OG37mdmcoq9hw+xOL/AwuwsF/NVttx4K6lXn+f2t72FTFcnLz79E958x22IWAzXEIyc
      G8YWBi+/dozzZ4Z51wc/wNbdO/kf//nPSHVkGR8eISYEKS0U1XEcpOPg97TCSiT52d/4TV54
      6J8oLC3SsXYdg1cd4I73vZOnf/Aoia71dK4ZJNPdz6WTLzJ69Fm61w+xZtMu7HKR0aPP0rVm
      I0IYrNt6AOHaXHPjfiobN/P088/z5JNPcvDgQbZs2cLU1FRba+o4TiAwenp6GpQ2KSWOKehd
      39i2suvoGR56ZQY75oe3Spe9XRVuv+ueBoVzYEuNT5VyeRbm5pmZnWd6scBCBRZdCyeWiFSi
      rDAj0R2napDh5KBwzLxlmth4WGg7mzAMqYCfwNTk2DCFfRS6lRDGSQ0F+2jaYFjAtLpfM7hH
      n0dYeIZ/162qsO9AZzBKCEgkaPxCwSBCeFnYujXw/0fy4EQ98au9+WYyGfLFArKNGPtWpO99
      VfLYe/5u3b6ts9ii9ineM1XlRi4Xq48aZ7NyJysly7JYs2YNX/jCF3jve9/L/fffj+u6/Mmf
      /Akf//jH2bBhQ5C5bBgGLx09QtaP+FFQi/ARhK/89//Jz/+bD1IsOVxaKJDo6qGS7uLl02N0
      mxeYn5om09VJpruLb37x77jxzttxDh8k099Hdv16Lo5N0tvfhxCCrr5ekFC+OEkingjW0LZt
      TEMgndq8e9at484PfgiAc6++QqVU4tCddzO4Yw+vPneOKp5PZnDPdXVz37CrPgKpf3AH63tc
      9t95j1fC3oAP3OCds7S0tOK1zefzlEolenp66vpAVCoVsKL39s5925FS8sNXZ3FjKQasPG++
      5dqW8K1hGN66dnWyYYv3mWPbjA+PcHoih5VqrGxalwegKIwvNrMMAoYrFfZeD93oUE6YdCEQ
      lGluOrVGijLTw+NTx4UZpitdqo5dV2NekY6Rh6Gf8I9edyiMy+q+lCgrqlVZBqDeFPUxaMdn
      isqPEh6fK726+U7EPf93IkljX+nlKJVKIQG7srp2j8G9m1i84cJv3ufRkVDB73j7KZlMvm5+
      lyvxnFVi09vf/naeeuop9u/fT9wv1eC6Ll/+8pf56le/imV50Wizc3M8fWaE2ek5FmfnSPq1
      c0zLwjANrFiM737lXp569AkMQ9DZ38fJF57nucefoNC1nqV8iR/c9x3mZ2Ypl0ucPX6cVx55
      jOLcPKZl0rFxgPH5pSAE15CSm657A0DgB4jH43Rms03nv/XgIZJ+/kLfliGuvmkHCdFGuKSU
      pIwiu246FLyDZSvO6OhoEOuvk+M4zMzOMj0zw9T0dNN32nEcpqenmZ6eDsacL+QhZvHc40/y
      N3/+Vzz6g3+qO3/nvu3ceaCX7soMd795L/FkYvnxh8i0LAqFEp2DQ2TXDzT8iLGxMalv4iis
      MewgbWCEmjNVTwhr5nAMv0hB3Ri85h7NztNLPCtN2XHcoEqjjsfqpDay8j/ojsXlcGKdqTcj
      fV2i5hmuHRT2Z4Q1OMd1qPr9PIXwm9EYZhDKahlm3fGqPpMuUE0a+5v+70K2bVOxq7VkPLN1
      HLoQXqTFUm6J6mUKgLDA1gMR1Brrfh19n+oKgRCCvp5eEglPa52bm1vWD9SK1N5vJaAup4lP
      MpmMxKpV3wFV3kBKyXcff5KLqQ4vgWn4NINrOhnatT0o814pl3nyyRfp3n0gsOrtahXHruIW
      CmxKuXSvW0OmI4tt21TLZVKZDEtz84wMj/L/cvfeUZZc1f3vp+LN3bdznunuyUkz0igiCSGE
      CEIgYQmwkAP+4YS9/Pyzwf79WA9je61n+yfsZ4OfAwYDxgILmaiAQAHl0SiMNDnP9Mx0zunm
      W+G8P+pW3bqpwyiAvdea6e57q06dOnVqn32+e+/vFpqOpMikZ+doidexu38Tm9atJ5VKoaqq
      l5V88tRpfjw0RqA+zkpk7NBhTh0ewlDrEHL1OSXZeXbt7qLZVzLSNg22ZBZZ199f/My2GR6f
      4PjsPOlAyEsWrMskuaq/l0i40tp2aylEo1EARsfG+NZPHuT08ZN85Nc/zmM/eIBYfT3vuOU9
      znuuaeSyWYRtoweDLMzOEQgFCUciCFswPzfnEAxGI5iGgW0LUokE0fo6NE0jk06Tz+YYOD2I
      3LO+6tzzRqEc269qtYoCu6PtwDUe9CJsJFfBFeh6V5I16/4uScUqV8tZSv4+2rbjHCzGekse
      P5FhGsiUsnhWS7/3Qw3VpNYOqKSNFfo9qu1ayq1LIURJ2Ka7YCiyAoW+5I18gZIDJElGEXLJ
      jqFAEvRfUvzjAlRkMlcTVXXqQ19ssfdaUgKNUhpcUP69+7d/rpiWRYBSWHWl/avm0ynZNZfN
      udezw5AkqSbXj6qqJcp/aGSUIQsUSUJSVWLrNzMxN8vMi/vZvGMjkboYw+eGiPVucNorjIeq
      aQ5h3swocjTO5IUhWro7icbrMW2bxXQGPRJm685tpJMpLNPEjNcRTOTo7ujkpy88RywQYvcu
      B66ZnZvn6w/vZXx2nk2XryfevXSxl3wywbkzM+S1ejQjgYTA0GIIybcQCEFPu16i/AEkRSWZ
      N7wxGJuc4sT0DMloHLWtE79dnonV8czgKDsbYnS2tlboOl3Xvefa1NjIgaf3cPenf49wNMJ7
      7ridr/3t/0fX2jXMz85x9Y1v575/+Sq/8nuf5MFv3U86lWJyZIy7f+c3eHXPXqbGJ5mZnOQj
      n/g4xw4c5OBL+2jtbCeVTPKRX/84X77nb+np68XUY+xas6HquHhRQEtBPd5PYXuJRbawkZEL
      DkocWuhCOJwA9FVMSD9MU81KKrH6ff2xyzBZl1vEti3XIVF5DxSVqv9a5W1Xu/4bJdUWWL/C
      LxeXdySVTjkLlnDGWwCyIlXFn1+vU/BnJe5zFQIUeWURTKqqksvl3pCFr9w35f7uzQ2Kjt6l
      xtfZCZglOwq/Ul9KhBCYplkVRnV/ur4J/yJxseLCPcuJbdu8cOo0cqyh5PNgQyOirp5DJwZp
      i2hMJA1C3QW16PZLCLKT42zf1EcsXu9AIsNjjJ4fKZpyMQAAIABJREFURGluJtTQgGRY1NuC
      aL1D9zB3fpjrr3kbLx85SHBNO6mRKY/c7W/vfYQzUzkgyIG9A/T2TtGza1shWaqs35bF6RcP
      kzIDIEkYehyEhW4kUGULAw1TChINmKy76m1V7z1hWkzPzHB0fJL5UBS1pQO1xntHUwuvJhaZ
      OnOWS9b1e2MbCoUcjqpCzYZAIEBbS6v3vaZpCOEQzRkFf0s2ncE0DI7tP8htv/SLjJwf5IWf
      Ps2xAwf54Mc+yszkJM899gT1DXE+9Ksfo3/TRv7pLz6PZZjYls3adf3QWHtxLHnqtawbt9KU
      VaimZRe2wi6RW3kb7nZ5pYrTWVwEeTNfswZxecyzJSpfQCEElrBLnHK1nK5+HN89rhaef7Hi
      h85qvaC1tvX+5xANRxCFPA2XP8UVr9ygEB52vpKd1M+rOM/E2d2sNIxT13XyhVj7lbVffObl
      kI+bpFiNFNGZp25U1tIhvYAH47nX8vuNluqfaZolfasV77+Uj20l4sCv9rJEb+6xpwbOMaNX
      L2QiKQqhrrXMBhoIda1xT8JNZLEtk7hseMpdURTa1nbT0N+LmTcZP3aC1Ow86QLun5xfYHt3
      HyNjY+SjARLj01y1YxeTk1P8zTceLij/wjijc+ZchkNPvEh6Zrq8a4wdOc7YLKWGkqSQ1+oR
      apAr37WL3VevYd3mdtQqYyFJEmOZHA/v28/Q/CILI8PLjrkaq2M4EmfPiVM0NTXR3t7uRQL5
      oxF716zh1SefZW5iisnRMcLRqOdb8vUAI58nk07T1NrCFW+/FtMwyKTTRKIxrnv3TYAvGVSW
      aW5v43c++8dMjIzy1APV8xeEECif/vSn/6wc1yw5CPBHPxQtJOdbbyDKrBBZKkJAyw2W5zi1
      HcuvGnxUbulIktu3oqIs2Q34yObK0+QrXnrfgvBGiYvJujh8Ndirmrg+Ebc/siwTCUfIF2oY
      +M+SJAmtkNvgZnArF5ls9PMgnrKrwn9US0KhkEPTXCiIvlz7lm1hCScz3LKLBIHe/EIqbB5L
      gxT8c2Q1C3q4EHnhr0pW655cA6TcCPO3dzHWfi3Iyi7stkKh8LIGg2EYPPTKq8zOTKMGg8hq
      ZZ1eSZJQCvV7JUkqvqRAavgC27b2VyRn5U0TJRol2tJMdjHJwoVBNFUlkrPZ0NvHvnMn0UJB
      1sWaURSFe772EOdmDUDCMg0uHNrD+NnDaMEIthpn8sIYusgQLUQRLY6NcWz/CJZUBfOXJEyh
      odspOrdvJTc/S7Cxqer46vEGIh1dhJqaSU9PEm6uDN2saF5RyOpBlMV5eru7S3So+/vGjRu5
      /9+/yfDx03zt7/+R3/wfv870xCQPf+8HnDt1hlNHj/GeO24jMb/AycNHGRsepqmlmXhTI4de
      3sfk2DiRuhhGLk9zWyvxRufz5vY2vv9v32JybJJwawe923ZU9G9qeAhpfHxcuJCIXzH6rWVv
      UvrGpWIr67s5IZzQUEUu9QXUmriu0w+Bc17hXy2FXP5iujHyQjjx45ZVjKGvFr3xeqx6fx+W
      6p+/wDmszE/gKg+zUBvBFjaaptEUb2QxsVhCJiZwyLDc0Dh316Uq6opw85WIX5m9FTsK27a9
      YjqqolblivKLLMvU1dUxMzeLJJZXju4CYNoWllnM92hsaPQWUNM0MQyDnJFHKexAvN2scPxg
      tRaAcms9GAgSr6/HME0WFxZKdqHVHLZu9Fg1qMh/3moWAHc+CSHQyjiu3IU2Xh9fcqyFELx0
      4CBPnTxDbE0vqYkxrFyOSHsnesGhuZQY2SzHDhymORbkkvWddK7pQnbLZdo286kMhhBokkQ8
      HGT82Gluue4dvHL0EEp7I9LUIlv7N/B/vvrDEsv/+PMP0bxmI/Ut3Rx99gdsufZWtGAEVZHo
      bJbp3trHyZdPMZOSMbIp9FAUWVGxLZN8JoUWihBW8lx6wza0aIyp40fovGQXsqqRWlhAlmVC
      sVjFeE8fP0rzlm0rHn8xN8Nt2zbRXaNcpBCCmZkZXnrpJR786ZNs/8CHyIwPc9nurYSjxaSz
      XDaHUoiyAsjnHKNHq8Kd5H7/4vP7qNt8SdU58+KPHir6AKpu6zzrvtjRmli1h5G6fxcVSHkS
      VFXLQVaqct7kTaNQCEVeiqYOywfZuIVT3Gsvp6xrOdaWkqV2C37KBb+PoTy00U/p4B8rv38i
      Fok5x1WJzHI5jVzFpiw5RqsXu9AugPY6ceblxMX+3aSplRDAhcNh0um0N4aqoixJ/uYoWMfq
      d6i+VYKBIFohvNGNFFNVlVw+T87MOxFIwoHaDB8uX/Ue8ClqWfGogVOplKNsheM8Lb/vWn6B
      Wj651TwHSZIqEthcCQaDRMLhZaG2dCbD06/uJ7xuA4quU9ezFmFZJMdHSU2MEm5tJxCrq3qu
      EIKJ8+fJdPQxpCgMDSzQcepldva3093Xg6KqNEbD3n2l5ha4evsuJqYmMWMhshMzXLFuM3/3
      1fs5O2lDIbnRtiyMXIbmno1IkkTP1quYHj5DNjlP7yXXMTgus+ehv6Xnils59vwDROqbySRm
      2XztBzix52FCsTip+Wk+8lu/yo++/lXqmppZnJ5iRy6Pkctz4fhR9ECAaz5wG/HWtqr3ttLx
      tyIx7n3sp9x42S4u37a1gl9JkiRmFxOMaiEu+egvISsK0fBGxs4Ps277Ju+4QFkYqB7QvTFe
      nJljbnrGIbPUNFRdBRvUSF3N+SLhiwIqn9iu8nKLtju4lF0zYcuTMiipxIEmiiFr/mv5i5yU
      NiUK7JY2klRZcwBKY+H9ffcnq5U77PwLgn+n83rEb91VI/wqv06tl9utoYskEQ1HCRaKh5TX
      j/VDPUII7yX2Jwe9HnEVsgOLrCwW//WKVLgnYS+v5NyCPvl8HlVRHL/BMky2lm1jCcePoqkq
      kXDEW6jdnW4ynSotoSkXagP4xt+FGD0GXXeRl5z6wIqiEIvGCOg6iWTCI/WTyvpT/m4sldT1
      euap4ycqHRuX/HAlfpZXjhykuTnG/PwsWjiCpChIikKsqwfbskhPTpCeGCfcVrkQ5FNJxvNA
      tLDDiNUzKuoYH07ScvYVLlnbQt/GPmRFwcjlaRIaTQ0NPHNkP2okxJb2bh57bh/HJi10YxFD
      jWLLOrZtenATgBYMO9QORr4A4UHGUlmcHkXVAsTb15CYdXiAbNsi3r6W1MwoweYGgpEw7/vE
      bzA1PMTxPc8RjjegB4Psesc7qW+pBvWs7hkouo4dDPFaxuD8c3u4eecOmhodiulUOs3Trx1g
      wAKloakYz6io5Jehec6m04xdGGZ6IYMViqFG6p1IQUNAXpCdn0OLxGqe33fJztIFwA+XuAPr
      bo3dSSxWkdJeLd69ltTegUiIAtRjY5dsY10pfyncOOzye1luN/BGyHJsj36Lz33p3b7Z/oWs
      AKPZtl1Z2lCSUHzjUK4c3shFAPB2Gm+m2EIQCAbIZrMrsv5DoRCpVAoo+JtWEAIvS1KhYlt1
      I0WSJMLBEIZhoGs6iVQShBMC6ka7yYX4cTf3xK8M3PY0TSMcCpHL50ml097zUeViBTPDNBCF
      nQUUI9OqSfmue7W7APdcIQTT09PE43FisRi6rjM3N+flAJSLEIIDBw9ixyNs6drFkVdeI3/h
      JLlwnHCbw/MvKwrRjk6EbZOemiQ1PkawoYF8Mkm4tY3RcxcwGzor+xKJMRGO8sRUhubBfWxt
      i6ImM/zynR9mz2v7iLQ1oU4nyAVNHnzxDEJSyWkNaGYC2TYQahgjm8YyDRRVY27sPLHmDnKD
      i4VnIpAlZ4m2TAPLMOjceBlaIIRtGpBL8K6P3ka0sQnXgSpJEumZaa7/yF1Mjwyz7yeP0L/z
      UjZfeVX5aK567J2MYoXZWJz79x/mqrZmoqEgzwxcwKhvdMJqy56pXgXasW2bsXODTE3Pk5YC
      BFvb0Op09CrzITM/h1rlubrS0t1TGgXkt2L9ohaScRS5gM0vcbPuNhhqRxWtVFwc3A+LWML2
      fATVdg3+/vthoKUsb6iEbS6mv+XXdsXvR6l2fa9/Zd8lUymSqSSptENvUN7X8mtXbfMixfay
      jt987N95RhaGYZSU6qwlbnLVxfDrCOFUolJkBcMwqmZry7KMYRrFOVfA0N3qbN5z9gUieLtb
      SSYWjWHbNguLCyXXtQrz2Ymoc6Coahnj1SBS95m/nuS+XC7Hxz72MZ555hmvTOGHP/xh7rvv
      vqrHp1Ipzs9OMjE0giRJHHj5FTZdsplta5owz58kNz9X7LMsE25t4/jRo9iGQebMcZ775y8y
      jl41TNm7z2CY6YYu9k9kufWmd3F+cJBcRCc5OsnOzVv58nefImer7gkYagwhKQTMBXq2XsnB
      J+7j2HMPMnH2EI0dfQSjcU6+8COOP/dDLNumvqUb2zKYHR1gYuAIoVgDiqaRXRji9OEDmPm8
      j8pCRrIsXnviMV59/FES83NECiUfX48IIVCDQYxkwpkw9Q28sJjm0ZEpzHhTaQ5P8SS0QPFd
      MPJ5Th4+wd69hxizQ9C9nkj3GhQfPUa5WLlcVfoHVyRJWl1ReBdqkKUaTJ6FbW55purFOrCg
      EO9eUH6SrCBTWR+gXOn6E2/K4Sf3d/+5btUjy7JIp9OYpllwqCrY1uocxuWLR7nT2e8TcPsK
      jsJ18XbnOBnbtjwr1/dFsSxn2XXfKBEFZ6ckLV+N7Y0SG/BKjC4jTrz0xS1ukuTM03w+Tz6f
      R9d1FEXxFh/TNMnlc+TyRSewLMvYluXtkKvNPVcCgQC6ppHOZArBCJJzTZyi8nZhPpfTk7jt
      ur6I8uCFi9nRTU1Pc2FsxDvPMAyuvPJKDh48yJ133smhQ4fYtWsXAIODg3z1q18ln8/z0Y9+
      lM2bN/P5z3+ec9PjzExM8unP/z/kc3m+9/V7mZue5t2/cBuaucC3v/AVTAE73vFObNvmxYcf
      ZH5ygrXr13P48GHilkxs3VbCHd1ceP4pbNtiw823Eqyr58QjP8DMZsG2+Orn/jfBYJCXzx5H
      CQXZ1buBBx9/nrMzTsSPd++ShKUEsSWVzlabpnd9lLxhcO7g8yxOj7Bm+zUY2TQROQeyiqGo
      XHLTRzDzeRRNR5Ikrrrp/Vxyww4iDY1Issz7f/OTADR3dnHDL/2qU5j92uuRVQU9sHSIrBAC
      YVnOLiOTJZ9OYhsmwrawDCebXVYUbMsi1NSMW09X0QOgV7bl3qeVSRMo1D6eGZ9kYGgKrWMN
      0aaVZXsLIWAFiYcVC8BSzlJXMSznUPVH8Lg3dbFKxF9jwKVGlu3SxJhyhQuVFbfKfQ7ucbqu
      e3HQiqKgaRqz83MgrCLF9Qqdw9UsuHJ4xr/Lci1HqxDj746tIisF2KvyGo5Srj4J/G36pdwB
      vRKRJKmqz+VNEQkQAl3XSafTyy46kiRV+ERWfqkidg/FIu/ZbM7ZaQnbqyXgOoTDwSALi4ue
      peZ/UW0hvAg0JAgUMj3dalHOCbKTt1I4t9quqtyHVO371YgQgrPjw8Q3rPU+M/MG6XyONk1j
      dnaWhx56iA996EOcPHmSpqYmPvnJTzI/P88Xv/hF7rnnHk6PDPKb//cf8cQDD7PnkcdJzi/w
      oY/fTWNLC/d96V/5+P/8XX7rD36bgaMnuf/f/4O7//wvWLdzF7f8xm+TGRvhsmuv5uO//7u8
      /NSLDMgywffdRmJijLNP/pjNt/wC+WSCS+/6NYbu+wrrerrYf/wotizRG6wjlcrwwItngepG
      o5AdSEg3F1F0jU1Xv9f7LhhQwbKxJZWAMYehxlB1x4Eq2wbrdnQRbWquOm7BhkbmTp+k0Yf9
      CyEwsxmsbBYjlSK3MMfcmdNYprOoIMvIikp2dob4ho2oegBZrYSq/e1VseA8BECWZbLpFGo0
      zMnDJ1iUIwS6+1by2H3XsFdOB+3vmD9ypkSxUgwnc1IABN5dSMUJrFaJe79Y8a/6siQ5yhjh
      0UaUHFN2D34ph0yqWVZ+1kdJLr6MblTRchanH9cvl2ovtAtrGW62qB+GKIWW/QPiFRrxX7P4
      teTlU0gSyOLiFLgkSahvIZW0y+PkjIm1bBiroigeM6VfVgI3lu8CXZ6lYDDIYmKx6Ix1jxWg
      azrxunpUVcW0TDKFcqJOhblie44vwrHcDSPvLQCWsEA4PggXuizfhVb7uVJx30m/s35+YQER
      KbVebWFj6QotnR089dRTpNNpj+bhhRdeYM+ePWzYsAFZlpmdnUULBggEHe6Zjp5uzp87x+Lk
      DLLt8FWdOX6SJx96hPVbN9PUVEcsMYmVTmLn80StNOFYFE3XueH97yRx/3cZeeYI2eY1mHnH
      uRmMN9Jvpdm0eyenz5xhYmqC66+8mrpYjD/9h/vI2crScLskkdfqUcw0urFAXq1Dwka1MuTV
      eme3IAJoZgLVAlMJE5dmaV539ZLjaeXzzJ455cCM+TyKpiGrKlo4QiAep72lFVnXK2FXI48e
      CleHdCofWhEaK8yFfDbLwad/im1a9K1fx8lFjVBPP4EVwKIVzZsWygrO83pa/vKUY+cIB9px
      XwpJckoVKrKMWgjhdGLQi1hlOVbv3xXUym70i2Xb3oICjsNMU1QkUYyZLo8Cci2oahaVf2Eq
      j8Lwnyt7SlbyFreVykqgCff+86bhy7HwVexaAjP1+yqACuxYkp1i9A5v08qzsX/mIkleBbPl
      +Jlq4f+WbWPaJqZl1WzDPyc0TUOSZVLpNOlUClVWiv8UFU1VqS9w42uaRjabJZvJ4o+QgmIE
      D4Cmak7Uli8QwYGdJE+ZVat+93oNJtMyS7Lvz40MES/jmRdCoOo6nZvX86//+q9cdVXRubl/
      /36uu+464vE42WyWg4cPO9w9xYFDDwbo3baJYCzK1NgkTz38KF39fTS3tZLP5Vm/fRPRgMLA
      ow8QjYWINzTw6gt7mZ+bY2xomDs/dgf9QQsMZ/EOpxb4H9df4VAkyDLvv+lmWltaeOCx5zgz
      5cS4LxXZ5YqlhjGUMAFjjoAxT16tKypXScbQ6jGUMIqVQY3EllSMkiQhaxrxtX3E+9fTvGUb
      Des3Ut/bT7i1DT0aQwlUx92DDY2k52aX7W+J+N7Ph770j8Rb2+lYv56HvvJl9K5e5Bp9LX+v
      y//OJRbRwssXrlE+9alP/Zk/FM6VapPSfSCS73sP9pGVZRbrUuhjZXS/juPNSc+XUJTqBeLL
      FwA/zu76HfwYqt9pB05EiX+RsEyTfGGSSpJT8EaR5CWVqV85L/VC+xc/yypyFpUuVLKzhSsT
      WZbRVLUYouv6RnzXc5YtZ8dkCxtRwBzfEijndYp7T4qi1HQ+u/TK2Wy24nm4HEICUchhqKQB
      Kbey7cJiIYTwfFjudVTFYZ4UQnjlEb06zD5/gKooKJKMIiuEQiHMgi/JOc5xDAf0AOFwiGg0
      SigUQtd1dF0vKTxzsQuBy23rLkymYTIwN0m0sZQlU5YkmtvbCAWD3HT1tdxwww1Eo1E6Ojq4
      /vrrefHFF+ns7OT666/n0KkT7Hz7NdQ3NhCtq6OxuZm27k4amppYzJk0dnWz/eqrObZvPzKC
      mz74fhpbmundsI6Xn3qWHVdfwfbLL+Xs8ZNoAZ2rbrieQ/te5fK3XcHlOzYjJRa487qrufry
      3TQ2NrJ27VoikQinzp7jyw/twxCrDD6QFCw5gKmEoNrckRRsWaejM0pDd8eSTZnpFGo4siIL
      2i9qIEhyfJRQY9PSXfUWp+Jn2VSKgUMHuPb2D1Hf0srs+Bix5hb2PvhD+nfuYnp4iJMvv0S8
      tY0ffPFvOf3aqyxMTdK2tpfvfeH/5eyBV5kcGmTNlq18/U8+w/kjh3jp0R/Tv3MX+598gpce
      eZiT+15h/a5LSxZ2ryJYKBQik8mUOFDLpdYWu9ya9r9ktijWRy1XwNXEr9RkSUaRC7zrlNJL
      uBiwH/f2O9KqVd9xf5bHfpumWRKDHQqGSGcyGKbhPjFPSVd1fkulmb/VfBL+cSlGhBRzKvxj
      V035S7JcwhJay7fiLiS2XVD+hXuU1Z9vbiBZcnI35GUI4PxQXcV3soKM8BlVpc/Kbwj4k+0s
      2y7smmwvgME9JpFIYFomhmnid73LSB4Drne1AvavFnIMhLDRdR1N1Soy4l3ln8/nS3bb1eDX
      lYydCz0JITh+9izNayqzTmVFoXfDOmZHxrnssssIBoMEg0Hq6pzY/V/7tV8D4PSZM6h1MXr6
      Hdy5pd1JhIrV1zn9RKK7QI38nrvvwl6cQ0UgbJt8Ms0n//QzTA4Nc+qFfdzwvncTKIQifuCu
      j3jj1Dc4zk1XOmUnN27cCEA2m+XrDzxLxrrIuVqYN5JtIQkTWRjoKmiahKpAOBIgVr8875Ea
      DpNPJavyAi19/erV+mqKEzIJQDqZINbQiLsqROvqSS0skCpEkpmmQTad4vDzz7LxiitZs3kr
      j9/7b+ihEH3bd7D+0st44lv/Tj6ToaGtjdt/9/d56fvfYfLcAJMXzrPpiqtYv+tStEBpMpm3
      AORyuRWxHNYSv+Iu+VwI7DLM3m/tlmPz/qxhT5mjlCi8atznfkVbHvHjV66qqhIIBLyon8XF
      RRYWFojFYp615zpibcmFJARCElXzJMqhpnKFUG6lu59ZllnEAd02ZbnUF1AmsiRVXLeaSJID
      N6iKim3by/Lp/zyIJDl1qVnG8Vye5FfehkQRaql5TMEwsSy7AuJznbq2EEhCeD4aCjsEtw0h
      itXC/P/S6TTRaJRooRjJUjQoiqIQjUZJJBIVhszFcPu7bcwZGZrVJZ65tDRUOT03R66+lWMH
      jrG2v8cjcANn/KMhnYVUHiRQJOjoXUNqfp5je/fR2NmGFtDpWt9PS3cXp189SCgcpq1/DZFC
      O4uT01yxcYt3j+579dBP93B6skj1cLHS3WSyZucWZFVDCQZRC1TX2YV5rGxm2fP1WB3pyQmo
      4SguF9s0MTNpzGyG3PwclmVVZPv6pdrYR+MNzIyNerprfPACW99+g3Oss60FwMhlmRoeIpdO
      s37XpZhGnvGBAYQt6Nt+CbKqIEkytmmQy1ucPDJA+/rLOPHaCZ79/g+58bbbaWhpRQ9oBCJh
      VL/F6LdCXq94CsoW1CrpVw7L+PFsdyEqJ3Jzf/eH5NWyyv1Obfd67vbb345lWSQSidKdgygk
      +hQegFtboBxGWEohV+uXY/1bFfckCg+51gK8aquw4DCXV3nez1JW0s+lFoDlpHSXJXzJXEXY
      zH+cjetjsb3dV/lC7y0oboKXYZBIJIhEIuhVHIX+nSjgMUO+Ub6aoZERou0tyx5X63rubifQ
      1IIhbI4MTFAnBunb2EeowEtTFw2jawqmZRMK6I4xlc0jcnk6+opRR3owwLpd28lnskyPjDFy
      5hzx1mY6A1Gam4owiWmaPP/Ka3z3yf3kpQhaDeWZTS0ydmo/WihCx4ZdKNUMG9uieW0n4SoZ
      vPnFBUJNy4+NLCuYZVm4tmVhplMYqRRGMoFl5B2L37JQQ2FkVSNQX09dVw+5xQXUZWAgZ9oV
      54YWCNDW28uPvvzPKKrK/NgIsYZGhBA8/Z/3MXHhPD0bN7H1mmv50Ve+RF1DIwvTU1z5vls5
      +fJLNLR3kF5cAAFGOsXRl48yllJQglGOHj6CrGpkbZXBdIjpORXJziOJbJEMDkqjgC52QpY7
      uCzb9rKJ3Wss9aL7t1D+BaDacVB0CJY7gf334X6vKAp1dXUe/7lpmiwuLmIYhletx10MFxYW
      PFpedx2QJMdKVxV1RfHxfkXlHuuGHVaOr4QsL5ENWnCA+8d3OfEruP8uEg6HsSzL4f9fpbiL
      r/uMvXDPMv+Oi9u7PgWtsGvMFSinl/PvuPNX0zQvrt+/E3V/RiIRAoEACwsLJYmCF7sDME2T
      l08epaG/Z8n5MTs2znXrtnkRQH7JG3n27nuVo2qR9tm2LLLjIzSoFv1b1qNXgUYWpmcxcjma
      u2rj67ZtM3HiLB98x7tKlPx//PhpHj10jlNnp7CFTEs0VJEFa5kGBx79Jhuuei/phWlmx86x
      9boPVlxDNVNc/Z5LCTY0VBhYs6dO0LRxc9FBXEOEEEwdPoCMhJnLIKsqsqqhRaJo0Sh6Xb3D
      hlolr8nK51kcG6Fhbd+S7Xu/464FEsK2WZyZIZNK8uMv/xN3fvp/E4xEmRsfo76lBVXTUVSV
      fDZLamGeaEMDmh4gn82SXJgnFm8gMzfH0cMXyEeasQuGprBtMvMzBCIx9EisxPGs1rKel+r0
      clJuKZXj4LV8AH5opxzXX6qP1eCgateo5nx2k4Dc7bt/MXQOcuohAOiatmzNkWrXda1WW9hY
      ZmlkjhCgKLJn/S8llrAR9sqL7bzZyt9vRb9VuwzTNNE07aIWAHDwcjc6ykmokyoNHuEsAgEt
      QDAY9AwGRVEqasL6xW98ADVrW/ilGkx4sTJw4TzRrtZl23AdxtVEcuEvXxuyohDuWkPWsth3
      8AwtYZXeTUVqZyEE0yOj9F+yNENmNpni0vWbS5R/Lpdj75kxcqkUJipIkM7lKxaAubHztPZv
      p665g7rmDmaGT2PkMpw78Cwbr3oPEwNHCEbr0cnxwJf3omg6O9/xTpo6OnjiW/eiKArdPT1o
      zS3859/cQ1NnF9Mjw3ziL+7hx1/9MvlslmhDAzfd/SvIskzrJU7lsbmzp4n3rVtZaCcgaxp2
      oW5xLSnuQMFvpkmyTH1LC/UtLdz+id8k1tgIAtrW9pacHwiFPL+KEAI9GKQx2A7AhaFxjEiz
      E1WoqI6CkRWize3OMy177t4C4N/Slnd2pZBQOSSy2t1E+flumvxq6RmqKWH35cxkMl5FHnDI
      xFyctiR5x2vLsQD98fdAzZe2/H49y9+2MV3c3yeK4kRPOfVml74vCakYirvEfb9eRbISERSp
      DWRJXpa6+Y0SwzAIV6m3WkvcRcouQHmSJKEpKkIUCq+4aWGSVBh/J9osGo16ytw1EFbyHqx0
      7DVNQ9M0zwm8mvtxr+MXwzCYyqVoCi4DPeAt4GEPAAAgAElEQVTseGrtMNzw12oiKQqRnj6S
      hsGrB87QoJqoqkI+kyUYDjkkfkrtuakkMvRuvKTkc03TqA8qnE+kAUdhKUoVVuBsimCk6ItQ
      9RCWaWBknUx508hjWSbD549y2yd/DT0Y4pnv3k99UzNXvvcW6ltaeORf/onNN9zIup2XcuMv
      foxH/vVfyKZSLM7OcOX7bqVn06YqFCtOFvhK+Kmc46Vi5viK3olKM83IpDGSSZIjIwTicRRd
      r1p/wb0eFOdFZ18Xk0fHMPXoiijr1GrEYeVKfKVSDiW5SqK82+Uvift7uUPYv4BUi7BZSX/8
      ET/uP8MwvJe6vL3yF2MpZzNQ4l/w/+2/L9OysLE9S9lV9kI4GL0DFS29t5CkpWkZyi3JN10E
      uNFK1RLd3rTLFp6hqqorygZ2n5ciyV6Cn2vN+3Mq3DoA+XweVdOwLKuk/sIbJZIkedE3li9c
      dCUihOOUVmQZpSxRL5fLIfTlnf2SJEHerFhEbdsmmUwSi8UwTRNL5DAsCz0QqFBksqYR6l7L
      wvlTXPk2R6GfOnSE88dOEG9pprFK/sHwyTPcsG1XxVyRZZkPXbmFfa+dQrYlQppCtAqBWaS+
      iemhM7Su3ezcbzqBFig7ToDILnLuyGH0YJCtV7+NgcMHObl3D4GAzs4b3+WMgezqGwVZUfjA
      b/8uJ15+iZd//CM+/Kk/QvWVldSjUfLJBKGGxmXH1jsnEsVIpQjUVafIBjxr3K9NbMsiOToM
      QMuOncwPnOXIkQsEAhoBVSIUVAmFQwQjQcKNjejRWIWuDje30BIcZsz2QUtL9FWFSiXmdXAF
      Us36dXFPq6AghPdf4RyKdMbVRAiHFtmybST/eSvskz/xzIVflorGcI8VFKtCVZPK3YGo+rt7
      He+fECiSgpBdvp+isnfDQZdU/rJjYddaAP1+jtUo/9UeX36uoDrV8JstlmV5vD3LiX+OqarK
      8Ng4L524wHwqQzKbJ503yJvO8mwiYdgSrVGdT3/4ZmKxmMPl/zqDItykM03TPKevq3BXY2AF
      AgFEnopdJOBwF60k81OWCUpKRZTKxMQEt912G9/+9rfJWjYzF87y7//nL/jQH/wR63buqtqW
      qQTIZTIEQiGe/sljfOIP/y/mp2cYOHSUtt41ROpiCCEYPXsOK5fnqSef4q677gLgO9/5Dnfe
      eSeSJJHPpAlHGwmI2iUu61q6GDz6EmdeeZzUwgyxpg4UVSO9OMfAa08zNXiCTVfcxKVvv47R
      cwO09PSQTSbo7evn4J7n6N62g9mJMXo2by42Kjm+hed/8D1ijU1VxzUQj5McG1vdAhCrIz07
      s+QC4HWhsOtMT02STywS7egsErjJMka0DUOWSQIYwJyFNJNBGzhDTLVobIxQ395KyFfJrKu/
      i8njk1ha2L3NGteWUP7wD//wz/wfVJNak9RvQfmP8S8ogjJlKDlcLG61sPLIGsBjTIRi6OPF
      0hv7w03LryOE8Mri+cv+LZWluZzPxN/XahQUTk1f58EXI5mW9kspiuLV+a22aPohr5WOlesQ
      fb0Y/ltFFucXWZbRdX1VfoDh0THue3ofPzwyxumEzUhaMGXIzNsaCXSSaKTRyEkqc6bM8IXz
      XLVtPaFg8KL9DYFAgEgk4kWe+WHH1Sp/VVUd0kJFwcgbFWM+MztDNqCgl8V5+0UqOBrDeZvO
      9lJn7eLiIoODg4yNjaE1NnNqZIzk3CyRgI6kajzznf/k7MH9dPT1YwvBq4/9hIN7nmPk1Cl2
      XLGbvU8+zYUzZ3nluRe49LprGD57ju987Ru88MSTbNyxnUOvvMoP7/8Og4ODmKbJPffcw/Dw
      MKqqsveV/Tz640dYmBikoW0NRjbJyKn9jJzYR2ZxjvrWbiRJpq13C+H6JiINrUycO0LL2s20
      9W8jGK1nzfZriEbCXPne69l45dWENIWuNWvpuXQ3m666hubOTjZctptQJErPps3IisLabdsJ
      hMOs2bSFSDzOpe98VwX5m6yopMZHCTcvHz3knaOqpKcmlk0IAzAzGRbOD6BHo0Q6ukqK2s8N
      DjNnlj1PSQZZxVKDZOQwsxmZybEZZs+fJ78wi2ybhFtayYwNk5bCFXqsXKdVcAFVk6WgID+0
      4ldCHhwhl/LeQ0UEVMm1XSWpSop3rtvmamQpBe5i1/52/Y4ZW9glW+zloqOq+U3Kd1PFxQ/c
      HcCKIDbJIWWrpfyr3fNKRVAIO1VWlnJffq23CvcvF9M0veztlVjnh8+c5+svDZBDBUmraun5
      RQjB/lmL/3zsOe6+5UYURVlV6KmqqoTDYc/KdndoLgPpxYSxmqZJJpPBMCqVPziFRfS25amL
      s6k0HfUNVb/r7e1laGiIxi3bGTh0gI1XXk1dczO5qQluuvuXmbhwnj0PfJ+rb72N80cPc/37
      3s9zTz/Dow8/wfzMLB/+xK+STqZ47rGf8q7bbuWu/l6Si4t8/xvf4u677kLPmnzuc58D4PHH
      H+dzn/scuVyOB594gbe9/UZEYpzkxD62bF1H6uwUG65/D68+9TAIG1lxdjfBaJxgNM6umz8G
      gKJqHhQUlvPo4QhKIEAkEiPe5ySrBSMRgpEiLYIqO0rWdWIHwmFaw2tqjpm8VE5FFfHedduu
      6Ty2TZPEyBCSrNCwbgOuFSjLhZrUQCa3AsJDWcYMxFgkxmIGBs/MEzh6gbDIIAVCCL12PQDw
      LQC1InOWkmqQiEAgU8y2dBWpm5bvEGJVr1vrD+d0pZZzeiVSHpbn901UO9a7JmW+jLJFqPwz
      V+HXWqz8ilkU4J4VKS/fLmKp+/f3YTXQnSorhcSnNw7Dr+YAf6PFDc/VdX3JqByAmbl57n/l
      LHlJX1bxl4gkc2hoio8UQoSrKW13fvkXfE3TiEaj3vzP5XJks9mLTrD0y1L3ms3nV0Qalk+m
      aVzfW/P77du3c+TkSWRFIVjwE0yMjnL0yBE0XccskPDFGxsxQhFCjY0sNneTkAKMjkzS3taE
      ZZmcP32GvU8+TUNTE5ZpEtYCVQ2UQCBAT1OI4NQUQ7k5Wte2sunynUSb4+y+5mrmzz5PREqT
      FVFssfT4BQNykTtnGT6p1Yh1Ecyziq5j5nJoZf4MyzBIT01iZtLEuntQA0GPXLNoKBa4zpa5
      32piayEyWggjOb0ifS670McbIa5itXxtOkrdBttGphQzLlewS+1AVt0XX7t+RWvaLjOjQ63g
      h33cojdLQT7VlHv5YlCzT26lInl5y18qOCp1VVtZHYWL0C2uY/mNFFs4DKd+YrI3QxYWFpmY
      ml42Xv67LxxmXugX1RdNllZl/UuSRKSQASyEIJPJkEwmvQXrjUiwrCX10RgzZy4wMzxKJpmq
      er+ZxQT98RbqYrXLBH7wgx/k4W/+O+sv2+19du70Ka75wO10rt/graHJ+QXU9iLdhBQKMxpp
      4/n9p0jOL7LvuT3ceMt72XbZLizTdPo3M8PIyIhXh+H48eMkk0kOHTrE1kt30rF5PVqh7q0A
      6psb6e7r5mN3X88NlzbSGFgaiptLKRx/ai/JifE3dO7p4XBFYthyEm3vJDU+imXksU2T5PgY
      s2dOkhgeJDMzRcO6DagFuMmnbUraSCfTF38ftoXQasOBrih/8Id/8GfiDbACXTxdkpwbsgtA
      t+Ptxsuk9Fuc/gSZanBILct2OSvTtb4sy/LS9WVZ9jhf/KnwLvumy31fnjnrv1Z5EpZf4S+n
      /P3Vpcp9JuV9VwqEbytV/nZh7GvVCXirRBT8KUjOHkpehiDw9VznkT37+Pre0wwODdEYVGhp
      bvIcrZlMhumZGfYePsVzYxnsQibfag2JZs3inbu3LxsN5D77cDjsVTQzDINkMlkRmbVamG6l
      0hCP093SRlMgAokM6ek5EnPzJBIJtIBOLp2hS42wad36qufLskx9fT318TjHp2fZdv0NaIEA
      0YYG2jo62f/k48Qam+jZvIWgKiOaWom1tqHqOtHGZgLRKPVt7Uh1DaRyFoopOPbKy8Tq69i4
      bSuX9G+gr7eXxx9/nG3btrF9+3YefPBB8oaB2ljHgWNH6O7rpX/TRlra26iL11PXECcQCtLV
      u4au3i76e5s4fvgcJjUYMiWVRFpi8vw4IjVH49qeFYZiOslSieFB0tNTZGZnyMxMk5mdJj0z
      TX5xAVlT0aO1F85ykRQFva6eqcMHsXJZAvVxou0dhBqavCJXlVxDUgEJcnTh0OkhTD16UfNF
      Sc9jh0sT/VJzU5x/+WnS8zPEWjodLqvBoUFh28JThBcrlge1FD/zwjelolPUEjaaqqGUQSB+
      SKQ8nt0fxllxo74H7Crn8qxKtx3DMisG0138yvHsavBPNQpm/3VriQsV2LZN3jCoRvbmtaUo
      BZrt2k7f8rZN2yrsrH62hG9u9JYbHfRmLEhCCF4+fIJvHhjFVpzYaM022FjnzJ+JxTQ5VHKy
      jiWpWK8DktoaNfnML9/O4uLisseqqkosFvOMj7n5uYqkv2qBAW+WSJKze8nlc0xOTREOR+hd
      s2bZMTh1+jSPTsyiBovQhZnNkJ6aoq5njRPVc+worF1XtS0hBKnzA4zojajZJDsCebau6+Kq
      vk20t7VVHPvInmeI93Wv+Nm88uyrPPPaLFUZP4sN09ep0NzVRKyr26m+tYwsDl0g2NDkUD27
      H3p9EsyfP0fj+o0r6iM4IZ2LQxeItneUjCWAmcuRnhynrmdtscu4ekYuMAIIRo4c48ycgnQR
      XF7q7CBmY9GvYeayvHL/P7P9lruYHx4gOTPB5nfe7vgAJKnoArwYp2tR0ZZ+7jmDJZAVucg1
      ZFkVlmH5i1J0mjqxzxLL16f1l9Krtd32hz66v5fDILXO9y8m7u9LhbK6P0vHVFCL7hkKRUNW
      ofzdSlM/a+UPrmNYfVMpKM4ODnP/gSFsxbGehBDkJZUjCQAZlNLQu4u2toVgXWt8xfBPoBB9
      Y1kWM3OzXsEapVAr462OlBLCSXRTZIWN6zesqNYyQCKZ9KAJV5RAkNTkBEowSD6VxG5qRalx
      PyKbZSYrEBEdQ2vkNSE4+8oZ3rZ+a8Wx1YI0lpPL3raTE6ceYyJVQ6kLQWM4R/9V1yKpKsnR
      YaxcjnBbB1o4XPVa+WTSsdij0RpNOmUfVypmLkdi6AL1feuq7kAUTcOs2FW6eQFOlKAsSXRu
      2cTks/tIKCsjpSsRuXTRGD9xgL4rbyTW3E6suZ3Xvv9VbMtEliWHY95V1m5IZLXSj9WscHfb
      X+sZurCPZdledS33vJI2yvhS3N2Cm0i2GoVSDhu5k0wrOJ9LdgeiWJ1rKbytXJHXKkrvRnxU
      a9OtayDLlbsQ955XyvXjhsq6i97Pizgw2puj8KZmZvnac8fIKauk6b0IkWyTdZ2tKy49qapO
      dnE6ky7JKBc4i7SgsjLdWyVCOGy/y81v0zRZzOYqYpLNdIpQQwOyJGGk00i6XrONxNAFMnFf
      IpgksdjUyenzF6qeo6/SulVUlRtu2IoqKivCAQTlLNuu24msObvDWFcPdT1ryc3NMHfmJAuD
      5zHSRWxd2Dap8VGiHZ1LXrfafHYduvPnzpKZnXHGOZEgPTlBvH99bfipGmzt/icKdOYSyKpC
      3/pO5PzKkwWL7ZU+61w6SbCuGP2lqDpSetHZAVi2U4rPbx3bdqFQhVcCplhww4+VuyvWUu+7
      JDlZo7avLVfKFxX/QMuS7A3Kqm7ep/hNyyyx3BVZQXIVs8/68N+738r3/70SpbaUo89dbE2f
      NeFGBVGwnv2sk+Xi749tF5zX0upDOP8rSiqV5utPvcYCb77yB9Btg7WdbStaAPxlHnO5fEUN
      accIshG28HxNb+WOQJIkb4Fa6rqJRILpRBIaS7OEk2OjxPvXO4SEsTpGBs4ir+mvON9OJZkR
      OpTDqarO/gujXLP7sorraxcBE/asW8O73pbgyNFhxucMTDnshEuLPFt29xKMl4a5yppGrNuB
      Q8xshvT0FGYmgxoKISyLSHsn0hI7aEmSEAX9aOVzZKanMdIpZEUh0NBA/do+MjPTzJ48jh6N
      UddTO6TUbU9SHBTAf10JV58KT8/Gu7toGZ5kwg4trWTLRNilO5ZYSwdzwwPEW9uRk7PYyTkU
      WUK1hY1tu8lIpQlNUKQnlpB8E6hYbck5dvkOOQrVac/Fhmvh+u51a33mV9R+KfcVuANpYyOJ
      Im1vtXOr9fdiXlS/g7fcT+D+NHxKRZJc5V+9oIzbjrsrcwuWUJgo8koihP4Ly6uvvoqqabw8
      OMuFrEZiZoL07BRtG3cse25ichQzl6Whp1JZuWJbZqGwi/NCCtsZ06YANDU2kkwml7yGqqpO
      aUnfDtpfN8AV93dL2G9pvWUohTSXmtP19fVYuQzJCwMEmlrRotHiTrlwT2ogQFhVyFtmBTa9
      MDREvmltZcOSxMmFNPl83oPKXFHk1c9dSZbZfuUOtu7eyuLsPAMnL3D6zCR6LExTX5Xr+0QN
      hqhzF4NMGjOTqQn9lJwXCDFz/ChaJMLMzAwDx46yZvNWNvQ5vpBwSyv5ZIJoV/eK7kENRcgn
      EgTqSnM3XMPTtkGSHOOwd+s6Zl8dwAgun+fhiQAps4hsZJEsg46mOK+89DjWxHlm5+bo2HE1
      dqTBqQm8tPVetP6rTejViCT5MlDLIJVqE9MP1fgXBP9nhmFgmmaF07Z4USrgoFriRg7VYnF0
      4R3/97WcxeV8M/571FTVyYVQnJT8gKY7FNPV6GVtN6zSWThdp68b9fPf3fp/6KGH+Nxf/jUH
      5pwd29nnH2Vo/wuAq9issgW/+Fk2uUB6YaYEivN/L4Rg4MUnSc1OIYRgYXSQoQMvIGybdS3O
      y+bOLShChf58FUVxCsr7pfzZ++WtfFqqqnqcSeWwaLm438caYly5ezOdahaGzzB7eD/h1lLn
      bbx7DcbYSMlnxuw0s3rtKJkpoTI1PVPxeSQQwrhYZldFId7SxI4rtxNra0DStSUt+XJRQ2GC
      K8jWBdBiUSKtrSxmc+x/9hkuf/d7uXD8KIeefbo47wosoN7fZXrC/VvYNmY2gx6NYfsDVmwb
      20UHCsarEIJgfZzuZh3sFfohhEAxMsgIrEgjZn07VryTXXf9Hh3X3kr/29/P9LkTTiTSSgfr
      jbIynRdQYEt2ibKstROo5nMoV+buqll+rCRVsmf6oZ1qf5efX+vvcr9FLUpqqCS5C+gBR4lQ
      VAi1LDNJKh5jFxS/i7P/LJyLb6UIIUhm8yyqUVILswRjcUCgBh0myOOPfx/btrDyOXbd/nGO
      PfZd8ukUZi5N++ZLCdbFOffSk0wPHMfIZdl9x69z8qkHMbJpcqkEW2++g9Ejr5CYHKalfysz
      g6dJTI2RnZ/mjl//GJ/97GcxTZNgMMinPvUpPvvZzxIMBhkbG+PjH/84V111Fblczin7WHCy
      qrLD+SQkPIoNf4F6h5XURuHNf3aq6tQ0Xs1ONmeZNOganf1r6exfi2kYHDpwAhGLIRV27loo
      RNAysUQxfHtubAKzubb1HUwtEAxWOm771qzhgUd/QueOTV7FsNVINp3hJ4+/xpBZRyA7x9ps
      Fnm1pRxXIHo0RnpykiN7nuOmj/0y8dZWbvjwL/LQl/6R5s4u5icn6du4gR/9099zyyd/j9ee
      eIzhUyfJppK8/zc+ybkjhzh7YD+5TJqrb7yJuUSC49++j2Akgh4MctPdv8z3/u5viDU20bt9
      B5e8/R2AEzwjIdG1eSOTz+8nGWha/llKEnYgihUq3THIkkKksYVIYwvNazeiW1neUo+Ui2uV
      Kz3XYqplNVUTr6g6S0NJ1QbLb6EvZREt93nNXUfZ9xXnF5pwCfGWssycOsgFyMz3+X935Q8w
      Oj7B4XOjtG29nImTh5g4dYi2zQ4xmayo9Fx2HQ3d/aRmJ7HyORCC7e/7KLs//JvMDQ8A0Hfl
      jez84K+g6kGQJHoufRsNPeswsmkEgo6tu9nw9vfTvfNq1lx2Pd2XXMXWG27h0i0buOOOO9i5
      cycHDhwAnEifP/mTP+FTn/oUp06dAooBAVA0CtykQtU3vzwopQAVWbZHRP2Gy+HDh5mfn/fY
      TY8fP8758+eXPc80TY4eOEgqUYS9VE3jkl2bkSaGsQvQpW1Z1LW0kD91FHN+jtz4KAvR5tpQ
      ghB0iCyNDQ1lHwue2/8a6oY+Tp8aILWYWNV9phYT/OjR1xgynJ1HTq9jYuD8qoomrVRkVcPM
      ZbEMA72Q3euQ7wlMwyCXzRBqbiWXy5FPJDj92j6uu/0Odrz9HRx8+kmO7d3Ddb9wJ9suv5KB
      M2cwTZPr7/gwv/D7f4iRz5NNpZEVlSveewvbr73eHSDvpVd0nd7eViRzZbulmjrJtoiYSa5v
      lfn0zZe8tQuAJFHh5FzOynY/8y8W7mflC4ULzyxViKMa3OQntStXyH4l73cm1+rzSsQ0zVW9
      /M64OX4YRZaXrAnw30naW1vYvb6Ld27uxJgaYvrscVr6twCQmp3k3N4nqGvrJtrUhnAT0CSp
      FAZw55nsVHc6/vj3ibZ0UNfa5ThrHZeWcwyAEMTIMzoyzMMPP8ymTZvo6OgoNFWZmKgWkvac
      U0vniBssochKYcemONisVEz3fzPkC1/4Avfeey+BQABd1/mrv/or7r333mXPm5ub48yJk6RT
      qZLPVU1j2yUb0ecnsE2Tp++/j8z8LN1btzO270XmT50gkEkgGdWVk5TLsDYarHhfz104z1xQ
      IxCN0rJlE+fPnPNqYi8VseTKc88eZNSKFRceWWFsMoFlGK+rqmHVe1AUJFkmGo8zOzYKQGph
      Hs3NMSg8V0XXSU2Ok5iZ5vyxI2QSCfp2XEJ6McGJ558lnU6zYfflTpuFfsuyTLylhZt/5eOc
      OfAaT3zzGz7ovXgPDb1raVaqZ3lX9FdVSx3BloGyOIm2MM77NjTzi+++nq7OjpVDQG+E+JW/
      X4GV4+ne8T5l73dKu5/5f5bj8O6xKyFQc2U5h3T5y1/N2etv181C9hzpF6m0ZUlGrlIk460Q
      1+fgEtK9laIoCvV1dfzSe29ATA2x97UDdChZjhaiJ7KJOcZP7Gdu+NwSrUjFn5JELp1k8tRh
      pgZOsPaKG4i1dHDy6Yfo2n45DT3rOPbE92lX80TevpXR0VEeffRRBgYGiq1JDp+/u2ON+EjG
      qhk1kiSVxMzLklSo1Vwb9ny90t3dzcTEBOl0mpMnT9Lf34+maUxPT/PXf/3XCCHYtWsXd911
      F5/5zGeQZZnR0VF27LoURdf4j3/+CrZts3HbVm667Va+8ff/hG1bNLe20tTeyWtPPMbUwBl2
      vvu9HHj+Weqbm1mTz9LR0saen/6UTCJB49tuon3Xlbz2lb8jjM2cZHDHbR+kudmJaTdNk5dO
      nyK0tssbp1BHO6PnB+nsXwuiFO6tJqlMHsqcyCklxtzQIA1lVbRejwghSIwMoQaDXHbze3jg
      H/6e7k2bOP7iXm7/vf+JHgzy1Le/xcz4KBeOHeUDv/U7dPWsYXLwAoqqEm9pYdPlVzB++iSx
      9g7q5uY8rn5XpkdHeOUnjxAsd0j7jU+gd0s/cwcGK+CdcrG1MEouha3qqKlZhzQu0gSygvBF
      XkmDQ4PizZqIhf47FqwvU7WaRV/LmVprsShX7uVZxd4N1nAwVxO/1eBe2++AXu220i7kMbgT
      2bXcJcmplfxW8+hfjFi25VBogBOp9BYnnOXzebRCgRb32Rw+doJvHxxhNuM4aLVQGFlREZaF
      5MIxloUky46ylRUs00RWFIxsGsvIo4ejTsk8IJdYQNF1tGAYI5Pm1r4wv3rnbYyPj5PNZgkG
      g179AV3XPcy/vOi7W2P6Zy1/+qd/ypYtW9i+fTv79u3jmmuu4ZlnnuGP//iPGR0dZWhoiC99
      6Ut87Wtf43/9r//FPffcw8svv8yf/8O/0L+2hRs/cAttXZ185fN/x29/5tPMTc8wNjTMd79+
      L5/567/kC3/2l+x+z600bdzCy488TM/mLXT0r0PYNrPj44yeOsGLP/kJl955N3seeoBb3v9u
      ohMjfPADH+CKK64AYN+B/ZzCRI8UQ05zqTQvPL6P+liYDWsb6d3Yjx4MVDe4BPzg+08zKlfS
      NDeaM2y//orXPY5CCHIL86QnJ4h196CFI45BZJrMT04wfOoks+NjvPMX7yYxOwtAKBZDsizm
      Bs6g1NUTjMcJRWPYlsnk8aPUre0jHI05RmEBbTANA0VVySQSZNMp4i2tyIpSNBB8u1Rh2xx4
      +iWS4fYl+y4ZWfSZC5jRZqxIA17mtBDc3hfm5mud8XnTdwAu7ONa/36c1P27Gk7qSrUIoFqf
      CyFKKCVWEvlTfv7S97I6he3mUPidgG4flSUc3z9PIksyQhJeXYe3WvRC0pG/gMmuHdt46uQo
      qfKsX98x7u9uj5XC33ooAqFIyXnBuiJnihYIcNnm9UiSREdHB7lcjsXFRYQQRKPRqha/+xzf
      jApiFys333wz3/jGN7Btm/7+fp555hn27t3Lj370I26++WYiEUeZuc7r0fFxZFVBUVWnClhB
      OQ0NnON7//ZNrn/PuwhHItjCRtdUol1rPH+W+84eePpJpkaG6d22nXhzE7sv28GZR39InTDp
      7OoqGacj0xNE1/Z4/bVMk1dfOMpssJ1ZQ+LcyRz6gT2sbQ6iK5C3QaCQyeRIZfJkDZu8FoUy
      tmNJklgUIdJTU4RbVs7hXy5mLktieIhAXR2NG50iMm7/VVWlubOL5s4ubw7UNTVhpFIkB88h
      6wGatmz1fHfg0FYHw2EihbBPP/uAWngG4bo6wr4iMl6Aik9NSLJMIBSgWnCyEALJNpFzKWQz
      R659U+VBkoRp22QyGc5cGHpzFwBH2SklFng12KSaM9W/MyjfUrvJOe535W2VH7/SBWAp8fen
      XJYMrZMkb/V1Fz4/hfCbyRD5RohUwLCBn5uQU1mW6agPMTD9xretmxl6uossl7quEw6HURSF
      QCBQ8ayFEGSz2ar1pH+W0tDQwNDQEG6TGa8AACAASURBVO94xzu8uTs7O0s0GmVoaIipqSnv
      2GQqyfPHz6DaFonZOTKJJHaTEx6ZTCTRAzoLs3NMjY0hhMAwLA4++xR9O3bS2N7Jq48/Sj6T
      ITE/RygaY3JwkFwmjawohOIN9G/YSCxVdPAeOXaMYHtpaOnJV48zlo+CW1NYUclHWzldwYAd
      cZR+FZp7F3K19Ahj54ZZdxELgG1ZJMdGELZNfW9/STavX9dUe+fnzp6mZfslNWsAWPmli8VX
      E6kAGQJFh7D7i20hGVk0K0NIFdTFQsRiIfIpiTOp2vf+yrkJnh94kgUp+OZBQEKALEseZFCe
      pOWHeMqVvz+qotoLt1zEj//ncnTBrpQ7jaqdZxdi8mVJdugpCtdZ6hr+dqs5rv8rLAI/j/LU
      S6/x3dOLLEkKdhGiWHn+/IOXs66/mDzm3136RQhBOp2+6Iphb5ZMTU3R3NzMzMwMra2tRKNR
      5ufnaWho4JVXXiEejxOPx2lra2NycpKpuTm++NJJmnMzXLN7E7l0hnw2x/TYOM3tbczMzBBv
      bXa4/fMGpyZTTE5M0rpmLZH6ekbPnEYLBGjq7OL/Z++9gyS57jvPT7rypqu9n5me6fEOmMEA
      IECAIAmABCga0Wi1J8M77kpHUlqdBFEbt7qN0N4p9MeFNvYorsRdhrSiIO0uJJEURRKEd4Qd
      DAYzGO/bTHvfXb4qM9/9kZXZWdlZ1dUzA1Jxt7+Ime6uynz58uXLn/n+3PDZMzS1tREIhUm0
      tLA8P8e9zQn279iOpmmEw2H+4YXnMPpXSy+MnrvCO1dy6zYvqUe2ome/S6nyPAc+dOeG3q38
      wjyFhXniPX2oPn2J16OFyxdoHtxZ8/v5S+dp2b5rw+MCq6X2y2VGXn+DshYh2ZwgnkoSTCTQ
      IquWaTmf49hrp9Fj6wvA98UCEFCzRIGXSXsfkG16ejH+Wsf7jekeq1FyS/da5xl26Km0ygy8
      MFatudU6xs+K+R+0Ph3csZVy+SITy1kWciWmVwrk5SBGILL+yXXIUAJMzMxXCQA/K1IIQSaT
      oVzeuFb3flNbRfNta2sjkUggy7LjfL3rrruqjm1vb+fJYyeRks10mzotnR2OsNuyZyeZpWUm
      L14lK8mE1ABTs0vENg0S71xl4L3bV6GGbQdvqxo/KMHOgS0kKtBGuVxmtpjH7rC7MjPHe1dW
      EHWSyNYjuQJ7GAKEJCPJCs2pAIau19TGvZRfmEcYOk1bB28C6qx/nqIF1nVs1yJhGKTHriNM
      k+59ezFKpZr1i7RwhOaozEwD494yAbDKvyzYx+3g9NPMba3Km6Juf+dmsO6fsDYqp1Y0zkac
      t94QUz+GbJireQfV915fANQTEqZpOqbr/6DGKdWU5KF7jwCrOSFzCwscPXeVt0fmWVbicINR
      S0OzS3ywgeNudVRUvVDj9UjTtDXCqJFxyuUyS7MTbJUVWnoswZFeWERWFJbnF8inM2w6sJuO
      Tf2Yhs7o5Dxag1aXEIIm06ClebWh+uUrl4l2rcI/V84OUdSSjYOLQiAZZZTcIqKQxUx1I2Vm
      Kff1gV5GMg0wDS6+e4Hjbw8R1CAU0ghGggTDIUIBmVBQJRgJEQyHUAIBZFXFKBRoGvAvcd0o
      yarK/KULaJEIwUQSLRpDkiWw27+aJkLXkRqszAoWJJUev45ZLpPo2+R0PFu8cgnTMGoWnGvr
      aGZmogSqf+E+m26JABCV8qUASNXlld3RPt6Y+lrYfa16OH5OYq9vwf37etq3l7zHrCkFLKjE
      dFdHFnnvxe9ata7vjmqyj7uZkNH/P5JtNXZ1dPDpjg4+Xizy3vlLvHFlkuEslJVg7SQlHxqd
      qx/JI4SgVCpVQZi3gkxhlUlRZKVmuWW79pD9Ptl5L3Z0Ui6XIxAINFT8DQBJoqe9mWBrilCl
      XLIWCHDurXfYdvggTb1dViiiBIFQiKZ4hJJZu9ctrL5/RqnIzvbWqjkMz0wT6LIETTGbY3LJ
      QArXmWOF4cuFFcxijqJhUkAhH0xihqP0ZuaRQkGMWHVYpNk8w+z1MhTB8pjq9i/uwVEx0CSD
      5rjCnkyerp3bUYPr9w/wo6YtWwELgikuLZGdmmT22jB5JUpLWwKpmCPe04esaQghuHLiOBfe
      PkpTewd3f+KTqK4qq5YvYgK9kCPR21/VU0AIwfLCCjrDtA9u9Z9LXy/BoZMU1fow0C0RAJK0
      VttwMzJvVI8fw7S1fjeT9zJ8X628gTrdG31B3ZaJe75WNE9FoiNVNY73g6YaDRv1hpraa/HT
      EAL/FOCnW+0HCQaDHDm4j8P79zA2MclbF4Y4ObHCihSuioGuRVMreadtYS3KepKlbpac6Dip
      dmMmIQTFUolCqbgajhoIEHLtlaYmK6Kp0b1TKhUxTJOhM+fp3NRHJBFjbnKKnXcdRokEHQ2z
      WCyhyDLxeITpQr4Kc3bPD8AolQhmljnS1cHte/c43xuGwXQuQ1yyykVPD49R0PyhH6mYhewi
      Jd2giEw+EKUcbFsjyIt6mQBrn6nW2UZgbJSSqMfiJHRUdKEyvgKTr16n/eQIe/f10b1zEC1y
      Y3CiGgyxUihx+uQwIzMGOlm4mCGuFPlY3wKJ7m6mh4c4/epPeORf/DrXTr3HS0/8Vz7yS79K
      uVCgvLxIem6W5i3biEd7WJ6dRcnliVUyqRcmxhmdThPMq0SaZtBicTJLi0QTSULRKIVcltzy
      CskwzIj6pZpvGQTkh797teR6fVHdjM8rBOzx/awIP4jIdsp6w0F1w3BKKHhhIzfT9WOIeqWV
      oxX6Zo1nmIZT76Uevr8RulGM8Ebop+WAXg/asGGwRpuvNEqyLNPf20N/bw+PZDK8d+kab16Z
      ZDQHhlbbyZcWGjOzs/T29NQ8JhgM3nLnr92VrtZesvs/gNUgvlAorDo/DYOyrhMOh61e0oEA
      pUKRZDJZt2lRuVwmlIgj5ufoGtjE1ffOIISgpbe7Ssu390qiKcHw2WHUVDNBWUIBArJEWFWJ
      aCpBVSXZFGPXoX1VUVNCCKamp5Eq/YiFaTI6ugCqfzE2NTPPaKAFEawvsHOoBIJrBbXR0kFz
      8jrTS1Z7okbIRGYqLTPzxjhtp66ze3c3vXu2E4iuXy0UKglj01OcO3aeK9dzFE0VHOEkkTZC
      jJ6/yp6uLi69+w53feKThKJRdt11N++99DxLly7w1tNPct8v/E+cOn6cBwZ3cvy5Z1mcniK7
      vMztH3mQpdkZzr7yCgtFhY4dB5i/do65kXNs2r2XiWtX+Pnfeozv/od/T++OHZjZHOrmI3Wd
      67dIADTG/P2oXrtHqLYs3Hi6Xe7BL7LGPV5VQlelCJd9vpcp+YaoIpwCbJUvnWY5dmmGegzb
      fnH9MmltoWNXa9wo/FMrOmXNcfi7p34agsYUwilipypqw1ivaZpVDLaWdVmrMQ9UP8dYLMY9
      t+/nzv27uT4xyU/ODHFsXkfIa1+BsqQyNTtfUwBIkoSmabdUADSyh5yOeq7Mcnv/v/rqa3zj
      G3/C43/914TDYU6ePMnXHvtdnn76accB7EemKVhaXODYG2+y7647UCthr4uT0zRv6kGpQEkL
      M7NcO3GaD991D19+9GN873vf45d+6Zca6lkNFUtdCEzDCuHOLCwym5ehhpItgmEk00D4aPdu
      yoZSxI01saKgqETuuI3es+eYmChirDOOm0xkpjMyM29P0Xp6nN27O+nft6tu2ejCyjIXj57i
      /NUlsrpKLdZ69eoc2+/KUsoXEJk02tQ4rUGVrqDGR3cMULi0mQ92t3JiZYn0+HUuHH2LOz72
      CLn0CmffeI2FqSnaN22DgsLUhZN0bN/Hrtvv4MinPs0P/9OfYuo6eqlIormFHQ8+zLnjl8j5
      xcxWqJIt42GCG4AELAbk/3La39eqy+GFOTaCndeDLXy/k6q/8wokdwiZ/b3dRN5m9rBam0MI
      qxmLYVoZpxKrTkHfUtJU+yjcc1yvIJz7PFOYVb12ddNApb5DUpgmZqX8gBeOe7/InqtuWJaT
      qqhWSfEaVTDdORK2ZrqRblyBQKBmDSf32qiqypb+Pjb39bL5+Cm+e3YGQ63GfIUkMzq7xOEN
      3Ov7LUzdzN99X451q5cZHBzk5MmT3H333Tz/3PPcfffdmKbJCy+8wEsvvURraytf+cpXuHr1
      Kq+//jqXLl1i+/btTC4vMD8zy199/U8xTJP/9d98jWMv/YR/+G9PEI7HeeTzn+F7//kvWZ6Y
      JpgrM7ZpiD//8z9nZGSEL33pS7z99tu8++679Pf386UvfYljx45x+vRpLl68yKOPPsoDDzyA
      oigkEglE0XJUhxMJUmGYrwVRCJBNA1MBo1SglFlBkmUCsSSyuupEFbJCeqVILJ/F9CT4iUAQ
      9cABNievcPH1kyipzc56ZefHCDd1OtngfiSQmc3LvHJ8jpYzL7BrVweJZIRCrkChoFMsCYqF
      IqV8kanFMitlDWo0rLdpvhTk3HMvs7RcZuz4u9z7uU/T09FGLBJxeoJ0d3TQ0drM+LmLAKiB
      AE1t7fRu38Fzj/8lW/btInJliETbfeRWlpi6PoVRKoEkEQiF+MV/828ZPnOaH/ynP+POjz5K
      rlgbBlJ+57Hf+QPWYcLrkZux+MX2exmNu166fU23NtMIM7RfBD+t2c9qsGuL4LIe/JzFjmPN
      LhRGJQFK8iSngdPi0Z6395qO5eGxVOxr2GuxXuSH/b1R0aTd623a7QbrnO9YTcK0tDDTxDCN
      962sg62x2iUkAppGMBSyHKd12kXaa1UoFBpm/oDTF8IwDNRKe1M3+a2tJEls6upgU1Ti4vgM
      RbfGJkw+sKmZgf7azT0Mw7CSvyqC7pZHBGFlgBqmiW7ovvCpe58NDQ+zY/sOzpw+w8MPPcTT
      Tz1FR0cHt99+O6lUigceeIALFy6wsrLC7OwsuVyOxx57jK//ydfp3zHIxOQUv/KbX2Z6fIJ8
      OsPWPbvYsXs3M0Oj6FMLfPlf/EvC4TBf/epX2bVrF+fOneP3fu/3yOZzzM7PsXXHdr7/wx8w
      X8jyzIsv0NHSytd+93f5+te/zsc//nHy+TyFQoGLE2OEUk3IikJrS5TJ4QnKcrWTXioXWMoX
      KAQsjXv+7DEWLp6knF5i4ujzJPoHUVx9i0tKiOjKNDR7KpIKAbKMSLUw+d4rdDS3U9BlQGL+
      yjGiLb11BYBrpckbKqNTBS6PpBmayHN9psjkfImZZYP5rETRVFgvDNQeS9YLxHYd4t03XuP5
      N97hL/70TzjyoY/Q09HOD77/fS5evMDRo28T2nM/bXGFSydPsDA9hRoIsGnXHk68+By6XkIp
      ZjC0CLoWpjMRZG5qira+Pp57/NusLMwTicfZcftBZqaXEH7RQEL42ymSVOkouY6GKCpRMX44
      fC3ymuze0EtDmOuWKLUZot9L5yc8HGHB2v6/9k9FURBYjMsRWKbVwN3EdIp3Wd8JJElBuJrk
      WJqucOr9eLU1U5i4IW6vtVAL97XgJrOyzjKI1UEkyepz3NC6ywqmrlM29Yr1IteEhm6GhBCU
      jdUmKoqsEAyGKOvlVQvGpyOWEFZGrVs43gw1AqVJksSewQF+Mx7jv7xyksmyxYgUU2dLV3vd
      c+1CcMvplfclP1qYa2Ef79yrlB4kmpqsJvavv/46d955J0NDVpG8v/3bvwVgZmaGjo4ONE1j
      x44dyLJMqilFR3s7zS3NpNpaaevqJJfJ8vKTT1NaWKGjuYVYLFYF6w6NjjAyM8WrV86ihYL8
      44vPkmhqIm/qaE1xkh2tBLpbuT4xQTgcxjRNro2McHxsmLir/EOsuYk7D/Xx2vEJypU8AKlc
      ILOySCbYhJtadh8m3rsVYRqUMsusjF5GUlTys+N0Hn6A4688hfaTZ+m69yO07tjL8MvPkB4f
      IdzSzsCDP4dQA6Tu2kfumWeYX17lazMX3qRtx10Io8zi6FnCTZ0sXz+HUS4QiKVo23H3Lbfu
      FvIq/cU0Bz71K5QLOXKH7uPpo0cZj/QxcP8n2d+bYvuhD/DKvEpLYpA7Pv1ZhBBOyYiB/Qco
      LC+RnV9gdHSeXKSd6al5PvrLv4okSXzyy79BMZ8jFI0hTJPo+VHSuOArYaLpBZJmGtmOUb0R
      Ulzaul+VTJu8GrGN3bqFgc3s1iO35u+1Fvxeercl4m08b59jk7taqYPZe5zOQghkZN+XXgjh
      5Aq4r22ISpN4zzzs69fEsMFpBWlWICevz2Ejz859rqzIG4L6GiHTxfwVRSEUDBEIBDBMg1Kp
      5NyTHwlhFdm6GebvLc7WKHV3tvObH7+bvQkThEmMIp2eUgVesktDJBNJNLXxuO5GyYLN/PF1
      9/tmv0uRSgjnvffeyx/90R/xyCOPANZeO3fuHL/wC79Asyse36ZoNMpH77qHYFmQvnqdldl5
      QrLCxLnL/G+/8Zv09VkMOxKJcPnyZd49eZLLy7PokqAsTErlMunlFe5/5GHCrqiZaKqJKyuz
      zC3M88NXXuJkdono5v41cevNPZ0c2JZEKheQ9CL5pVmWg01rIIvJo89z6bv/mdzMONGOPpaH
      zpOfHafrroeYfvcnpA5+kJ13fojx118kOzNJbnaKvf/8XyKrKkvXLgGC5YV5FueGaWlbLaRm
      lgsUlmfIzIwgKyrlfJpgopWeQ49QyiyCuLkgCb/9nhca+uI8SBJaKEKys4/dD30OQ4swoaR4
      ZsLk1WmrJ/t81mpdqSgKufk5Js+d58JbJzh9apSLM4JctAMkiWU9QH7eqo0iKwrhWNzaJxVL
      C0NHyS3Rpc/x89vi/OuP3cZHDw2gPPbY7/zBRjR4i6SqFobuzej+3c/B6teswYYMkFbj7Gte
      2Qfy8X7nHtcdZ+9l/O77rq71I5xCbpIkOU5fwBEMNvzjQF5YLRoVT61+IYTVZ7bSwcsd7rke
      3CVJVi0h+5/1981BDZaQW7XcbpV2Y1k4huMLCQSCTq/cQqHgwGC1ehnYjP9Go5LsyJcbvZ9Q
      MMjBgV6yc5NomHz4yMGGLAjTNB3h9n6Q7XvyU3okSUJTNeLxOIlYnLa2Nqd/wa5du4jFYvT0
      9NDe3s7LL7/MwYMH2bVrF52dnbS1tRGLxUgkEmzZvIXWlhYO7T9AX3snt+3Zxx2HD/PC888z
      ODjI3r172bJlC9eGh3jrwhl23naAtq5Ojr36Gtt27SQUDnPu5Cn23n4b/Vu30NTcTEt7G7Gm
      JFNT07Qdug0tXLtLV7I1hTk3weTUPPPhtY1lctNjNG3dQ9cdH8YoFihnVyjnM3Tf9RBqMMT8
      +eO07b2DmFFkZfgianMbSiBIsn8Ao1SisLxIdmaKyeNvsvn2I5gljcWpUaKt/YSSbSxcO0Ex
      s0DzwG2UcysoWohQvJnM9DDxzgE20mYSVpm+RC0LW0Ip5wk3p8AblixV+lkollJhyBqlyetM
      DE9wfSbPXClIXoliqKGqc01FQ8vO09S1tkpoKBxCWxzj3n2dbOtr5Z69e1lZWUFPRZGuj4+J
      Wlh45Y+qG5Mli/l7Gaj3fDe58e5aTK+klxuGM9xUS5t2oBdP5ITf/Oy52eN5Sa9ELtjOV1MI
      JLmaeaqKukY7d5cwdv+0tbafdn19+/ruMhu3SgAYpoFu6EQi0SohVSqXKJVK68JVpVLJwfJv
      hMLhMIFAgHA4TKFQuGFLQghBqVSmy+dF8pJpmqysrNySUFobHgMcuNG9Xy2/lOH4nCRJQlVV
      4rE4gQo0kC8UyOVzpJJNDdfAcl/fS+5nVSwWef7kMZr7u6vepfXo2tnzaN29yFr9d7uUy/Ff
      v/MWuXAKSZgYyipmPXvqTcr5LOGWTubOHKXryIdZuHiSng98HCUYYuHsMbTZIVp3HmL0vbc4
      cN+HOfb8D9j22V9m6Pkfsf3nvsDVZ3/I7s//Cmf/6s+IRDYxM3KR9p33IGtBxo79EEUL0XXw
      QVYmLiPJComurUyceJauAx9xWmHeKK0KBIGMoDlQZNtAMxkpTD7UbH/pCPs161TLUe6haG6G
      A/ccRPVpiSlMk6aVCbo29xNdLjCTWSa1bRPK7/zOb/+BfZAXWvBORJYkVFXzjd6phbvbzjw3
      8/djfBK1oZB6VEurd8/Bm2XrBwP5CQfvPQqsjEhZkZ0XzNZqG20v6bWSfhbkZi63Yg52Bqth
      GiCsSBvTFJTKRYuhSxBQtLrXKpfLvlh3I2TDMcFgkFAoRCgUcjJhNzpeKBTyhUq8JIQgm83e
      tL/Chj5t35NtgRrCdBSKVcVmFUKVZZloNEqokrWaLxTIF/IV60urihRrhLxWu/dZTU1PsyBK
      BMLBDVWFNQyDoROnKGezLE1MUkxnMA0DSZLRiyWWxyZYHp8gOz1DX0LmyPZmjLlpZsRqRI8W
      iWPqZSRJomX3YSJtPQSSzWjROAGjyJZUFDPWQn55ka33PIyaaKOluZ3Fc+/Qdf/DxDp7iLS2
      E0w00bbvdgJBk1QwTFmKgSRRzCwS79pKIJpEDYTQInFkVUOLJlGD0Zt+RyQEYVlnc5vCkcN9
      HPzwETq2b0NkllgqypUowjoh4A1eX0chQZaIz/6VJAljfpquzX1cu3qVRE8HgXAI6frYdWGK
      agvATVaLNlAU2dH8oZpReiN/3Di9rS24+/3eCqbjxuS9Nwr+eL9NXjjILZTc1oT7GoZpIivV
      5rcQoqrJS615+s3XXpOfBdn3766jdDMCwR6jUC5a60O1QLWgsfrCPZ/P37ADOBwOO/0C7Ebo
      NvxkR+sUi0XfvWCTJFmx/dHo+i+8YRik0+mb1vyFi/G7178pmSSXy1Mql6wOYsKCEsrGamRU
      NBIhXsF5hRA3pf03QsdOvEu5I4lAbEgAFAsFhq6N0LHNKq5XyufJLa2QW1pG0VSiqRSRpkSV
      b+DYT47z0ri8LuMLlbO0qBIimvI9VirlgRzl7j7w+GmkUgH9/HnOHz1FenGWjj333VKFTAAK
      JqmgzsDmJjbt2Uq8s6vqGno+x4mj5ymE1lc41r2eaSIXM3TLiwzcd79/qY6JIQ4c3lv10WoU
      kFiNVK9aCKnSh9aTXYvrWDfjr5qUqE7G8iOvdr7mxjxM0/7pLtXgvZ5Xi/c6cWuR9/qO81iY
      jtbvPcYQJook13wp/Oa8ERP6/SA73t6dUOReu41aYva92I1/qq5V8X2sR/WyxOuRHUxgk67r
      ZDIZxyqw6/mHKmGotqDxu4dwONzQc7lRS8VLTkJh5ZqqqpKIx9FUDS2hkc3lyOaqe8CGK9ZN
      OBSu2lvhUIhgMLBhzb8RMkyDTKlAUEqCXQ2lQdICgao6+IFwmEA4TFNXbSd7KhpAFkVMqU6I
      phA06VlEU3/tQwJhMAMEhocwY2GMlg6EFqh8F0LZd4D9qQQT52bIG7fufQxKZbqbFbbt6KFz
      x9aqshnu/aVFovS0Rbi6bKz1BTRAQgikQpomtURfR5Tezf0YxXYWF+cJt6ytAZTLr01cVO2B
      qPxb3VSyE35oRyO4tWo3lOHHYO3PbabpZ1r6MXc/8rZqtK/r1fL9YJ1Gmb97DlVCBZzWbe7v
      3OPrhoEqrx966EQRufMJfkaCwNb+3WGxNmyyUTIMK2JBka2qpu6kN7UBbbRUKqEoyg0x1VqO
      X8MwyOVy5PP5KmhIURTS6fSa4+11WE97tse9WbJzMdwUi0bJ5/KIkCAQCBCNRDBMg0LBynSN
      x+IEPQlvNkmS5BteeyuoVCqRLhcI3MB+tea1seslW5LIYhKzTqECVS+ihiKsu2NkBTPWgdDL
      qEPDiKCC2daOGbGqxZp9A7TPLzEycfMCPSSV6OqKMNDfRv/BA1Yj+XXWq33rFsbfPEMh7F8S
      w0tCCMinSSoF+rvi9G/ZRLK9xel4J0zB7NH3EM2ta65tqgH0so6qra6rKksykmyXSliNObcY
      xFpc3tH2fCJ53MzNZo62oFi3XMFNMEOvg9X7uVv79iNbE/bzDZhi9TsJCVW1Ej4M23TH8l/U
      EmReAeWFXt4P8itz4Sec7GdjCwCjkrW7UXIrBVIFsmjEz2H7iGwBsFHyav+1rmHXzYnFYk5T
      Em/7xmAwWNV2shYZhrGhJDUvWdnQlb1mmg50Icsy+Vze8inZ7SwliUg4gixJ5PMFFEVpaI6N
      kmEYFIpFhkZHGBzYiqaqa56ZrusUiyV0WWKjiSO2IiCzsfc7HI8R1XMsK64M7YpvRDYNAnqe
      eHEF0b6p4blIqoZIdCCECeNzBKURjNYO9GQLgd4uwpND5EX90sn+JAjJOp0dIZp27kNKNmPM
      jiA3+Jy0cJjejhhXlk38mhvZPiGKORJk2dSVYNPWTTR1tPnCPJIskUyEKBWLa5zBkZ5+rp6/
      zPZ9O1etzipGLUlO2Kv9mfunc5EaWry7oJv9t9tS8F0+n/FrkR9O7Wj3WD8VSXEwe01TAYly
      JQrFzdy8AsHGnv0EiE2K7GpsLytOjZ/1rBgvvHIzEJCb2drk/n1NyYDKa6gqqhVO6uPAv1mB
      5Pb1uOez3j3aWb+qqt4QU91o2Gc2myWRSBAKhapKTciy3BD8I4S4qfo/TmmMSiiuXUJEsAor
      2Q1cbNJUFa2C9WdzWQdOs3v52gIp2EAJ42KxSD6fp6mpCVOYLC4vcfTcaYJtKTJnTrFrcDvR
      cMQRMqVSiR+/9jIr2Qwtfd0b37OVLRWJRSlmsoTijRVVCycSdGollOwkJjKBcg4lGEEFpGAY
      EdIwkpsRDWXxVpMkyaiKoNQ9AKZJYGIYEQjSHNUZzzQiAKxIHhmBJpt0dIRo2r4dKbWqcReR
      awq81//xH9iydx/dW7cBcPq1nyCZJiE9QiHsqtlk6ohinoRsafqbtvRy4dRp+rf3kmqvXeJ5
      ZWGRzsEBzp+4SLCzF0VV0Sp7Q1ZVlqQwS7PzpNqta8m2M1JRFCexy1qo+i+zm8nAany/qqpO
      zXJVVas0NK+G7YVmajEhtxDx09SpKCc2IzNMw8FDS8Viwxt3TQMZ+zQhnNwEN7PXGtiA7mt7
      M6A3+kJZcJOVLGUzMHfylN9axna3QwAAIABJREFU2oXsrDIS/jWZ7D3ghbk2Qn5lPda7l0Kh
      4BTD2wjZWvKNhDraZZzdzt5IJNKQhVoulykWi1XhvRubwKpVaVRCce3ACiFElTPbS7FojEQs
      zje+8Q3+8A//0Pn8iSee4Ctf+UpDl798+TJPPvkkQgiWl1d4+8IZklt6CceiLGswNDrC8ePH
      mZmxekm9d+oUU8uL9O/eQT5z4+Wv46km8itrYTcvCSHIp9OMnLtMKBwkGEugtHYjJVpREm0Y
      rZvQ4+0YkRTcAPMHkIsZjKYYIhRBRGKUugcwYkkSLRFU/AMQksEym/s1Nm+NsGV7koFdTQwO
      aOy8c4DUnUeQm9uq9ntZUtDz/jDh6PmzHHv6xwAYepmTLz7P6KWL9HbGKaaXyE2PIq+MI0sZ
      tsfT3P+hXXRvaqOps53l+Xmy6TSTI6MU8xYsmFleZmr0OqVikWKhwN9/81vMTU2j6HnefupJ
      Lp84TnZ5yXrmc3NkS2WuDE2gl3WymYxlAbiZqpfZ2v/8mIy7po8bAljP7F+PahWPg1VoydF0
      nVo4ljZVNnVrTpJMJpdFkWpr/fXIsohkwHSSwmod1wjJsryKlTdYQdFNQlhZtkZFg8QDu/hd
      T5KkitPOfr71hSxYtWfczUi80F6te9vo/ei6vu64tSgej1dZmxthyDbkFAwGiUajlMtlR5te
      j7LZ7I0x/gpJkoQkKpq/tLqjAqrVICTkE7/tJk3TyGQypNNplpeXSSaTHD9+nFAohK7rPPPM
      M1y4cIFDhw5x//33c/z4cUZHR7l48SJf+MIXALhw4QJ//Md/TFGB+7/waU68eZRLp8/SN7CZ
      zqYWnvm777Ft2zbuuOMOnn3xBS6OXOPAHYfZu38fL/zgSWanpjl41xF27t/LyaPHWJiZZWL0
      Ovd+5AHMslXVVlYUDF3HKOtWJrthYASCpHq6qu5HL5XJr6xQSGcopjOMTS4ysgJZNYZQ2pzG
      76YWQirl4CbbfWLoSEoJPeVqpSiBGY5R2rqb5ul3mClUX0NDp3V3H2b3agkLw9CJzk0gdfbh
      R2Ywgl4o+PZMCEWiCNOkXCoyNTREz7ZBsouL5DNprrz7E9R4gvzyInv+2Zf422/8X3xg5BoL
      MzPc87GHAHjqb56go6+XlcVFvvDVX+eZv/0O0Xic4QsX+bkv/jJj14Y59tIr9G8d4PKbr7K0
      dTuGrtO5eQunXnnJqi5QKpGKh/jW//3Ha8vuuDF7r1PU67T1OjPdx/v9s793Ox7rlZLwg4+8
      tXxs56MkWZUxAYJagGwuW0mg8H1GvuTrWJMV37nVW69a464Hh/mR7WQuVwqC2WtpCmFV+PSU
      wrDn4pTacDnh6xWMA5zSE/Y1DNOgrJcpGWVKetkp7lbr/jZCNmS00bBP+1q2AIlGo45AaPR8
      W8sOBAINhX3a5FjKNyDAXTMgGonQkmomlUoRiUSseP5QqGEF5UMf+hCvvPIKY2Nj9Pb2EgqF
      kCSJ3t5evvjFL/L4449TKBR48skniUQifP7zn+fb3/42ANPT03Tv3s57Z89QLpWIJ5Pc//CD
      vP3Mi+ztH+DIkSM8/PDDbBnYws67DrF97x7uf+RhkCQi4TAPf/ZTfP+v/xvlUpkX/vFJuvp7
      2X/HIV784VP0bd9K/85B+ncOMrBvN4O372fHoYNsP3SQUibDxPmLjLz7HtPnLjJx4j2y18dQ
      CwX6errYtmuQ4ZkcmWAKoVQLZFPRwLj53stqYY5iV79vyKgZjpLsSSF5ijd09YQwu6rLgodn
      x1G66kQfBUPkl5drfr/jyJ2cf+N1Tr30Amo0yfhyjpGmPiJ9m9F1nfTEGMI0UOIp7n3wozz4
      +c8yOzkFwKe+9Kv83Bd/CdMwCQSD9G/bSi6dYXpsgtbODgb37eGhL3yO/ffczb5DBzn44Y+y
      7977SHV0EkkkMXWDqZER5koKPZs2ofqFdVbdjIuBe7tW2QzcyyBrbWS3ALD/9mqwXkey/Zl3
      Ps7fAMLEMEyEaaJpGvliweL9suxkL6+nufm90N7PbkXmrleIesm9dkJYCUFu4SlJVkKanYns
      J7SqYCdJwhDCSipap+6TqFxbN62SDkgSumEAAiGJDYUYNuIXUVV1w2UU4vF4ld9I13UCgQCJ
      RIJsNrtuJrHdMGUjZENvN870LbIUCplioWiFelYc0nYRvEbpyJEj/Nmf/Rmzs7M8+uijfOtb
      30LXdb7//e+jqipTU1PkcjlCoRB33nknyWTS2VeJ3k42HdxD08svY+gGR194mZgpo5rWXonH
      4zQ3NzO1skh7fy8jIyOkWlsIhIL84xN/z9s/eZ3JkeuYpkEkFmXXgf1cPHmKWFPSwZq9pCgK
      yUScvu1bUSt+mzV8xjRpbYqS9VkGoahWr9+NkO08FQJMHTW/SKm3F+o8e7N/gKbRd1ksW6ZH
      c6SMunMPwoUiKCsLBBNNa/IKqkgLUsytFQDCNCjnc6hKgOef+j5SspmtH9iLcWWYiffeQZiC
      wUc+y9m/+zYIMAMhLo/O0tuVcMaQXL9cPnWaieERPvk//zK5bNax8EuFAtNXhymbstN/4bXv
      fYe+nbu442OP8MNv/keCLW0szS8iu+EUNxxk9xq1Syfb5QPc9X/86vp4LQO3xr4Gu3ed42Zw
      9WAkrzCgwgTskDrTMDEN0xHyjb5YXujLW67aHc56I2SvhXtdbQzfndNgH6cbuqP1u+foXl8b
      3qo3J3cfg3WtDwkrFJhVSE2WZExzNUigUXJnt/peqgGh7HeOFybJZrNOZ6xYLFYXRtE0rSFn
      qZeEECwuLZIr5OvCk42Qvf6ZTIZSqeRAPxuBwyKRCLFYjBMnTrB1q9UTdnJyEoCvfvWr9Pb6
      l7EWAMWy1XawWEJMzGMupvk/fv/32blzpzP2yZMnmStmUVSVxbl5sukM185fZNveXfzKb32F
      eCLB+JUhTNPax0szcyiaxVh1Tx8HwzAol0qkOtrJrqRr7kFJlglJOmUf7FySJEzT4ycSAkwD
      SS8hl3KouQXC2RliuSmaC5P0aCtsieTY1aJz20CMvXv6SRbTUC8aMBIj1R0HBEFZJ7WrHxFy
      QUJ6mUghC8n6IZuSLJPL5SvTFBSWFhk7e5YT75xiXgQYTfUjtXTQNLgbSZbRwmEire3MnDnO
      +e/9DcXlBQCCssTszCLlXJ5gOEwwEkFWraZK0XiMptZWrp27wN//2bcYv3qN9Nw8mhLgP/7v
      /47LY3MM3v8RXv5vf8PbTz1Je/8m3nnmx/zj//PvmR0d49Sr7zCXNpDGxsYE4DA4r7ZvPwA/
      mKHehnULDqjOtvV+5rUA7Os4D8ZHgIgKgzENE3ALBcvCk11F5Xwdx55784Yt2lriepqsm+ox
      Bpv5u60fh5FXhI07gkc3q8s+u9cfLF5ta+T1noPtO5Ck2oXYap1nmqaTfSoBAa2xqBv72cgV
      P4rfOaVSacPVP+PxeM3WkXbClyzLFIvFNT17JUkikUjcULjpSjpNvmAlkMkO5Hhz1oBNkUiE
      YDBY15/jppdeeokPfOADjIyMMDIywoMPPshTTz3FRz/6Ub75zW9SKBRoaWnhF3/xFzl+/DiH
      Dx8mFArx/PPPs3//fkZGRlBCQUauXuMTjz7K448/ztzcHJ2dnTz88MNEo1F+67HfYfDO27nv
      Yw/yo//+d6RX0nz2i7/M3//Ft9ECAZqam/nggx/m5R89zY49u4i1pJifnWPP7Qd5/BvfRAjB
      r/4ryzH9oyf+nounzvJb/+73mbg6RP/O7TXv7em//R7Pnp2le/+da74LLU8iIzM/PkpTLERX
      Vxu6oVNYWWTrocNokQhqKIwaDtdsWK8XCgxfucaYmsAM+nfJktNLzL5+mlR3Annf/lW4SAjC
      M2MEu/qQGqj+GpoZoTURYXpxhUU5SDnRWtf6ANCLBRRhEkgvoaTTIDQMNcRHbmuhc+tm33Ny
      6TSL41OkV/IQayLc2k6pWEQLBpFlmdkL54h2dJJbWGRseIIcEfRw0go5FQJpYmJCeB3BfhCO
      t5aPH1QE1bCNm+HZY7g1P28JBpvxucMt3WO7NWWL+a9lBLYAkCqMx45sct+X18rw/oRqAdCI
      dua2dmxyj1uF31esKe96uu/TqDRUEYAkhOM4tO9FrTi61yPDMCxIR1q/d4D3GRqG4USsCAQB
      VatYAvWvaz/HenPcqACQJIlUKuUUlvMjRVGIxWIoikK5XCabzTrPw2a0G2XchmEwtzAPWOtz
      IwULa5EtzEKhUMNZyO8X6brO+MQ416YmMJMRwg2EbAohuHbqLJv27HT8Kn/xx18nk8nwa1/7
      bcLRCP/h3/6faIEAX/n93+N7f/5XlEyDPbcd4MCdd3D23ZNMT0wydm2Yhz77Ka6cPsu3v/sy
      shog0dVHx67bmL10iuXxERIdPaT6BnjvH75NvLWDez54mLmZGSavXmHbbYe489Gf48QLz7E8
      N8fOI3fSu30Hl44fY3lujoWpSe751M8Ta2pCmCazIyNcWilTSvho8kIQuHya8qZBhFtICJP4
      3ARqz5aG1tNcXiCXSVNu7fL1OXivqSzPoy0vQllgBJMILVS5rMFtHTp77zpQdUpueZnZkQky
      BYNQZ4+vwxkgv7jA+bdPk412rvGtAKtO4HrMH9aG+a29B7FGy61VAM4tcKqYeqWWvDCrISi3
      9m6YJmVd92X+1tj2fCzLwAtPeTV+b8ST+3689+e+TzdDt+Ec+95taMf+zH0PXvjM68S14SZN
      1QhqATRlNdzRPk6WakclrXkmYrX8RD0yhcW03fVmbGavVMo56IZBI+iHLWzqWUR2yHCjFA6H
      6zJ/sJj1ysqKE9lja/w29LNRBiuEIFOxJNwBC7eKbPjnZ1UTyqapqSleePN1LqXnCfa2N8T8
      oSKUO9pZmVtwfQj7Dt/OmeMnmLw+Rs+mfgtZNE06err5xD/7HD964juUS2Vee+4FkqkmHvjE
      x3nyie8QjkUxymU2HfkQU2eOI0yTYKyJTXc+wPSl0ximSVPfVjr2HCLV0sG2g7ezec8+Dnzo
      wwhh0rNtkDsf/TlefOK/IoTgnWefpnPzFrbs2cepV16ypifLtG/Zwm09KRIL4343RWlwXzXz
      t05EFPNrj69BcrKZsKYilXz6FdtDFnIEx68RunIRZamAHmhFj3U4zN+6rMLs3GoI7fzoGJeO
      nWJ4eA7Rvon4wPaazB8g1JQiFI34Mn9wl4Kgmul5Gaf9vTd6x/7czeDcv9t/18P0ncxVqwGv
      w7Rg1eEMVGLgLcZeb0znXGntHN33U8uKcVOVsKr4G+xoGi805VcLyR7T7UPwy5L13k+1UFIc
      GKcerFJrDWSpNjzlzL2y5u7SDe5n5wivBq7rHE/tZ2+vXyMkSVahtkasBSEE6XTa0fgTiURD
      e8WPSqUSheLqC+ze17eCTNNqfB+LxZx2lj9NKpVKvHb8bQphjeRAzw3dV7y5ieEz52lqa7Wa
      DAH7jxziB3/zBCNXrnLfxx7ku3/515TLOu+88SbXrl5lcW6OYqFAOBxh54F9hCMR9HKZcDRK
      qrufYDxJIBoDYTJ19h2EgPziHEapiBoMEwqGKOWyiLzAKOQxMmmWF+c5+uMfEY7HySwsgBBE
      4gn6duxkbnyMmesjVfOOtrZxMBbj6oXLTIRbEQGXb6jGOhiKhmZDDA2Q3NZNdOwq2aZ2pFIR
      uVxEMnQkXUfO58FU0SMtEK9vUa/kBSOnzpLNG2gtHQQ37yDU4BwkSaKto4m5ad03d0J2H+gO
      H/QLefPi8t6CbG4B4f1Xz3lW73v7u5JeXqNJN3Lz3vm5f9Yjt6ZvWzalcqkCiRhV5Xtr+Re8
      49lz8mr8YFk2fmGW9jEBVbOsgXXwZ6+FYlsZfr1ybTJNEwTInnwHycLSEAgnocwtnOuRW9DV
      +t40zYacsqqqOjkUjVIul3Nq9txo9FYwGCQRj1trI9nO9JtzAvtdw06a/GlTuVwmLZk0ta+t
      G9MICSGYGRmjrbeH4fMXmR65jmmYRKMxFEVlbGSUtkpntamxccr5Ip/5lX9Oc51MVsVYjQrT
      S0WKmRW23vcxoi0dqMU0ETOPXF5iuWcH05F2RubTnJ8v8ObxM8SjUT7wyc8Qjscbmr8aCrN9
      /166l30sAR8yFRVKjWeCS5KE2t5D5MpFtNkllOUSFAOYJNEjXeixNlhvbwpBOBzAaOkjtnUn
      wabUhp9VU28PoZJ/WKryta997Q/c2mYtBmU7Kd1kuGroAGsEQr2X30t+2qAkSVZTbNMAZ8z6
      DllbQMsVP4L3WPf9uOfunZcNSemVRhyGK6LFTt1XZKWSiFafIbiTlrxlMpz7r1g168XqN0Le
      PIn1BIZfIpWzB6i42CWrufutbCRfLBYdaKcWqapKNFrbxK1HNjRnl4a+kfNzuZwTDSXLq1Vf
      642nKEpNISHLsmPNyLLcUBby+0WapnH26mXiLakNnyuEYPzKNVq7O4mlmki1tyHLMsuz88Ti
      MXq2bKKrt4eu/j6EgB37dnPx1BmGLl9ly+Agg3t2ISsynb09Tj/ultZWzl5PE2hqRQhBrL2b
      wuIsmfNv0dLTTdfB22nZfztDJ45hlEu0D+5m8fow86NDbPrAA1w5/R6z50+zZf9Bega3A4K2
      XitZSw0EaGpb2+dZkiQy0zMshpPr3rNUKhBUFAjUT9irIlnBWFxEj7UhtKBV9bOBvZiemWDy
      3HFCepbbPngYLXzjSXCKppGfmSJthtZcW5qenhZuR6xbm/XG+9vJO+46M3YzA8WV0u/W/vzy
      DOzvgSot23uc3RQbISr8f61gcTM6IWzcevUabsHlxuDd0I6XWdqQSFn34OGVe7UZviorlmDA
      0p5N22nrug+3A9ktALy4r11X6EY1Mfs821rxwk21zrP9Fl4B5XesbUk0YvE0QnYTGCFETSHQ
      0tJy0y0XZVkmFottSMveSM1/dxi17W8oFosEAlZtGW/doVgs5rxLtfbDT4OEEDz71mvEN3Wv
      f7CLJEni+qWrtHR1EInHqvaCEILcSpqZsQlCkTCdm/ud/Td89gJ9Owdr3uulU+f54bk0Ql2t
      yaNl5oj3dSMnGhNS6vwkO7f1oUUaY5hCCIbeeYfh1oF1j5XzGZJ6EVrW7xbnHl+/cpFCsHX9
      gyu0NDHC1TefY9ttd1EYP8PBjzzE4KHDNceHtWiH951fvj7CqeEcQq22uFV7E3rhGnd5B/t3
      b6joKsZL1UW92rWfFl7P4SpVYAfhMH+rp67wOdbWwgHfJtpeuGi98FWwavx78WYLDqnMvSLw
      7EqqtlbsOK7NSmhq5T5kR4224uP9SiTfKPOHauFRS5P3I6+vxuub8PObuPfGzZKqqhQKhZpW
      QCKRuOmOW7DaujEWizlMuR4JIchkMg0xf/caCSGczmRup3MwGCSdTjvCdmVlpSps9VZCShsh
      SZKIVJit396pReNXrtHc2U44ttYykySJaDLB5kSc7EqaoTPnCceidG3ZZI1f5xrDY/MItdoB
      LSMg1Lj2W27uZHpomN49u9c9triyTHZ6ClWRrfyAdfiCqQYwM4tryyfUIUmSUBSQi1nMYGOW
      7Nipo+z6yGcYaFHp/eSHePav/pJwIkE+k2bwtkO8/Hf/nfs+9wucfvUVrp16D0Mv8+ivfZnh
      M6c5f/RN9GKJR3/9y1w9eYILR99CVhSa2tuJJHt468XnUINh2rftoXvPobVOYHeTEPdNuLVj
      +7PV76oZrR+E5F2UWji+zZy9eLi3a5kQOC3zZFYjemo9BPdPv+/c87IjjLxwmM3o3Y5Ydw12
      W0AqwqpGuhqBY5XZNoSJqqgOE/Ve+2bI3anpRsoi1JuDlzG4HcM3Q5JkJXYZhkEkEqmqsx8I
      BAiFQmvKNt8M5fP5deEgIYRT8O1GKJfLOaGd7kizRCJBPp93avuXSlav5HA4vG4NoPeTjuw/
      yKvvHSfSW92gxQ8aFUIwOTRCorWFSCVSqNYekCSJWDJBdO8usssrXDl5hvTiEn07tvkeb+g6
      I7MZiFYLAEmWGoq7d0gvEw7X9yvphQLp8etosTipbdsxr11FKhWqk778SNXqya+aJLV1ol65
      iplbtCChSLNl5dTYh6ZeRgtHLEUhGMLQdUr5HPlKH4ulmRmEYXDpnbf5xK9/lesXz3P6lZcZ
      OX+OT/zal5kdu867zz2LFgpyz2c+S/fWbfzDN/4DIS2GomnsfOCTBGNWdrHqNl/dcfK2xr8e
      U3VbD/XIK2RsTbymc9RVlWOttVBd18brq3Af6xYM9ea5Gg1jMW8JCUmutmhsqlUSwb6W5TvQ
      nRh+JMnS/CvZte7mI34at3uODYUeunAn91jrndfI937C2t4bt0I7d1sezc3NVuRNoUAqlbol
      jVfctF6svV1faKNCx7tGdgtKTdOc/sSSJDmRSfl83rF48vk8xWKRSCRyw76KmyFN07hn3228
      deE0gfZmX8Fu/z15bYRYKkksmfAbypckSSLWlGRgX4yhsxeQFaVSvqV6T81PzZKR1zJgydBr
      Jnb5Xi+9SGyzf7cxs1wmPTkBEiS3bHX4QjSVQr6+iLGeAJAkzFKBDYN1sSRKLEIp2AamgZJd
      QNJLoGoY4SYrRNO1FmowTGFlmUBTE1MXzhEIVQSa67EYhsH8xARHf/xDELBpz15OvvwiR5/6
      EQD9O3czc33UqQUmywrx9i76D8W58sYzBKMJBj/4cUsAVL3cWL1H1TqOLDfjrcVUvbigF07w
      4vLec61YdxAumMn6Ka9xlNqMyh2x5PZjeAWN91pu4YSoTvYxqRZciiRjYNTEMSXJzhTVHfhK
      crVF9OL1fgJqo0JAkeVVeOp9YCB+Y7qb6Nyq8e04/2g0esuZv12ivBYJIcjlcg2XptY0bU1h
      Qi+Vy2XK5TKKohAKhQgEAiiKQjQadQSBXQokk8mgqiqRSOSnGhFkGAbhcJgj2/fw9uVzhDpa
      Vt8VebXqbG4lzYWjp7jj4/fd0HWmhq/TtWUTlRcZqNJbmLg+QUjPYmaLGIaJqYYwVQ3JWwJi
      HQoaxTVx8cI0yc5MUc7niXf3onoiz5RgEKWYxWB9P4OhBTcUCgoVntDcjLyYwwxEMOKVKCi9
      iJJfRtJLCC2EEU6CorLp9ns5++zf07njAMdPvcrnHvtdVE3j7aeeJLuyzNili6iBAP27dqNq
      AajUPBrYfwBJktECAfRyyTMHyM5NsTA6Rby1i8z8tPX52NiYcOP8UIlywWp47g4ftJmgs7Ab
      cAba59oM0F3+wH2MvWCw2tnKFAKzUhrBLwxyvdIUNrP2aqzrzd9h1MKqjIkLdvKui/t4IQTF
      Ugnd0J3NrigqCLEGcqnFXN3H3Fz1yfeH/KLCbhU1Yr1slOLxeF0BUC6XfVtF+pEkSU7GMVCV
      /Gf7gfxIlmWnPaUtPMvlMrlcrmotbQHx0yA7GkmSJDKZDEcvnUVrSaJqmvOMTcOgdH2GF984
      x86DfQzsrl3OwY/y2Rzz45N0D1qOVu+TlSSJf3j6LZZbNoFhQLkIhoFIL0E+Cz1bkAINrIcQ
      tCyN0b93z+q1F+bJLy0Sbe8gEI35v2+6zomTZ1lu8a+h5Kbg1AiRzt6NRQIBwjAoX75IMbI2
      EgkhkMoFlPwyCAMRiJAXKiszEyyPXmTHrn7u/uRnmLx21dp7qRSxphSmYTBzfRRV1Wjp7kYA
      s9dHkSSJtt4+SsUCqhZA1TSyK8tcffcc15cNyoUcya5+FC2AajN+e9NakS44eLcb760V0WMf
      1wgzdR/rjpCxz3VHGrlWiLXbZnVct9PZ64twa9tr173aCVqL6UjCdkL75yB4x7ZD/UxhOlFM
      tlPYz3Lws5DWIyFWK4Uq0vqO7X/K5M4ch5v3h3jpVsfZCyEcYSFJEqqmEauUdLafoy0I7Agg
      +/2xIZ9QKOQ0rdc0zenW9X4Iv3rk3jexWIy7du7l2tAQK/kVVspF0qUCQUnhnn238Zc/OE5y
      bJ6B9f2rDgkhmLw2zOY9O1dDim2qWAPzk9MsByqwkqKAYkExUjQOpgHT16Fz07patyjmicVj
      CATlbJb05ASh5hZSW7bWXVNZVQk0WG7aCITrFpSrRZKioCVjFAs+CVmShAiE0QNhECZSKU8k
      v0QkFaOj7R4G+qyOcHYXMZsUVaVrS3X0UufmLYC17iGXJRRNJJFlmXh7NTy2phy0H97r1wzm
      RuAGd2SRl7ywUvWkrP+8Mehu5m/Pz1vvxxvh5CY343FDMe41cUx8IRwR1Ah2LmO1YdTRneQE
      O5nIy6wdS8fHOVyXREVw/gx4vz3XW2EF3AjT24iwrIf93yyEpRsGxXIJw9BJJpKUdQs+tSEn
      W5O3+xLbzzmXyzl5EPZxgUDAaZH5syJN1di3Zy+wujblcpmTp86QN1XGJ5cxDQO5wbDVhclp
      Up3tlj9N4JQZR6xGBF0bmULE2vxVPFmBZAticQapuQO9VCQzMwWSTCTVjBaOrPKOzDLhvjaW
      hq4hB4M0bx30fe5jly7S1ttHsBIqOnntKlIp77yn9cgMhiCzvKHIJIdaOwlcuUIp6mMF2CTJ
      iGAUPRgFIZDzy6TnFunY4DsSHx+hvyWFYQrKwqRkCJaDBsnAStVxa3aaV4N2/10rSsg+1uuI
      3QhE5B7H/ukIHlYTu2zy1tGpBU95rQk33u+1FBrBtNfTtN1jWsXQVsdUVMWjAq2O6fXF+I3p
      /UyRZSSxfnG2f+rUSGN3wPdZr2e92bh7rXHTmYzFlcwbEwSyJCEkmUKpiLm0RFkvOxZgMBAk
      VAkHDYfDBINBCoUCxWLRUazc2L+iKEQajF+/VeReNxsOcn8nhEDTNKbmFjEljdmlHOnFZZKt
      zeuObRgGKwuLbN6701JW7HHdx+gGw4tFpNY6zC0SR8qsIIoFFoavcvmVZ2ndup2Zi+fY8+jP
      07xpKxgGwewi+RWNZN8mx/lpk/t9v3LiXWJNKUcADJ89Q0BRLfhpHeFrRuKUZ0Y37AcAkLQA
      G2ipYTmdI02k83OY46PrQoXRAAAgAElEQVSYqRbUyPoNjEqZNAe3DdDTXZ3fsbWnizevDJEX
      AiMYQgqG1goAm+wN6taM3d/5aatu5mm/lF4nmRc3d5P7Ova1HYewi7HaJSvcvoJamqiX0Xs/
      87u2m7znegWFn1PZXhv38QDCFE6WqJ8T22+8eiRJUlX7xv+vkheqc1t0XivQSzbe7kelcol8
      IY+E5Jub0QjZghjTGs/e88ViEdM0CbmwfDvz1w5vtRvM67rOysoKwWCQSCSyoT1wK8krKN1+
      u6EJq+Bbngg/+ME7fOITtzuNxWvR2KUr9AwOVCk9zr1VrIDp6+NkI03rT66lA+naOcTMJF0d
      7Qxs346aXSF75RyZK+eIyybL87Ns/l/+Bc98+y8o5nNs2bufgw98hBMvPs/wmdMEIxEe/OUv
      OkNOXrvm1AiKhEOc/PF32PTIZ0GSGX75aToP3MG1536IME1kVWX3F76IJEnkYs0kFqaRNpgQ
      hhCY+sYVjbwa5e5NfciyzOXpGRZ1Ex2BjowpSQhZRlFVJFVFUlSUpQW69+1cM05nezufbmuj
      UCiwsLBAOpO1EsFs8mPmbkZXK9rHy+DrwQJen4H7xXZbDn4M0j7G64D1MmUH9sGqha+yWpbY
      e/16QsF97Ubu27tmfmPUgk0URalZDuOfKv005uZeS/eau3/aMIu3G1ggEGgATlkLLW6UJEli
      LcAN4RrCxy0IbIugaqyfIQlh5UFIkkQgECBfKPDiT97i+NU5qARATqcVvvvdt/nEJ26js6/L
      d5z04hLBSAStknhXi+1dG59HhDvXr227NIfoGUAyFa6+9hPGx8Yp5bPc99V/zbknv0s+u8Bn
      fvsxTv/kFbYeuI3BQ4f5xz/9E3q372T0/Fk+9Ru/xcVjRzn16isALExP8s7TT/GZf/XbvPPs
      0wTjcTQJZs+fIpxqxSgWKeezBJtSbHv405x54r9glksogSBmNE5haoRwsly3M5hRLpOZmSLS
      0oYaDCJyGQx5/UREqOYnhhri6vgMH/3AYfp7e6obShlWmZxiqUS+UCBfKhHdtsV/Pobh5Lgk
      EgkSiUS1ALAv7NXa3Rqtm9aDS2oJET9Mvh604sbovRExkiRV1V5xf6dXICTDMJCUtdnHbke0
      WwD4+QLWI7e/wf2ZV+B44R6vZePnyH6/yc9Ca4QcP4CwEt1EBeO9lXN2r4O31hRYDl47o9Yw
      DAqFghNjHw77N/2wKaAFCKgBK1prA+QNYAAraEJI1T6yenkS9r51C4KfZUIYWPkLiqIQCARY
      WVnhldeP8uSb5xlbFgip2jpYKgb47vff49EH82zeubaMwsz1cfp3WdFCfvk8EpZfZDxnIoUa
      2C/FPDRbDsyBD36YLXd/iKlz73HtjZeRAwH67/40+fkFlmZnGTx0GFmWaWprY2l2mmRrO7Is
      07l5gBMvPo8Qghf+5nEOPvARp42lGgqx5fY7ePuZHxNpaaPv3g9TzmUJRONIsowSCFTtu0Jb
      L8Gp68i9/iUk8stLvP34N2kb3MXs5fMc+PlfIqFJmA00tl/z/kgS56cW+XDlfVNVFVVVCYfD
      TotTm3eUy2Wn14ZNQggn8dBLqlezr1eVsxEHZS0Gb5/nZn72Md7uW+7j3SGeta5vv0xronEk
      q5hcPYeVF5Lyroc71K+ewKvnwHXj1e46Pd5r1cOy3y8SQlDSy47QURWl4d6/9vNbbSS/6gB/
      P4SA/Yyduaoq8UrlR/tvu7Syruvr+hbsWkQb6XVsX8tvr0my4iQAApTKq+tabyw7N+BnRYVC
      AV3XiUQiZLNZTp+/xHdffJfhBcPqh+s3f0kib2r84NlLPJDOsffwnqr73LxnJ6PnL9Hc3Uk8
      1VT1/qcXFlmYnCafzVGWGsjyXV5AxJLOGAvD1wiEo0yceZee/YcpZTMQTTCyUqZ3YCsv/90T
      HLjvQ0wNDXHPpz/Lsad+zPDZ05x86UUOPfQxrp54l88/9nu88YPvc+HYUZBAi0SJ5AxCTSmy
      s1NEWtpZzg3VnpOikAuEiGVXIGpFMAnDQJodB8PgyqsvsvcTn6d581Y233EPZ77zONv3HSIt
      RUl2b2bi7HG69xxiZXqM0XdfIxCJMfjBj5NdmGXknVdQgyEGP/goy5MjzI9c5uzsGAPBEg89
      9BDf+ta3WFpa4nOf+xy7d+9maWkJWO2KZ6+zDY3b+9z3Nh577LE/8MIxa5+1f/csv7C9emN5
      J+HHdP0sg3rM3zvPsquMg1xJwHLDP7VMcvd9uJmMHyzmvU/3fbgFildouAvkufHr9Syp94ts
      P48pXA5oG9PeANlrLbAchusUR70pstfY7v6lquoaRm9rSfXITr660bWvWTTPrgFVEYzRBpx2
      Py0SQjhZyO68Gbvq6amz5/nL77/MD98eYbEg+TJ+Qy9brQu1SqE7Q3Dp0jiaWaCrr6Oq8GGy
      pZkz75xCCwSQJYmpayMsTk6jBQN0b91CorWFqyNTlMN1MouFgPkpaO1CkiS0SBQ1GETRNHr2
      H6J16w6ire2EEk1IkRiKadC/pZ+FqSnu+czP8/8y9+ZxklzVne/3RkTuWVlZ+9JVXd1d1dV7
      S+pWSy0J7RJIIFuslmxj8GDDwHiZYcbbALbHNp6Z93gfPjY2n7HBNsxgm8UsMpvASCAhkFpq
      qdX7Ur3Wvi9ZuWdGxH1/REZUZFRmVla1gDn6tKoq88bdIuKcc39nC0WibNt/A2MXzrPj0K30
      bB8k3t5BNN7E4MFDFLJZegZ3EGtuYXl6inldEOvpo6GrBy1g1erVgiHCbZ0EorGye2kGwqgz
      YygNcViaRSzPQ1s3xFsYPfYim3t6UFKLmAsJRs6fx9+5jfTiLLGOHq6+9H3at+/l3Pe+yt6H
      HkPPZUnOTDB24gi7HnwrmuZj7uoF8qkEwYY4/a97iJPf+xr79+7h+PHjfOhDHyIUCpVFrdtu
      x6qqksvlKBaLa0brr3IDrUZuhr/6HlUuiuJmopWYvNvn393OLWTWMvKVzQHwqVaGTtM0UZXa
      qSyq2T9q7YEXaqoGn1RiLG5YwBv/sFHaKHwjpXTKTrr3wjRNDGGsq+iMTYqilGo0/2RJURSn
      PvB652hj3LaR9rUk6wSlOeNI+JkUeqlG+XyeD3zgA2zfvp2FhQUefvhh7r33XgzD4ItP/ohn
      Tk1gCA1E9RNRanGG5ZkxevdYdXtz6QRTl07x43AjmfQR7nrwFjS/j0wyxUsnLnFN62Dk2EUO
      79xER18P/pJdRAiBP+DHr0C1mG8pJaSXIbgiRP3hCN17byprF21dcavMNXXiXxjjxnvvc07+
      kcZGDjzweqdNvH2l/abtg5i6Tnp2hrnLQyRGJtn9jncDFiyklWC5SFvl9BIFfxD/yBB09DoQ
      FYASDFNs7sCnQCE5V9FWYOo6qbkphp79Jqau09i1mdTcNBefexKkJNraiTQlsbYuUH1If4i+
      vj66u7v50z/9U+644w5uueWWsj5tYV7vs+08mbU0/0ongLKFmGaZJuwmryZtt3HjuW5t2Dt2
      PczfKqZiOAFs9pHelFZG0bWYvXvsagzVLcS8xutqfXr788I/rwVVmoubqo1pmiZ6lSIrumHg
      U9c/R4FA0TTMOtMpbJRCodCGmKrtnfNaJpirRkJYqUzS6bST5+dnTVJKenp6+MhHPkImk+FD
      H/oQu3bt4mOf+gLPHztDS+8O8pkk01fPEG/voWPbPvR8luFTzyMUhb59t5f1NX3lNA2tlqvh
      wtQoL+ZaSKd/REuT5FohzKXhcVJz04iFKe6/7T8RLMETbiUqhM5isQDZNCKfRRZyCEVB6qUc
      QNk0snd73WsUQiEZ72bq0mW6d9SOWM4vJ1icnGIxUyQXbSJ20+u4YXcOvY4TsMhnCS1O4481
      QWcPeBwJeg/cyulv/Au7H3ozV176Hm3bdqGoGsmZCRKTIyxPj6NqPqItHXTuvKkUHwEN7V20
      b9+HPxCiWMiRnJ1w4PfZhSWmpqbYtWsXDzzwAJ/85CdXCQBYn+1S82rolaJ9qxmAbQihktdL
      rUlVi8p14+jriQq1s266vTmEEGiKlUK6Wv3gavNdC7Ot97RQz6nlpwEBVTKQuzX+SoLMMI11
      CypZMgYjhBPk81qRbZzcSG1fm35azN9N9rH8/wYBAHDixAk+8pGPcOnSJX7l3e/mIx//DN/8
      l8+x4/DDqD4/w6eeZ89db+baiecIRBqZvHic3t23YBg6l15+mq7tNyKBq68+Qzje5qBEQlEY
      Pv0ivsA9XPjq1zj8Hz/Epc99lkO/8j6mzpzg/MnT3Hbf3WXPXbFQoKCbiMUZK7VCvAWhqOBO
      9zI3CUYRWIeBXNWYVhvQj76ELxwqFfMRiFL6doClTJGUFsKMtUN05cQTGL6AHmup7uNvGATm
      JwhpGqK3H0llqKy1fwcgGD76Y5KZNI1YGv7S5DALo5cZvOtNIAR7HvoFJs68jKJqdO+5md2v
      fzvjp44ihKB7780EIjECUSsSuGn3rRR1g9HRUYaGhnj/+9+/po1pLdJqpSX2auBeqKea22Kt
      CdXD7Nar3WnKiheQF4+XVeIQvHN2//7TxGxtAbrRVA7rEUhu2M0KrBMYFU5uTq2D9Z4AnBOS
      WVfR+vWQlLKmT38917vdLddD1xPxrGnaz9y7x0179+7l93//9/niV57g9z/6l3TsuJXNew7T
      sW0PyzMjNHdtwRcI0b51D4npEQyjSLS5E6Rk7NxRAEbPvkg03sbWm+4hm7TiA+Idm7n66rMk
      F2aJdXVb2m1bBw3tXSSnJpkbt7JwmtJEmpbi+MJLZ5lv3kzN6KhAEKHXl6bBTTIYZp4gxPsq
      N6jijOPv6EWZvEIuGKUYb12ZmzTxLc0SLuRQuvpA8zn8pRIJIWgb2EHbwA4MXSc69ArbOnz4
      DtyOrqxk//SHo2w5dE/Zc73l0N1AKaVMcOXUFNu6m2tTczz66KNEIhGy2Wzd+auqUc2awJWy
      VNoeFtVeCC/c4BYW1WAi99gbSYnrPTG4513JddB77c+KvELrp92PLdztPVAVpa66w2v1+Vpj
      65qmEYvFrute1Xpma5Hb2Oyd01oUDAZpaGj4vypPU7FY5IWXjvHEjy+QzeYBierz4xc5ugY7
      ScyOUMxnmR05T7S5E0VRSS/NklyYQi0Vj+ndfSuReBuTl46X9d05cAOnfvAvbOravGrcubkl
      TMNi/hI4fvIiV7WW2swfwBdEbkAACCE2dB3BMNqWnURjjcTmxgnMjKEuLxCdHiHaEEfpHXDw
      /GoneDtnmE2qphHp3ca733g3/+neXfRqWUSpkuB61gNwdnIBKSW6rl+XQmST5mWYUA7RuB/e
      tVwhvRhzNa8fN7mZkC14NspAvLUAqvXj9rf/WZK996+FAPCecuy98HrIuP+2bCUCkNfF9N3z
      0A3DKiAvzXUHWFmG05XynxIIB0NEItfnSXM90I9ttG9oaHACcKSU+P1+UqkUwKoU0qqqOjl+
      fpYKhpc0TcMfjvDHf/HX5IsBdtz+JgCa2gyiW9pRunrYacL4M/9GONpJU1cfkXgrI6deAEXQ
      f/BepGFCew+x1m4mhl5FUTWaurYA0Na3g7HzRwmEm5GmwaYbDwHQ0NmF9BkUC0V8AT9Dp4c4
      nfZDsA5YTAgobqwkqPD5rWRy63TzBSDcgBKOEirkEcNDsH1/zTmuBYMvo7G0tMT+3TsY2LKZ
      bz/3Et++msSokcjL24eiKAwnCqTTaafWhKgw9npI8zJDr1ujFyOupUm78b16J1XLgLkRqsTY
      3fi21+bxsyRb2F2Phlhp3+pdlxAbT4FQiaSUlMwxlneRUv99lVKimyvM1qdpVunN60yFbSde
      2+i99vv9zvNiB+DYFIvFVp2O7ZOze87FYpETZy8gTYOWeIyO9vafid+/pmn033Y38/vuInv6
      HOmclUs+viWO6NwEQNfeG+ncsZvi0AWSiwb+cJSBWx4sW08gYsVebNpxAIBgpJFCNs35F75F
      /8H7MIsmFPJs2n8QsAybSjDA5JVrjM4lubasQ/vqU0JFUhQrR88GSPoCiFwGwg0bul4gwB9E
      hqJVAU0pJWopCNG5rsLzWvT5SWYybNZ8xBo03nTnLfzw0jdYUqNQSpQkRKneeOlR9eeXubU7
      wmwqz2LOYDFnoCs+ZhcW6erqQlGs+tLXAwPVzAVU6283eT1k1kNe3/p62rp/VvISqoX51/IG
      +kmTd16vlQBy/LlLhtufVXI4CaiqgmmuMEK5RpK1Fa3fepH8/gChwPUfbW0qFAoV7UP1kF3B
      q16nAO9pS9d1jrx6gm++cpGRvAYIFKkTocgv3babu2656af6DM7Oz3MykYdwjODenZgnz6H5
      FdT+XeXvhc+Pb/ce4qPDLI8uohNYbWyUssz46QuG2HPnm1E1H8gUwnP6NiONPDuRwGzohNzl
      +ietao7hdt0UjkAhv2EBYJPi05CGgazhkeh+nyspoNIfZDqRYl9J4fb7/exoDfHiQiluxHXy
      te1nQpr8whvuJlxK61wsFJiamSUcCjpOBfF4HF3XN5xKXPO6Y9oTrsXQX0uNfT0MudJ81rIr
      VGv703jx3HV63eO7YR93lPD1zMvWnk0pMaWB9hpAOuslpWQUCwQCKELg03w1oRfbV94fCOD3
      +fFVCOqqda1NtdbpDn83Srirs9eUToMV+rFTNFfr28ZhLUioBFi5HCSOnR3im69cYKwYACXo
      WNsMVJYJ8LcvXObc2DTvfOguoj+l08CRMxfIRxpBSkQgRGT/bqSwIpi9JISCunkr8ViM9IVr
      5PQVQ7ZP5oi2B0nO5NCF9blAENBMwjEd37ZdEC6v7YuqYsZKGUTX4+ShKFaE7bpXiwX96BuD
      j9xkdvQiJoehY3PZ82OTYafHroV8KCpTyTSUrtc0jQP9mzg6O4Kp+WHlKXSqnxhSYOgGgVI+
      pYDfz0A0uqrreDyOz+cjnU6vu0yrVgn398I99eD+G9H+3XCMbQSu1ketFBW15uVta0Na9TIa
      7zi1PHYcOADpFLF3M2KvjQRwauu6BdN6ISFjlafT+j14XguyxzSKOmbpJOL3+yvmILEuKFW/
      8q0kyHKnCrENtzYMY5N9H3XDsDyWlNrV4HRdt/ZVVQkGggQCfqRpRera4fJSSlRVw+/zVa2F
      LaUVSTs9M8P5y5f4wekRUlLDkFY2aVOCbpqYEoxAFKmEq9ZqkKqPZ8dzDP/zt3nv6w+zdXPP
      a37P3IZvIQTPj80hoy0rDQLBNRmriLcQvTGC78IFUklLWEb6WlB7+mhsmSV1cRS9qBCKQqCv
      F9HUtvbE1gvpbLT2dGoZIo0bu9ZNEmjpQsxPIlvLUyw7fKEE5XoZsPueji1nHMhX0zT2DA7Q
      fnSIuYJOUJFEfYKgAk3RIO2xMPFwI9EKDN9LPp+PWCxGNBoll8uRTqfr9ngTk5OT0m0wrab9
      u484lU4A9QgAr29/JQFQK0agXqqVk8fOe+PTfKiqUre7olsAVevfKgZvOJq/UvKqqbRXdlF4
      d7EdBM5162EGlvFVd6J6NVVbdzqHnxQJIQgEAk4OfLACudwC/8zQeZKptFVYBYkJWLsoUX0a
      7aEG9u3YtUpoZ7JWUZWmeFNVrxwprQRZmqaVmPz6BL/twba4uMjQtSss5NL44zGOnbjEiYXy
      MoUbZeBhM8fvP3ILg/2VE4tthKSUfO47T3NxOYcwrYyRU8H46mpU9fZnGpjXLmPkCvh27nYK
      tct0EqZGYOuuuou3y/EriE3rWOvoJegdWLNZen6WuStDKIpKvHcLDYU09PTXPw4w/NKP6Lvl
      dStDv3KE7v0HUDQfIpWwvHfiLThQvdvbp0LpWSEE6EXUXJoBTee33vJG/KXEcrquMzU9jTRN
      QqEQ4XC4TNlZr/3LzX/T6TRLS0trp4Iom2gN8hqC12MjAFa5lbr7tCViNQ2/ljePuz83BlYJ
      h7ON2laa6CKgOaH7UH7jatU6qIa12XnlDcMAIarCMLYWYHuPWHMCSqmJ1wuxCWEVorexf2WD
      jMg7R3ud12OkthlwNBqlUCigaRqFQsF50F86fQI9HkZranNcs93OBACZos6zx4+yd3M/7W0r
      GqZSCvSrVqrT7svvX52CN5FI1HTRlNIqEn/xymWmlheR4QDRjiZatFIO/I1qpRUoK/ykrtOf
      20sLi4u8NJemEGtZu3EdJISCEgmh9G4pY/Qi0gCxJmQhV3eVLOEPQi4LwdrZWh3y+evCtyfP
      nMAo5Il1dnPiK//IDXfeQ4O3zK/9HlexZ0yfP10mAGYvnadz935Unx8ZbYSFaZR8DtMfLF0H
      YAU+miU7ljNPabJFT3Lftk309+4j3tjoYPc2DNSzaVPV9axXoXC3j0ajhEIhlpeXSSaTVfmz
      Vg36cV/gDQazGWm95E3m5p6o7TduH9OrLawaQ/f2Z5NbY3dONZT/XWuD3d453q2z98d7va0B
      uLNLVrI5CCGcJGxmqR8hLfOPFFA0dFSplAmntei19DXfCJxXi9yVr9LpNJFIBL/fz7WxUfR4
      BM1f7g5YFrshQPVpRHs6OTkzStPUBDft2Wfl1A+FCZdKAtZjP5qZneX40GVenZxnvCDp8MH9
      A70c2LMLTdMc28zlK1cYmZ0ijUG8u4OG5k2r+g/6Xrv9Vo0Czc1rV9haD71ybohCtKluW0lN
      khK5OItsiKP4KuSzb+1CTFxFdm+tawwzFEXJJusXAFKCodfMvW9T0+attG4bZPz4UcxAiHPf
      /VdMXaeQSbP93oc4/uXPoWoanXtuYMvhuzn2xc+g5/MoisKBx/9daTjJtReeJdhoFaqRwNF/
      /BQ3//J7yQciXPqX/03bgds4//ST+CMRFJ+fm3/5vY4NSFEUZCHH7VHBY/fcj9/nq/h+/qRh
      WlVVicfjRKNRlpaWyGRWZ13Sqr3oXnjGzfRt5lcPk3Bfb/90u85VI1mSqIpY8ZWvVNqxHnIY
      NgK/5sOQZl1pj03TtIX7KqDIHVFbac12G3uebujB2Vusil4C4Xg6SClBsbQDaf50C4Tb47/W
      gVx2v8Vi0cL8AwHGJsa5lJgl0ly5GpSEkla2orHF2lrIF4t878Ufs2fzNjb39tbU4IvFIlMz
      05y5MMTLc2nGdAUZjYM/Dn4YAT5zbYknzj3JnT2txAIqi8UsDZ1thPq6qMWeouHVjNB+It13
      rB7NVdXztDY31WyzHpJS8uLYLDIQX5nQ9cjzbBqEQKnmTSMENLfD4kxZQrRqJEIRSC2tPW4h
      DwtTUCwgpkeRpoHwBZHRGCJaGds/950nMJIJRCxOWFVYHLlK554b2P3Gt3L8y5/jwGO/Sije
      zIuf/SSN3ZsJRGMcfPztXPnx95kZOouUktFjR1ienmTLbXczefq4ZfdoaWP24jlSs9PE9xyg
      OHyRgTvvp2v/QY7+46esuZUyEoSLOd68pYW7DtzwE3t/Ld4k1jztCyHw+Xy0uSqBuQsnlamY
      bozbGyXq7tDddq3BK6Vz9kIrFTV4aWKYJqYQDo7ujjKtpw+3kHHbHzSh1o/9SxNN0SrmSFov
      rTL0mit9ufdGSmnVMXiN0ynUM79qQYCvBdmFz6dmpjkzO05DWz3wRPkeaD4fTf2buTA3w6XJ
      MZrCEXo6umhubkbTNFKpFONTk0wtzJMyCwQaGxhaTjISaEYEK6xH1ViMtvK9K+O85e69tAVr
      FOx2UTgaBrII4YIhXfDCehQUTRqvabqI4dFRxucWEG0hpD/g+Jg782Qdz69eRC4vIjp7a7cL
      RRHJJWQxj/AFarcVVpRuxRmYJiwvWllANR+ypcsK6KL0JBg6YmEaKU1Eg0doSsn2A4cI33Ar
      YydeYfzEUUKxOL0HDiOEQC/knSLyqs9PIZMmELWEmj/SQDGXRRoG48eP0rn7hrKut91xLye+
      9nmEENz02K8yqesM5BcI5ZbL3pPmXIL33LKH7Vv6au9B2ZIr11m3qajr6K58UqaUPPnDI2zv
      7WT3YP2J8oLBIF1dXaRSKRKJhJWptlLDagzbnc6hnhOA7W1TyajpxuS9izel5eGhKEqZMdPt
      vWMzK3su9UAAlSCuSgZvZzxFIA2rsIfm0eDrYY5eg7rjp49Sthb3HO2Tj0TWbVT7SdFrpb3Y
      Nh67QtfJixdo2Fod+ywnrzOtRQ2louQZXefY1DDG5fP4FZWCApHmOMHNHfhL93QpmUE01q5f
      26RJ/Otgwqqqgl6ECsxuvfBZXKZfU03xxaGrGK1dkJhHFPMWdNIQh9CKR0k9JxNMEzk7Dh11
      Bm21dlvukpu21m5nvxcFl6eKaSAS86DryFgTdG8pnZI9pGrWOFPDyHAMYfODbBpjYYpLiwlC
      84ssDV9i330PwUs/ci7tPXArr37pfxPr2oQWCNI2sJOhp7+NomlMnnqVm9/5XqbOnuTmX/51
      Tn7t84yfeNm5NtDQiBDgjzag+QMgBDNKiP+6dwvXnlTwZ5Jsj/p41/2HaYrX73lkmiaJRMIp
      5lLxnkjJ0nKCWEMMVVH40lM/5ntXEzwuYNf2gXXbCxsaGgiHwyQSCUsA2H6ndoOVcVcHaVXz
      DPKSV/OvpnlUhFBKs7F8dCovrh6YwrsW7xqMkpBxt181PwTmBt9NtwA1TCtFAlIixerUC/b8
      dMOwcG9ldXnJnzS5T1m2p8JG4CB3P3Yffr8fRVEsGEj1WUm06hDcrHFWUzWNxrYW0sEkicUl
      2ju7yhwKpJQki2sEoxk6nU1rGzCz6QyhiNXO5/chDEsAJCZHaGjvdvzp3e+TM4Y08aXm0COt
      oCjkkgmkNAkHAmzrfg1cFUuUz+d5ZXoJEW1xjLKyWIDkImJhBhEMQ0tnuRG0Csn5Kcv9sV5F
      RFGgsQm5NIeIVxe4cmqM7Mgs5sic81kgYKLtO4Dw+dc+9wrhuGXS3oO5OEumUKDlgTcTTSUR
      QrDl3ofQNI3doSBawBLsHTv3EW3rpJBOEd+0GUXTuO3XfovExBg9N91CINLAjW97J4qisv/N
      v0gxm6F9cDdayQ5VYjMAACAASURBVFYRaGik79Y7AejaexOKqTOTyvJ3n/gL0tksLc3N+NeZ
      /kPXdXRdR9M0xzPQS6qqIoDZuTm+8cJJjszomELh6sxSfYK8AqmqSlNTk4UySCpXv7JfXjsH
      Sr0pHmwG4C7eDqt9+Wtp7r6SUa6exbltCu5SaJVOB/WcWtyauxDCYcYbNY6apllWeMWUVrF6
      r4At6rpTXhG5krO/qOsbGnejZNtc1qqpW42klGU1S+18+COjozz542cJ+PwkF5actmv2t8b3
      546f5G//n4/z/FM/4LN/8UkMw+DbX/oKAPlMljzlL9XC8BVmL11w/ha5DJ3ta2Pwn/mLv3Z+
      D0bCKKaFpY4ef6GsBoJbmbKfvUA+yVvv38WtXQZabpnExDBL49do9+fo7qv3NLQ2nb10maVA
      tPw98/kRzR3ITduQDXHkxDVIJ8tcGFdRYh6CYYR/DTjHS6oPsTBt4fcuklIiM0nyJ46zdGWB
      jGwgJ6POv2JOOlBPXeQPgKKij1wihUKxqR01ECTc0kaoudVi2qqGKDFPsO5HtLWd5r5tKCW3
      YV8oTGv/oJPewl+KulVUlUC0AX+potvoK0eItLTR2GW5FWmaxr3NAe49sJ9YLEZ3ZycBT7yK
      l9w8yuZTtmdcMBisiSrousFn/+0IP5oqYGKpRZPLmVV5qNZDQgg0hLByZVuSAKhct9f+3X1x
      JXuAzfxtH1Z3jv96fbBtA+l6qFq20Vo3pNIJpporqRf6Wo/kFcIKinKXXnSfACxGbzF/RSgo
      rJQUFMpP1xLgXtN6feZtsh/kQqFAQ4OVy7xYLHJ29Cqtg1uZm5lneniMaHN8VQI/Zx7Ub7c8
      d/wkDz76c+y92UqtcPzFo3z9n7/E5Og4Bw7fwuWTp5mcfBJ/MMzON/wc577zBIVMmo6d+9j5
      4CMMfecJMlG4/9FHGNy7my9+6h9Ip1IYhsG7f/s/EChBQ0bpZTt19BWe+fZ3GRpLMfDgO5x5
      LE+NMnLsR4Cg/47XY+hFJk6/TC6xwM4trbT/0h0kEkukvv5VJi+N07n/dvb2t6Fqr00+Jikl
      R66MIbXKglsIAYEQbNqKuTgLyUWUtu7VsQHZNLJYQLR2rW8ChgFLc8gtuxBTI9C5uRTJq2OO
      XiM9vkRBhFcfjwDDLNkF6vD0sclsbCWfz2NEqpSUFIKCL4g/n4Hg9UVbb775NqD0TJoGt4V0
      Hrv3rnXZybwBn/ZnkUikprIrpeS54+c4l9acU7MQgsmkleTwepIOKoqw67muHrRaGmf7b5vR
      20my7Pqsbpe62oOvPxOmVyBVgqkqta8kxLxtiobuKnC+up39nXtf6iH7FGGvV1NUx7YhpXTS
      CZQ+wJRmaS7Wh5FI9KcCAbmpXttKJRJCkC+51tkC8+yF8/hbLYYfa29h0/ZtXDtz3ikh6dwf
      yoWA/a/W6ev+Rx/hB996kk9+9H9y+fwFbrjlZvYfOsB7/vNv0dreTsuu/ex95B1ooRCzF8+z
      9fZ7GLjrQXY99ChjJ46yJR7k13/vg3z3q/+KYRhcPj/EO3/j39PS3sbU2Piq8Z76+rf4hV//
      d/TvP4i7ElQw1sT2u99Ex479XDv6DLnEAoqqcvANj5JLzJNNZ/j6P3+R3/qTD/O+//gebuoN
      MbC7n4occQO0uLTE+WTBuQe1SGlqg9Yu9OlxZGJ+ZW8N3bIdrJf5A0yPINt7rIpeLR0wP4lc
      mCV3/CRL41mL+VchExUyqfWPuQbpTW0Up8dR8lZKkvWc4iUeJdA6lnMwaPLL99/p8Lv1vCP2
      +25HadtBkbUEiZSSgm6sgu2KSoCp2bnrQgcUewCv61o1BueGSLx/2wKhUm7+Sv2sF1+2oR37
      p1s4VdsELzxUDeoyStq5XV6ysgAoP8K5/9UDLWmKik/VyvbEMAwMaZ0AYEXrtQu2YFqhTob5
      2gUe1UNSrgRw1cpcaZ8S3AZ/ey/s73K5HCNLcwSjEeeeh2MN9G7v58qpM+Rd+YIUoWDDklAK
      8qJca/JSY1Oc3/rjD/H4+36NL376M+Rzead9YjnN+Wf+jSs/eppcYpFibmUsIQTJqQlmxkf5
      4qf+gUAwgGmatHS0EQgGiTQ0VKxx/Og7H+cbn/8S557/PqYrVfHkuVe5cuRpEpMjmIaVdyjS
      1Ma2JoXO3k0szs+zedtWgqEQqqrS29+HPxCoDcWsg85eHSETrF9ZUDQfatdmjPkZimPDll1m
      ZgzZtgFIanYC2dzhGGVFwDqFLJ8dJp0PImvUGQbQRdDK3Pkak9R8pDr6SC4tICeuWlHRlN77
      GmdMKVe8uhz+IiWDSpZ33XN4TbinGnn55FonCPtdKrigHvsdMn1Bxqdmrl8AWJ2ujc3bk3d/
      5xYA9XrH2BNejwDwav3ef+65rXVjVrXxCARTrqQmtsnWxh3G5Bl/PfYRzwflpxNh/VRLtY1t
      +OSnneFTSkkqlSKdtjxUGhsbHW0FrPwjvlKAi41hSinx+XzOfbXbnrt0kdimzrK+hRD4ggG2
      7dvNxOVrLM8vrDxDpbUriu0GUPuePv/UD3j1hRdJLC6iqhqKIijkC1wdusj09BzLs9P0Hjzs
      vO7+cJS5K0OkZqdp6dtGV+8m7nvkjey6YX9dUdQzE5M88vjbiWoGmcS88/nctQv07L+VQCSK
      tMuUFtIcvNFKexBvbubS2fOMXR3mzLET9d+MOimVzeKtTVsP6YksyZFlCq++gozGHSZeNyWX
      rLxCnkhgGYjULdwkAjOTXt+49ZKiUGhqJxHvIDcxbNkorEErIwJVBEOPnuaxm/c6ydnWSzY6
      4vP5nNOD/W8t20G+sOK775xMhOC5ofHrsgOo//m//Of/ZhXwWO0e6aVqzL/a97UW5O6jHqqk
      6Xu9i7z/vOPZn3s33KQc25fSCkCzGY+NxwOOb34lG8lGIBP71GExvhLzK83PFmrGBoqrrEX1
      3AP7lBYIBByDlV3oxDAM/H4/pmni8/nQdR2/3+8cbRVFIRwOo+s6x64OOW6bXihOCEFTRxtL
      M3MkF5aIxGNlY9ean03NbW1cPnee6fEJHnn8HcTijWwZ3M4rP36BhVSR8K6DTJ07SfeeG2nc
      tJnG7h7y6SSZxXm2bO5h/0A3F8+eo3/nIM3tbcRbmmlubSXa0EBTW6ulpQPxlmZaO9opFoq8
      /KPn0QPNhDbvJhCNEWyI09Szlenzx2lo76a5t59IUxsDbQFuueMA8ZYm2ro62bZzkJd++Bz9
      OwcZ2L2TcCRCdjHB4OYt1w3zXZuY4GyyaHnj1Eu5DNlr0xhKkILug4VZfLEwIlCnS2w+B6kE
      sql99fxVjeL4OIaoz5DsD0jU1jqSyZVImiZ6OlndBuAlRUWPxCiYJtr0KKo/AGsYni2PLkmX
      nuG37z9Mc2NjVc3dVgR1XSeVTq1K61KJR3ltqTa64XZEMaXJkdMXGMt6PBSFYK4g0FJz7Ny6
      eWMnkvGJcSkoh2Pcg1cz/HpPA/Uyf2dR6yiE4taw3fOplFvIe519rdXAMr66YQvDNCzXS1yp
      mREORu8Yaj0wWSXyxk/US7quo5tWCmdv2g0L+rFyDF0vg3AX/zFc9oxKCevc14TDYaf6lVvo
      KopCMBh0cpG7qaGhwREMTzz/DF39W9acW2opwezoOD07BlBLXhrXs2a9WOTr33uZ5bbKY0sp
      aVsa5ZHX37rq87XGllLyne+8yKVMZGU/VDtiXiJLL/FmZZGff/OdNfsbu3CJnzt8V02vq7m5
      OcbGxtA0jc2bNxOLrWZ6z7z0Mv88mqyaMmHy9HG69t7o/D1x6hidjY0sjJafHPxkiW7rRHR0
      19yD9NwMuSvnULu3EG3rRAusZvSZF14gI6u7uc6ODNG2eRCAhlCWeU3Qve9A1fZuMotFsjPj
      FDYCWQG+hWnCZhGlfRNSrW58bi2m+Z37b6GlRroO+13K5fMsJ5cxTZOGaAPhEtxXjTdBOR+z
      85G5nWhM0+SvvvQtjsyVIyZaKXmm38jzX990M4P9W8v4s3c8+6ebjyuCyp4w1Uo6VsLb62V6
      boZfL1RUrfi8mxwm7cHl3RLWKEUWGx4bgiJWpPkK/FApNqF8PHecg/tItxE8TlVVAj6/Yzy3
      11LQiyXoaQ2ssk4qg2akRAhWCRZFUZzkaZqmEQgEynKIuIWqYRgVq22VVc4SoNZh5JRSEo03
      smmwn5HzF8kkU2XjrWXrqUSZ5SRZvXb7jmh1DVBKSSqxXNUWpkqXrUhYaId3jtnc2vnoW3u6
      OX6yNiT0la98hWeffZZjx47xwQ9+kNnZ2VVtSgY97yKcX0ePHSn7avTYixTmE6tgowIhli7P
      YVy+iKyW9E5Kzv7rF5hPZ5k6d4oX/v4vMY3VUIQaqSTUVuY0ffWM87uR11fNsRYJ00BeR0W7
      YnMHiaZOslPjiLnJinBVrJDi/bfvX5P5G4ZBMpVkcWkRw7ACPv2+ldrBldq77Yf27zYk5G4r
      paSoV74PQgiKWpDPP3sMwzDI5XLoLrdxKa2so7l8joWlRXK5XBk/1db7Ukm5UoWrkk2gnuvr
      bVeWFIxyV8xKhtxKaQzsOfpK2r5tVDSNcgHhkCiPDq5HG1RVFb/fj2EYG6rMU0laFw0d52Qm
      BIYwyzMNutquNT9ve9vOgYRIKFSmNdgPpO2+mUqlVglg932oRGXCXYJWh03GXofP72fLnp1M
      XR0mm0zR0t1Z89pqlFxYYvLqCMWAB5eWEl9iFlHIYZgmwRaV5GKCSOPqzKDJpWWeePIYWzob
      OHzHPgcKsimgVdLqKAlX67tcYW3jfTAS5urpC9y2RruHHnqIgYEBrl27RjKZ5Lvf/S5CCObn
      53nb297G3/71Jzi1mGXr6+6nfXA3p7/5ZbKL84RbWtnzxrc5/Yy8/DyhphYwDTJJg8snnmbb
      gfvQCzkmLx4nHG9l+soZpJ6ntbeDPY+/ZzUktDCNoihsufVOVJ+f+StDmIbBxR98Fz2fJxSP
      07ipjwv/9jXyeYWtN95NKBpn6MXvYugFGtt76N29cvK6dvJH9G3tQxby5JYTDB/9MYP3Pczy
      5BjLUxMU0imWxofJp5J0772JvkN3UJyfptiysefDIVUj195DIZsmPH4VX6wRgaBRkbQGNR49
      tI/erupj2Aw2mUqScb37gVLgo93GpkoKbbVykvZ7lslmmUvloEJ2KvvdsYVOJZdQXddZSiQI
      BgJOOgl7LlWTwVUjt+ZbLWVyNcawXkGzlnHV/bmXWVcSFg6O7tLUlJKfvVryPqk1Rq11ZbNZ
      /H6/UwBFURQCgQDFYnHdpwLDtCKU7ZtKSXgZpmEFyHk0tvUKHLAK1YDlq+9mwDbpNYLP1rrP
      7uAWAKXK8isJM1tgd/dvZWl2jpFzQ4RiUTSfH82nofl8aH4fWpUMiwCL07PkszlCDQ2QWtFK
      paHTmZ7mdYcG8QdKkc66TmJugbnxSfRi0dLANJVwY4yXjl9lyd/CiXnJ1LeOcv8dO2jpaMPQ
      dYZOD3F1rgh+LCcCWUrf4VlXsU4/B92vMT09TUdH9WRqH//4x1leXqarq4u+vj7+/M//nLvv
      vpsPfOADfOxjH+MXHn+ccELh+X/6O7RgCEXVOPSu93PmW19haWwYgKmzJ1m4dpkb9t7IpblZ
      jMEwxVyW9NIsS1PDhGMt5NPLtPXtpG3zDs4882XSx88Q2bUNESsFy6WWkKqGoai88oV/IDk1
      Qfe+A6iajyvP/4D9jz5O174DvPjZT3Lzo+9gdiTDpaNPEW/vpaVngLa+nZx97l8pZNMgTcbO
      vYxQVHyRVkQ+S6AhxszQWfrvvJ9rLz7H1tvu4cqPv8/gfW8kFG/i1S98hu6eTaSbuzZk9K5E
      ZihCKhimafIyf/aLbyYcDjmpGWq99zben/acknWjPLU8lDN/92ncnd7GS0Vd5+KVK0xmgSoo
      lZSSluiKcPDCyMm0pcQFPaVWTdOsXhO4ErkDvNzSrV5DaCVGU4uqHf29/dcrhNyarnvTvYbJ
      epi+Te5MqblcjlAohN/vd/bJ5/ORy+XK8L1a/cqSZu6OznYYnVydFWejCdsq7dmqeVSbX4XP
      pJQODOYWHqpqub7WMx/vcxRvayXc0EA6sUyxUCCftioqSdO08kUVihi6brkvIhCKgqqpxJqb
      6Ojr4fzJ80h/2NqxbJo9/gw333tg1Z6FYytZLk3TxDQMFqdnmU8WQAMpBFNmjK98f4j93cNc
      nUoxRwzpb7I3wJqzaz+cF3AN90ebGttaOHb2NK9vba0agPfBD36Q7du385nPfIYjR47Q09PD
      Y489hs/nI5lMsnXzZpQzE2g+P9nEAg2dXQghaOjoIre8RCGb4cy3v8reR96GfukShaJl++nZ
      fYjxC69QyKbZfdebmbp0Ep/fYhZC9ZHVAxinrtDQ14ISDIA0obUb1R/gxkffhRYIcvSfPkVu
      eYmWrdvp3n+w9Owq+BqbCPoKIE1ymWXinX0IIQhGGykWsqQT86QWp7nh/l/ERIOS0rP1tru5
      +uMfkF1aoKGjCyEU/OEwQiiYuQyZps660kOvi4QgGY6TTCdpa2td0wZULBbJZDKk0qu9l4rF
      ouMY4Yao7Z9e5bQa3zQMnVOXRylqQav4vOv0YNtRpZQ0hkvKVgWl3DAMQp5IYxvCrUsAeDFv
      92LqZf7uTJ7XS9Uw2XqFi70e207gxrQrtas1DyEEuq477ewAKHvj7ZQIdh4csLRr+5RQiWyM
      3mTlgRFClAWP2fN7Lcjuz94D9zGx0hje6F3TNB3cXwhBMBgsq9AVqPCirjV3WSq55Av4ibev
      5JVZz5pTqQz4GvEvz3FbXwNb+vfVJdAVRaGtp5tDOxM8dT6N1Cw7Qc7XwEszEtRyPNitbTnz
      Lz0bUlEo5PIEQtW9agr5PJlkiubBfl44+Sq37rsRX4UKZ8888wxnzpzhyJEj3HvvvWVrOXjw
      IP/0j//IsBFC9Qdo27aDlz73t/jDUUaOPs8t73o/o6++xG3v+U2O/q+Pke07gO3WEIm3k0nM
      E23qQLWFtWefigQpzi/iGxxEBC3N2DR0Ro+9CFKSmZ9DK2mY9rzC8WaunHyV9MWrhONttHRv
      4+rxZ+kc2M/y3ARbb7iLSLyNwVvfwJlnv8ruOx7BlNaztWn/Qb7z0d9jxwNvKp2CrXmYc5Po
      gRByPWkj1kF6rInzFy+zbcvWmu2klBQKBdLZTE3es9b7s1YEcCFf4NREAkVtKNkoxYpLuo1y
      AGG/VpFfKYqCT1udzdgWQurv/M7v/Ldqi7Q7rBTd62Yabril0oLqYf7uft2wTz1MvdJ41WIC
      3Li/F+uvNJa7H7e0ds+tkk3CDvu2mb1dQByskojunNyV5ufWEISy2jh9vULA3md7foVCgWKx
      WCpwrVgPmWAV3OQ+PbkN7YqikM1mKRaLjvYTDFoMYWFhgUJALa8kVYddAGw3vPLP6137uaFh
      tEKOB2/so6una9171dQSZ3joKmkRXDFbClFKUyGrxicoep5tviUKuTxG0WD3tlYC4coePtI0
      GTl/kS27BlFUFTPoY2J4lK6WtrKTQG9vL8FgkKamJt7+9rfT09PDwMAA8XgcIQQ7d+7EMAyO
      jk6z/YFHrBw327aTnJqg/84HCMWbaOzuJShNGoiSN300d2/FZwdszU7QveMm/KEIwUiMYCSG
      ompEm9rxBUKoskh0awdKY4uz5ljnJoSiEGyMs/2eN+ALhWnc1Iu/VBC+bXA3uXQKNZWlY/AQ
      wUgjoVgzueQSffvuQPMHiDZ3EIzEaNnUj5SS7v7NhHqs7KOzF8+x6+G3oGoaDR1d+HJpMv4Q
      4S3b8YWvL7VDdRJEsssc3rNrzRNAKp0qg3pghWcGAgHCoVBZPjQvfL6W/dQ0Ta6OjPLdC9NO
      im33CUCx+QMw2ORnz8DWikqlKU3y+QK+Ur1ru28p5eoTgJvZ2ROsNtF6KtDXk+7Bi/Ovhf17
      5+t2b/Suw/03rDAUt/Zvz6HWGNV+r7Y37nXbEJG9NiEEkUiEdIWjo93e9ijyjmfP2y1U62Vs
      tkCyhVGl/Q2V3NaKho5hrpSorNSXbUNRFGVVRTf377sHd/DDE68Q2dQOSo3cRhZndfov/Va6
      Z5XnYNdRrvRdX3uczYNbnVw+6yXN5+PQnm6+fXIRqfrLtGJ7zEr2F2EUueN1+wmEw4xeHsZf
      w71zemSMrq19jnBUNQ2jOcqLp49zx403O313dHSssg/09KzUO1QUhRtvuIHeBQOzdHqItLQT
      aVmpbxBtaqZ44jhFtZFwDCegaGLoVQKRBiJxywffH1phruGYddoJagVoKR+/ob2ThvZyA2m0
      daWNoqp07z9ANm+S0a31NTR30tC8co3dvz1mOGBFap978gk23XgIX8n4HFIFKRnAjDYSXrtO
      +sZJCC4tZapm5ixv6qoxomr4/D78Pj/+klfgRlzC3SSl5Oi5y5j+MAqVeZQonQjszKCVyO8P
      kEqnV53cweMF5JZK9UbVeidjd+7FveqlWph/NejH/rmWxNZNw3pxPdp6reObl8l721aDwGrN
      J5vNEo1GyeVyq4SoaZpWxTJFrSjNbcHiPSnUQ7bG7w5Fz+fzzj0KlTQWB75wCWH3GG7sUUor
      +rdYLK7SdOy/A4EAh3ft4/kLp2jo7rAYeoU5C1bKdtp7W/piVcpy5zvvEcHVZvv+XXXtSy3a
      unMbnWefY0KuDTk4994oIoRCMBxi+76d5adDcLyEioUCuXSGzi3l+fZVTSMfC3Nu6AK7d+ys
      e66KqlqMosr3odEh5nNBx2hty9vuwZtqPkOK1Nk50MRINg31Bl05JFCDAagzzY9RtGIodr/x
      Lc5n5uwUuflZjG3178X10KIWYmJigp6enpr7Eo1E8Pk0NM3nuFPXUgrXIsMw+Pu//3suXLiA
      qqr85m/+JieujoPWjBT+Vc7gbqVyYjlHPp+vGHOgKgoN0YaKdk/Fy9DWYv4ObOKpr+s9WniN
      nrXIqznWc/pwX+eFTOx5uE8Rdq4f0zScZEy2JlxNSK0FIUF1Q3UtsqEWb+CPlFaA1lpknwTW
      m4hKURRCoZBTmUvTNMfn34Zr7BOGpqhoqlY1LF7XdScdRNady0cpz/xq70soFOJA33ZSM/NO
      Efdqa1u1Jun8r3a7nwApisLhG/tQitk15+AIRGGi+aqY11zrnh4epXNr5WIrgVCQKwsz5PP5
      it9XouamJgZLcQ3e/Y2lFxhoiCKFWnp/S2tg5SRQ8Z5IyU2DYW5//e0cahOIdKLu+UDpNBus
      39fEKBpQtNYsTRP98hCJoUnyMxmUTHJdY2+UCqEYpy9fdaDbapq3z+cjEo44NX/rSetQjaSU
      HDlyhEwmw8c+9jHe97738Vd/9Vf89lsf5Fd2xnjvjW0c8C1yWwtsIsnsxVMsjl52nCKGLl7k
      qaefxjStAjMjIyN85zvf4erVqyiKwvTUFE899RRzc3Pl7vLeRXkZXEUSVGTSUlqlDE25vkhf
      u49K86hEbg3Wy/ztvtxCTK7gCihCQa8Cf1SiammmbZjKu45q1zt/l67LZDJlgV9OH7AKW64E
      idnMej1eQJXmp2mak6/f3cbeR2/hGptUVXUEaaWH3z4hZHM5pmamSaXTNDU1oWeyXj66iirf
      m9pKwE+Sevr7uHtHA4FiGoW1hU9AA1+FqFg36cUieqFIMFw9Q2a8p5PjZ0/XPU+fz8ev3nWI
      lkI5o1Rzad6xq4/JeffnrmfJ9ZdX4PfEixy6z4KiBnb3c6hdRVmnEFDCYctzqA4yTA0KeWQu
      Q/7USRJTeQwRwNAaUIZHygTo9ZL05PuSdhJITePzw4u8ePIUmWymoiLr5jUbYfw2T7Hf62w2
      yw9/+EPe8NBDmKbJli1byOVyaKrK0Plz3H37YdKT1/j1Rx+kMzdFJL/E7JVzTA+d5PIL3yOV
      XOZfn/weTzzxBC+//DJ/+qd/iqZpfPSjH2VhYYGPfvSjBAIBXnrppbL3y+EedTN/rHtgFyz3
      Hm8t7w25oWOQl7F7yc3c3ZvohWHcWqiiKGALGGHl3akn4Zd7TUYVDcCd0a8SI/bOzTANinqR
      oqGTy+WYnZ8rc5m0sUSvsdfW9iORiKNZ2xHI10tubb2aMKknGrvadcWiFWegaRrTM9OoDZHV
      WnNdmf9fuxd/vSSEYP/BPbzlzq00yeU12/tUBV/A71xrk/vFmx4eXQX9eElRVRZkgcXFxbrn
      2hSP8+4DO/AVSn7phs5dTT58AuaaWwgoOWtelL+3pQ/LKKrluOehA85aAPp3beOWTg11PUIg
      GEKVa0dEg+Vya06MkD5xjlTKV+ZGW0zoqEtW8r3FK0Oc/fLnOP/E5xl74ZmSK/D66NKTXyv7
      +8rT38LIW/uTDcf4hzOjnB66VPH93yjZSpNhGA78ainOBkVDp5DPUygWWE5az5k7LxhY7+iJ
      EyfYFg+gKApLY1eYvzaErhfRTcmJE1ZE+WOPPcYDDzxAT08PgUCAWCzGyy+/zMDAQNl8FLcU
      qwdHN0wDw7By19gav13uUCJXsjhW6cct9aSUjjZeET8XOJBIJdjFTe5rV7V3exWtkVp4pUPr
      h1Wc3qj6EKwlOMv2YgXSdiCyatqFvU77/ui6TjqdttJGBAKOd0G9J5l6qNIaNtr/iruwdb3f
      52NkatJJ9lY+yGphuer+rpER9KdBHT1dtIbW3o/WRkv7rzZf0zQp5PIEI2uXoWxob+XkpQvr
      ug87+7fxcEfUqlms65yaWuALp69AayfRwV58rIaVBIBcEQwaRV53+xaaOlaXdty6YyuHu/2o
      6aW65iMiDSjS9ZxLE9XI4dNT+AsL+AuLBPJz+PPzqEaW5ZkiOSO0yhXV1MIwPAaGQWpyjLZd
      +9j2wCOkpsZJjFylkE5i6jqZuWmklGTmZkiMXHHSWei5LItXhiikLYNELmEJVlPXKaaSFJYT
      SCnJJ6x1pcKN/P1zL7O4uMji4iInTpxgfn6e6yHbESOTyZBOpx1+aJqSfXv38vVvfoPE8jKX
      Ll8mGrVS0WYMyQAAIABJREFUexcKBcvrKJVCCEFzczO/8ev/jttvOcSWm+8mEI7Stm038f69
      vPOd76w47n//7/+dd7zjHXziE58oq2OgeRlYNaPiitug4UBAJhKhWKCFVc1qpfBJNfImnZNY
      QkTzWNyt70pMiXJPH7fnjnf+3rkbpun0Y9aj/YvS/wRIcX1YcyX7gaZYCZwkOHOptOfOqaEU
      GGPvaaFQKOtvvfEVbujKC73Vuma91cHcpzQ7JmAhm6JJXSm9WE3zL/tUCO8nNef5kxIS9v1I
      5YxqaBQA/sIyhw5WdiG036/JK8N0be2ra1xFUciEfIyNj9Pr8vqpRUII7r/lJq5+5xlOqQ3M
      BVyeOk2tNAzoJC5NY5RCS93GdQCkZO9AmIH9g1XH6B3YjKKO8cLoEnokXrGNLOQhk4T0Mn49
      gWLkLdhF8aGjoqt+/BTI+eJ137dCMUjg9CmU5UVygFBVckuLhJpbuPTk18gvL9Hcv5No5yYm
      Xv4x0a4eJl9+gR2PPsbxz36Sjv0Hufr0t9jz+K9ZczRNLvzr5+m++Q5njDP/8lluePd/gNEr
      tCXHOXniBF/4whe49957+eQnP8nf/M3fbDgAEywnENM0CbvgP8MwOHjzzZw/f4E//qM/5tSp
      U/zVJz5BPB5nZGSE3/3d3yWTsWIOfu3Xfo1Pf/rTHD9zidCuw/S/7g1cef7fmFYlb9i7mU3d
      3c7zOjg4SDab5S//8i8pFAocPnx4Ja5IVRGTk5PSyzy9L7vbqFssufuZ0mLaiqI64e9rQUhu
      5mNrxnqp8pU3I6XttaPYQoly467dBlZgDPf1NnNbVeDFrF7oXFEUh+nbfYD1gqiqet0pmd2C
      y7ADMTwGd6EoaCUXUHu/ar0cwWCQXC5X9/jedLNahYCjSnO25+C+thbFYjGEECynkqiKwtJS
      grOLUzS0eGrvVuDvXsFg3/tqiklZ25+gADB0gy997cfMKvEyCMU5iUnJjc057rzvlprvwPDZ
      C2zZU59Hi72+5PAE9x26DZ9WPXOr97r5hQX+8qkXmA40rvJ8M69dYmEih40Cu5l/d2ORn3v8
      LvxruM9KKZkameBHF+YoFnRkNoORLWDkixiZHKapYOBDVwI4YsYz90Bhnry/pa69cI87fvYI
      +cQo2tZ+UksJBn/uHQx940v03fMGYj1bOPPFz7D74bfgUwQnv/VVOm+6hdT0JH13PcjMqWMY
      xQIzp19FUTVaduyh++DtnPvq5xh449uYPf0qm/UUmwPw+C88xvT0NIFAgHvvvZc//MM/5I/+
      6I82DL/ap363k4Ru6CwtJTBMo+RNZCm7X/nyl3nve99LJpsBBBGXwFBVlT/7zFe4kLVSsmtm
      kV85uJkHbj9UUTgZhuGkpXFD6Q4EVA2rdHdgSkvjl9IsYdWqlcO+RmCDm2G7cXPveKZcbVD1
      lcao5Odtt/Eya/d39kvp1NgtGagrmhjFSoSdG4ISolQy09wYFFJpvqqqloSnVYrTLhJvFYpf
      XdS+Ftnh5muR2yvKC7VUMjJ75+z+fq0YDbcBPuDzO8bqimtxdeMoEN7/NnAKW48XmpvMGg4C
      +VyWdN5YgaxcxYEwdZqK8xw8tLtm/xNXrq2J/dskpSx5BQiMcIDRsdG6T3tCCFqam3n3rfsI
      5VOrvlPaO/HL3CqGHFJy3PfQTWsyf7ufrr5N3LWjhdy1GRYmDRJLKqlskKyIk1dj6GoIhGV/
      845lLXJj+LpUNJq2HKK/Y5CO1lbmh87iC4WJaRq+KxfwzS9QePEViqevYC4voYUiFFIWrl5I
      LdNQyODTC7T19JK4OmQVsTdNlGKBt9y0k8jyHMV8gT179pRBstdLduJImw+apum4b2qlgNum
      eJzWlhY+8IEPlLwVjYoIiaaUvPZMnUd3tHLPLTdVPZl4FTmbFPeX7sbuf/aLZDMtTdOc39eK
      aKvmXrbCjGzbQmWmIj1MuRIzqDW2c631gfXSCqsITLV5OgILC7JZq/+NkB2ibe2jKAlTpaqw
      q0buNBTVqBLjd3/nTklba03u79x9eYP97D6LxSKf/vSn+bM/+zOe/Pa3EckMMxOTVfufn5ml
      WEpOVw/JkjD/4Xe+t3rNhsFXPvO5uvpx0zc+/y9kM6tLE0opOXH8Eln/CtwhEIhinhZjgfv6
      A7zjzbcRiTVUx/4Ng2IuX7ONezx7FIBYazPXxkbJ5es77YH13Pf3bebxXb0EU4tQyDl7RjiK
      P1R+/FLMInfd0UdTZ/1FWQA6+npoj2/s5LV2lY3VJITAFwgxfPoFjj/3FJOnh+jQVYJLKfRL
      02TnoWvnHZw99gKnn3+KpkgLTa1tFNMpzn75/5AYOsN/evgeHr/9IP/nv3yA3//5Bxm4+CKv
      39bFr/e38Ntv+3kGBgbYuXMnPp+PUCjEUiLBN595lrlEoipP2wgpikLAHyAQ8KNpPhRXrjUh
      BH6/n8ZYzHHTdqeL1lQVTcDPb2/m5++7w7EVeoM87fl6+bSiKOXZQN2SbhVWX+pAcUWi1v8Q
      V/7OgnZKKIBpUqTkUig8x1LXhGG1HcEbdVuJLMGhWBJPWF5M3rXbFbmEWEm/sJb2aWP0Qlg1
      B5ASSlh/PSSEQBXqhh8qWzv3UigUcqp4efer2qkJKGPqbvjJPo24j5CGYRCNRlEUK8+RbZ+Q
      UrK8vMzTTz9Nb28vv/hLv8jly1eIRqP8wZ/8Eb/y2/+B5rZWNJ+P0StX6ezZRCAY4Kv/55+4
      9e476d22lXhzE+PDI+hFnb6BbRQLRfK5HNMTEzS1tNDc1urECJ946WXufOhBMskUU2PjdPZ0
      EwyFWZpfACCXzTJ+bYTGpjitnR2klpOYpsHk6Dib+7cRCofI53KMXR1m5PKViumvz50c4th4
      EalaBl6lmKUrkOeGfV30bd+Pr44asdMj43Rs7nH2vtr9dj73vKxpo7hujxQhBIf37WHn5h5G
      Jqe4PDXLxYVlxjIFZNRPypYn0mRvf4iBGzcWbBVvicF8vrKWX3OCG4NVO7ftpWPrHlc3Cr03
      POAE2oUamtl779uRpomi+eDCJfa85ZfQDRNVUxHBEB/+8IeRUvK2jrdyeGKCS2OTLBV0vvVv
      3+Py5cs8+OCDvPDyKxyZmONsSiedLXDDzXes2+ZWttwKMLWdR0sG5SqFupbtzafAPT0hHr33
      NsctO5PJOAGd7n6qKc5aNa3OPbitGdrh/uvR0LyL9pLbl98snTYMqaOpKwvwFkjwLsq+3jue
      +yWzNOzyugH2DXBviP2vWgqEausUQlDKX4bimWc9tBGYA6iI4YfDYQfv8/v9TknHXC63SgNw
      wzuKohCJWG6a9sPk3kP7JGj3Yae7zufzNDY2OkEz9vft7e189rOfZdu2bdx0442cPHmS2alp
      Tr9yjL0Hb2JqbJxkYpl/+l+f4jf+8A+YHBnj/IlTqKrK2WPHuXbpMj6fjyvnL7BpSx//+Mm/
      5Y4H7+OlZ57jw3/x/1oOCCWYr5gv8Df/42PsO3SQC6dO84a3Puqs88j3n6VYLHLixaO8/T3v
      4uhzzzM7OcWWwQG+/41v8av/8Tf56z/7n9xw681MjIyV7aVpGFw5fZ5nzyYw/VHU7DKbYyYH
      Dm6hs7cLRVWhjntnGgbZVIrubX1rnrRW9twScDYVNSvfUjQcWXf8h2kY7Orfxg27dmKaJtMz
      M4xNTDA9l+Di6AyT09McuueWsnxNNo1evkp7d1fNhHaNUT9YZtm65wUl+05JaVo3iZVrFSEw
      3J8jESgITQEkhWKI4IXzsGcfEjh/dZilZIpLi0mG0wWWfWH0QBhUhaWrY6g7buHjx69SDESQ
      /jg0WvMbTZmkM2kCa8R52GSaJvmSF4/PFffjxuHditV6eMAdO/vYNTjg9GMrfIVCgVgsVu7t
      U8XW56SC8A6slsqNebX9Wtqjl9zaopfcG2EzFtM0nAeh0rzsil7Cc739s9Ic3d4o3rGdtsIy
      aktsY+9GvX6s5Gm1jMX1CMX1kC35bbJz8NvJ5twavZ2V1H7g7OpAUkorB34oTCabxdB1YrFY
      WT4iu+pZsZQz3/47kUg4KSa8a9q3bx+/93u/xze/+U3+7u/+jvf++/fRv2sHr3/ro2iahmlK
      Lpw6w/JSAkUo7LxhH3c//Hrauzr5+Ef+hAO3H8Y0TE69fIyuzb3c86aHuO+Rh5kYHqFYKOIP
      rtg+hCLQfD5SiWVe9/r7cTOiTVv7ePEHP8Q0TYYvXUEA73jPu2jt7OBv/sf/x/mTpzh8713c
      +YYHmBy1BEAhn2fi8jUMXadr62Y6zr9IvEFww+3bafZAJPXcydmxCdp6umsy/rI+3UKgtK8t
      3Z0Mj4zQ0tS8bi+U97znPTz88MO8//3vRwjBf/2DP2BgYIAPf/jDgJXF9oVjL5PI5oi1tVhC
      rXTt0Wd/xN1vekNNAXDm+CtIsx+hKsxcO0e0qZ1w49rGXSupnolk/ZW9HACrBCHbSIBVvlWg
      qPbfJlIIcmmNwKULGP2DPOdrg6QCvmbwODHFt1neT5UiFxJaiImpGZqbqlcIc9ZWUpoTiSXH
      vqiUnDwaog1OcraNKn8333QDyWSy7LQQCATI5XIUi8WyRHTV5qd5GaNbo7Y/W+/DVglWcpP3
      M8sGYJTcNEswD5W8X0rVvKREFeWMei37gHPK8MAhtqAzTFuLr18bcY8lZfXEad61rtVXvWTD
      NHZqBzsts12/192vlJJ8Po8QVrpmu3iNnQLaME2Wk0n0Ulm/ol50irq7I5YDgYBjF8pms47w
      KRQKTi0Ae8xkMklnZye/+7u/y5//+Z9z/vIlVJ/PEe5f/6cv8Bt/+AfO/IQQVn5/KfEH/LR3
      dRKKRhjYs5NMyp04T6y6Rf8/e+8dZ8dZ3f+/p9x+797tfaVdaVe9y5Z7lTs2bhiMHZvmEBIg
      X1JIAiT55ptfQr4JSeALBGMgYIMNwYCNsXHDBuMqJMtFstW1klbbe7l765TfH3Nndu7s3LIr
      yTawH7/k3Z155pln2nnOc87nnCOKIn/82U8z0NPLN/7ti/zNF/4ZMDSwB++5jz/9h8+x9/Xd
      TI7N5q4Lgkg6m3JBVVR6DnbiDwZoXNKK7PWQSacJaePUVFYQikasfo3gwtnPxcmU0lSV2MQk
      dYtb8j5LTdMYGRyipj434ZqiquzesZONZ27B4/MymRjO24cdzz33HFu2bLE01WXLlrF/vxFP
      0NPTQ11dnTWBf/nLXyaZTHLZZZexsXkJX7jzv5hOJZkan+CWT/wRoPPYD3/C5Ng4m88/h01n
      n8mPv3U307EYKzesp7apgeeeeAoCb1LZspLOV5/BH45S1dROdUsHR19/Dk3TaFq+mfK6Fg5u
      fxIlnUJV0qw97WzwzN+ebsmqrOAXRREZnUpfJqdEazqjMZaWyYxm8IZ6UOqb5rXqUIMR9h/v
      Zs3K4qYyUzHSbN+8pmmkNY1YfJpIKFxywKxTpiqKQsKWS8x83wKBgGWKtX/7mUyG2HSMZDLF
      6MQkk7EpJpMpZHuBFzd65Xw11TlHjmaDUOyrBjdhbgl0x+GlTFLOjJzWdnOyswUbzUdTLzbb
      mm2cDtdSfSpu5zKXfKaZzJ6Xx+0YMw1FKpVClCRL4OqAKAp4BY+RPjaZQvcaJiRFUawUz6a9
      3/lupNNpotFoTpzCnj17eOSRR6ioqCAajVJWVcnytau561/+nYuvuYrq+jru/tJX6TnahSRL
      rNm0gfu+9k3OuvgC3vW+9/Cz+35IqCxCa/tSlq5cQThiCN+K6koEQbT8l5W1NWRSae6785uI
      okjjohYEUaQyW9QjWlHBvf91F1MTk5x32VZSFeVI2Vw9VbU1rFi/hm/+2xc5sv8gh/fu48LL
      L6VlmRExqQP3fvUumpa00t/Ty8jgEGdccB5PPvgz3v0H73MNUHvsxw9y3mVbKSs3VMvh3n6q
      mxoKPs9MOs0D99zLH/31X+RsVxWFV17cxsYztzDRO8CWFatKetefeeYZNmzYkGOqaG9vp7Oz
      k+eff57LLruMHTt2EAgEuOOOO0gmk/zzP/8z3/jGN1BHJ7nl/e/j+dd38ubOVwGBzeedzZKV
      K7j7P77Maeefw2XvuQ5FUfjOv3+Zv/y3/4/1Z21BCLSTkMpJxMapqF9MpKoBNZOmbeOFpOJT
      HNv1POV172NqpJ/1l95M996XiY2PEA5Wz9VylAO7wmpOzJs7GrjiwtOtmhy6qvF3d/2MScWD
      drwfobp2fjUFRJF9I+NWv4WbGvW1fV4fqXRu8F0mnUEN5Gf6OYk49u3xeBwESCSTs5RgWZYp
      Ly/PUdwVVeWpl7axL55C9PqQfD4krw98nplAMHPA9s7mi/k4M/OZaHIhWJwFw+FqCO1SgpTy
      CX/I5tWWZCu/tn2lUDwlrDDrITlh789+beYxpv29VJjPzD7JulEe3c5pfyl0RbHYXNaY0BER
      La0hk8nMYgo5WT/mNaRSKUKhkFUX+cwzz+Syyy6zjnl8+wtcfM1VnHf5JcgeD8vXrUFVVGSv
      BwEor6xk6crl2bKMMn/6D5+zViAArVmhfP3tt2YnLWMMt3zsDgA+9GefIJ1K4c/WOX7Ph29H
      13Xu+PSnUDKZWTV9AW76yAcA+Pjf/Q3pVJq+w0doXrZ05rpUlc69+7nyvTdQ39KEgMBD9/6A
      Xz78GBNjY1x32y088oP7iU1OEYqEufiaq/jFgw9zdP8hTjv/bBpbWvj+175BuLyM62+/lcR0
      nEfv/wmiJBEIBfnQpz6Rq4yoKt//+reYGp+gZWkbl1x3DQDT4xO8+vSzvDD1KKqq8tnPfpaH
      H36Yffv2MTExwQUXXMB1113HV7/6VQYHB9m+fTuf+tSncq716quv5qc//SnDw8Nceuml7Nix
      gwMHDvDd736XdevWWe9xRUUFl5x3AZlYnOcPGUXbaxob8HiNrJejg0P88M7/Ztm61ejZFaTs
      8SCJKkmHQBrrP8rQsf2EK2utovHeYARJ9iJ7/dmqCk5O3olB0zSe2TPIqvY+lrQaqy7R4+Fd
      Z3TwP88fRVUEpEx63kVlDk8mSCSTRMKF81KbFoaySISpmEA6YyhHsiQTiURci/44067ouk5G
      UYjHpxFFiYDfb6SQ0HWLpm7KKMt/6ZAlmqpybDKGv6FpFsswJw7AnDXsOW6cZg4zkMFN4LlR
      CZ1ml2IopA2bjKEcU5UAiqbOKszgHJdzVeOc+NwKrpdizik22ZnXb/9XKkzzjN1Ja3fcznVs
      dvOebnuB3NoIjg/Zud3pexEEgVQqhaIoxsud9RGYvOcDnYcJVBtBYJ5swWxRFJG9cs4r6fF6
      LSocQn7nlSDkxgkgCAiiaNmp7dcviqKr8Hf25/P7coJ0APqPdnHHpz/FA3ffy3985n/Tc6yL
      S667hs3nnMXtn/xjysqjXHPL+9j67ndxaM8+Kqqr2HLBudzyx3ew5fxzeeDu7/GRv/hT3veH
      H+bpn/2cqclJVm1cz5987q9IJZMoGSVnHMlkku6jx3j/H9/Bpde/G4B0MkUNPv7XJz7Jrbfe
      SigU4tVXX6Wrq4s/+qM/4l//9V955ZVX2LFjB6FQiH/6p3/ivPPOm3WNzc3N7N69m6amJiuQ
      affu3axfv57FixcbmqXtftTU1OCZSJCM5dat6DlyjLrmRhZ3LLVMc7quk5gaIhWP4Q2EGOk+
      RHxyjLG+o9QsWoYvEEZzU1IQETX34khzgfM9Tqoi9z/9usHSw/heztq8hvqwhip6ESdLz6/k
      RDxQxuEjR0selyRJRMvKqK2uoba6huqqKvw+30yusixMWZFMpRgZGzUKzigKk5MTOWYkX/ZY
      QRAI+AMFuf8ZJcPE5CSKP+hKMbcmALtQdevIbWbKd1JntG4pKwL77FXInm9f7tm3aXpuGmrz
      n70SFxSuFpZzY4rENjgD3Ao9hHxMq3wztrOtuWqZ6ySSdyIVBINDnIeq6jYBFOrL3j6RSJBK
      pQiHw0QiBt99enqaI2NDrrlvnC9lofth2nxcJ3NMBUHIeorM/0rH+NAIZVUzzj09m7NnUcdS
      /uRv/5oP/8X/4kf/fU9O6oSJsTHu/PwXGOjpxR8IoCq2IvS6Tn93D4/95Kc89qMHaG5dDEAg
      y7TyeLzWNZkIBIPc9JEP8OA993H3l76KrmmEBZl1K1byV3/1V+zZswefz2eVFA2FQhaV8Pjx
      46xdu9b13b799tsRRZE/+7M/46abbqKsrIzrr7+eG2+80TIrfOYzn0EURW655RYAli5dykc/
      /BHO27CZSDZ24eLrr2HdGadR01DPUF8/H/jzTyB7PLznox9ETU+SSU5T17oabyDE9NggbRsu
      YHpiGMnjZenmiwFYtGoLAJWNbQQqG3PzBLlB10E3Ap4kZZqANkmZMEFjhUprPXh0h807+697
      QuPhX263zGCSJPKus1eBKCMUMJUWgxYIs7eru2S5Zj6fYllDdV0nnogzOTVp5P6Kx0ml00TL
      okQjZZRFIni9XsLhMJUVFdRUVVusPbe+NE0zIvAPHsRTXuFyRgrXBHazQZkXVYowsG8vBEOD
      w8r5U0j4Chg2e1EQrDzmJlRNzfmenILXzhwqNKa5av52rdp5rJ3eZd/vpk0799u5+PlshfO5
      hvmY9+zjsW+zj928J8lk0mIc6brOK3vfINpU59qneSxg5UeyNHfzGbuMx3k/7IqBOanM9Fra
      9Y4NDNKyvMP6e6i7l6rGen7w9f+mqXUR01NT1Dc34Q8E6Drcyc4XXqKqthZZlhAlkf6eXgDK
      yqM8+/gvqG+o5/TzzwVBoK6p0dKAC41mOhZj72u72HDmFp566BGm+4epihq+hKmpKcrLyzl0
      6BAbN27MOU4QBDZt2sR//ud/Mjk5yY4dO3L2r127FoDVq2e488uXLwfgtttuy2m7Zs0aACor
      jcnw5htv4uEXnsHb0Upr9v5ceM2VOcdEKyq48Iqt/HKnQUBoWr7Z2te67tyctmU1TQAEIlmh
      lB6FbAyNiIqoZfDKOh4ZgkEPwfIwAb+HUGUUORDEFy1HsqViSD31IgMT2XdTACFLx9YFgWfe
      6Gf98k6Wt7eSTqepLg8j6hraVOl1FmZBENg/OoWiqq5mnNnNS3Py6rpOwB9AlmSm43HLZGSu
      IkpNOa2qKi+8sos9x/q4YF07/VMxhJoy14ypwuDgoO5m59Z1I1OnpmuICDnCs5C92px53ARc
      3gFrGhnFWAbKopR32W9q9yY0TTMS0jmEkCTMtlHbVzpzZTW5jcMuCJ2C0Yl8E6PpfDUnNbLZ
      VM1j7BG8c2ELnAwnfrFzOE2Dpp1f0zT8fr+VybCr+zj7J4cIlUdnTZo5Y87eCcll0rP/LFSL
      196f9TuliX9NVTm6Zz9ta4wqYpqmGTl71qxkemqKzr378QUCLFu9EkmW6e3qpr+7m7Wnb+bI
      /gMk4wlqmxqpqa9DVRR++eDDrD3zdBoXL+Lgm3tJJhJ0rF6Jrhm0xHAkwvDAIFW1NdazHhkY
      pLq+jq7OI/QeO05jfT1b15+OksnQ2NjIkSNHOHz4MMuXLycajRKPx6murkYURfr7+2lsbOTQ
      oUN0dnayZMkS2tra5pzELx+Gh4f59cE3qFzUmFNMxo6uvQf52ZNdOSmc80HQMvhIEgjI+D06
      kcoInkCAUHkEbyiMHAwg+wMlvb+pyUl2/OIVEtoMTdX8tgDqgxp/+4fvJhQK0Xm0i8/f+ywe
      KYm6aQOI0lx0BAuB4R6+cuu7iZbNtUKaO8zv1pQjiUTCYOIFgsaKPbuCKIbx8Qnu+8ULvNgb
      RxMkwiRZUuOlvKPDtX3BCSCtZIxZWcg1y5yoAHVCUVUrYZuZD9/U8p2CwplC2az0BWRtfSpm
      grqcCxVyfR05GmMRU48dJrXMvt3JxXeDmwCfSTNtMJo9spH7aM4MKseY7WNxs9+fbDgnHDOG
      IJPJ8NTLLxFd3OTa1r7N/Fidz97peC72zJznKRXDvX1IsofyGoO7PtLbjyjLVNRW555PKJys
      Q9d1Brq6iVZVEgiHZu0z4Xz/7MoAQCI2zWJPmI4lS3mn4LnfbCPdaDBM3CaB0b4BfvQ/O0hL
      xYv2VnimWH/Z2ch+P0KJUfP5IAgCA2+8yZtvjqAIHmtCtaDrnLssyiduv4F9Bw7xj/f8CkmP
      o5+2EUrQ4F3PmUry16vr2bRx44kQmGbBfMftlchE0aj9UUzpee3Nfdzz7C4GlNz61c3yOEtO
      3+R6XMGr90jyrGyUhYRlof2FYHz0M4URwMgRJObJSmqHYOzILvuzkxXuxeidGiXMRDm7TW7m
      A3CyaeZzjfaEaJksG8IyfegakiAiS/K8EpjZr1NRs7lAgGikDEVVSSWTlnPf2f5kTAr2Psyi
      8gA7d71O2GH6cVsFOf+Wss8uZ7U3xzELgoCmahzff4hkIo4oSsheDx6vl6b2tlntJ4fHWLxq
      uTWG8eERlqzNJnaznc555tjYBIPdvSxZa6wcBo/3EI6WFRT+zr9nTFcGVEUhklBpX7ak6HW+
      lRibmiAi5g+AilSWI1LC+6vrRKujeIKh4m1LgK7r1K1cznTfc3SOe4xAMNsEiyCw/cAgb+7d
      hyx7EHQFqbEK5QRWR7rXx57eATau11yjp+cLUw55svEypWTfTSSS/PDJX/P0kQkUyTfrJZ1O
      GmUj3caZdwIo1XwDs2mO87UxC4JgFUPPqAqqNpMLP5/eJQqGycBe6MUtoM0+VuffhSavfJqk
      m02/mNY5Y9sWrWszg99MjbnUeIZ85zKztuq6TjqTwef1EteNghP2lY/9mk/mis5kl+i6zkgy
      RoXs7nwy2wCWWQdmJu5Zq6B5KBh9nUepaWnEF5ypvZyKJ+g52Elje5vVVyaVRvLIiJJxHyaG
      RiivrspZWdrHbG6PjU8wMTJq0RuHjvfg9fkIl0ddrxNBsK4jZ7vtunQg1T/C2ZvPOGUrtvlA
      VVUykt23gvW7OUrJ4yHsh6SN1JOcnqR7z3YESSJUXkNt60pEQSQYLi2VAsCuZ5+hdfUayqqM
      1dhmVBb9AAAgAElEQVTe32yjuqmJmuaZwDpB9tC8bgX6riMcHiNLEdco9yps7qjj/NPXsGLZ
      MvYdOITXlybT0IyQThJITFGmZeiojhLV0jwel1GCpZl19g2OWxHIJxvFVu2apjEyOsZLr+/h
      mZ276fM3gOROa51OqWiZDKIta7Cuaajx6fwTQKnsHbNtKfvzCdiZ3PgzqaJlSbacum5MkXzn
      dU5cToHn5kzNd7MLOV8LCfxCdngdPSdviWyz+Z8M2EeUUTIkU0a6Bzcz38k2C5nOKhMyhX1F
      1nHZ52vlnnKmCM4KzrmMNT45hSCJs5hH/lCQyoY6ejuP0rikFUEQGB0YpKK+1hrX6MAgS9et
      zpY3de8/NjHJxPAITe1LOLDzdUb7BxEliYq62Zk0rXfF5uy2X1dOv32DnLNqXdEgo7caqVSK
      pK66O+TJMrAEgWhlhOGBmX3JqTFEWaahfQO9B15hUNepXdROuKKB+NQUgXCIdDJFIhYjUllp
      ROarKlOjo/hDIXzBIONDg2Sy+XTSyQRToyNEKitJJRJ4s1kyk/E4nupaVrXH6HtxP001ZWzd
      spr2tkUEgkEE4ODhw0yMj3H2yhaa67y019dRX1dLNBq1lLGX7/kR/aVMAIKAqBslT0txBM8X
      znc+lUrx5v6DPLPrILsGYqQ8YeSUDoH8K2tV8pGYGMdfVoYwHaNchEXlUdraF89vApiLfdWu
      zbkJWk3XcqqJmftEQQBhdhyC2Y/9pxsrx3mMm0nI2Ve+icENTmFnP59zwrHn+zDNP+Zqxz62
      ExHG5sTphaw/xXBsCmClmra3PRWw3w9BEPCI0qxnVgiW7VYnx4Y5Izj1vCtBJ/qOdtGadeg6
      4Q8Fqayvo/fwURqXthIbn6CmudE4h6ZZ5zAppU7EJiaZGBymqcMw0SRi02iaSlVD/ay29msz
      LsXkNc32KUyPTbC6YTGRbMTzOwlDw0MEovnHZTwygWhYhoHZ2VRVJYOSThEI+One/TzPju5C
      8vvZctXVPH3vPVQ3txCfnORdf/gxHv/Ot/D6Awz3dHP5Bz9i9fPK079AtrF/nrzn21x08634
      g0Ee/e9vsOWSy/jxV/4f0dZ23nylh3RdFbHDvSR0AVXyoIsi72kI8/E/uNnVFCmKIhvrKnms
      FIKQrlMdCZJMpQgGipf2PBHous7wyAjbdu/j2X3d9CQFdNkH3ghSYhLVF85pa0IAZCVJY0hm
      qaizoqaC5vWrKLO9X7J5UKEP1C648+WWdxPupvB3trWbaCwTiIvpyCmo3MwVxTIrzropRWzQ
      5ra5OhHtx+UzK9m32esMlGI+KgRnsj5REG3y5dQ7gU04J0RZnEkmV8pEYLd3ut6NEtka/Ue7
      qFvUXLCpPxiguqmern0Hc1I5i5JEZUOtlbzNOd745BQTQyM02vwIjUtb0dQ5BDtaE8tM3+lk
      inrRT0tTU/4D30YMj4yQjMWJjY4TiIStVBp2ZNIZKqIBOmqnGJ9MMhFTELUU0717IZggqA7T
      sWgdPd5yapd2sPnSy3nhpw9w/nveR33bEp763j10HzyAJHu49LYPMHS8i13P/gpBENn55OOI
      ksSlt32Q7Y/9HEEQWH32Obz2q6epaWpCSyTZtb+T8MZzaLn4Svb8+Lsc9UaRIzPMICGVpKmq
      HEVRZlX0Mt+7zW3NPL6rG91bvCBORBIIBYInrLzlg6Io7Nl/kGd2H2JX/xTToh8Ef47hXkxN
      o0brcvxI3sw0beV+NrbWsr6jjcb6urxFo/JmA80nNJxC3W5rL3QT7O3trA5JdM+GVyiNgXmx
      +dgybppijr1ZyO3HOfb5TACFVioz4zJXNjPb861Mip0rn4nJ/vdbJfhN2M0WRqWi3FwnxcZh
      mqpEUZxz3nsT6WSSdDJFMBrJa74x4fX7aViyeJZSEa2uYnxwmPGhEcprqqz7nZiKMTY4TJPN
      fwBQ09zI+OAw/Ue7jGpfwmyzpZPxMxOroKNpOtJYjLWbt8zrmk8FFEVh/4EDRCIRGhsaWL92
      HU0jI/T195MYnGIqFiOpqySUNIlMGjnoR0ul2XDuGWwSRSPXTSbDqy9tZ3RTLVe853qeefgx
      dnX24K+opGPTacY9FGYmfs1i9M3E7FgrW7+fqdFRRFGwIvfbN2xi+6OPMHH8GF/4zF9x4PBh
      XvrNb1jnTRAXM3TEhxkdV0mIMqrXjy+doLqqo+D3tnL5cgLPvUa8plj9ZZ2m8jK8JdSBcD1a
      13l9zz66B4bxyhIeScQjSciSiCQKDEzEeWbvMfoyXjRRBmn2KkPXdXSMFbM/PcHKuiiblzSw
      bnk7VZUVJdFGrQnAKQTz2evzoVRB4xS6+SaZQhNKPls9YGULFYXZ+8Bgkwi6iubYXuycc4Fb
      +mzrekXRiK9Aw5stl3iqYC5r53usKYTdVmdusLOMVFVFFkVGh0YIlZchyR5EKfe+5Ft95bAV
      5jA5appG7+GjNC/vKCr8TdhTRNjHU15bzcCx40zJEmWVFSRi04z2D9LUscT1XpTXVuOL+Tm2
      9wCLVnS4rlR0l+vRNZ103zAXnXZm0XtcaCV7sqBpGhMTE2zfu5tgUx29sWG2v7ifgCjj0QUq
      QmEWNTVTUV6OJEkkkgk0VePVvW8SWD6zYvJ4PXi8Hqob6nj4hz+iq7OTrsNHOf8DH+Xga68g
      Zj/Q9RdcxM/u/CrVjU1k0mmaly3njRee4+ffvIuR3h6u+ZNP8Mbzz7Hh3PMZOn6cX3zvHirq
      6y0lqn3TaQy/vI0N69cRCgZQkgluufYqhg+8ycf/4EYCgQCKotDf389kLEbrosUF753H42Fd
      VYRthW6SriOkUzTVFe4rH0ZGx7jvyef5TX/SEO75IIRwZsm2FAldI6IlWL+oktNWt7Jm5XJC
      weCcxyP09/frxaJv7Se3B+nYKaKmeSafCcgtgtTtGMilZhYSYPZcOeb5dMEQRCaF1dpurhow
      fjdNMHb/hD3SzpWJQv7kcE5fh/06rf26hqIZ/g6P7JmTcMt3Lrd7br/eYs+10KSnaRpKlq0k
      iYXrHABUVFRY9zSZTDI+Mc7Y2BipZApVgISSJp5O46kqI1AWcZ0AzHcxJ7dTCeajxPQ0fZ3H
      aGxvw+f35/dfMSOb85oDbRp876EjBCIh4pOxnCRx+ZBKJBno6qZ+cQseX+6y27ky1TQNZWCU
      c9dvLqnIuKYZ9WPNmrInG7quc6yriz19XZQvanTdr6kqU2MTZKbj+AWJoOwlIHvpT8eobJk5
      xm2CP7JnP6P+amRHvWFNVUlMxwhGyqzj4lNT+EOhgteZTiZ59sf3s35pG3//yY+XfI2FFCNd
      1/nVi9u4s2sKZI+5ETQVOTFNpZpkWXmQNfXVnHP6ZvwlFoYBo0bHcy+/zv3bDzAhzsNvoOv4
      1CTt5R7OXbGYjauXn3AgmjX92O2vbho2kPPimRkfS7UxO00T9p/Gtc1o4PM1v4jZeIJigkp0
      mICcYyl2nrz95hG2qqZZcQ4CWTPQCdj8zXM5x+T0hxR7JuZEkm/coigiC2RZWrhqtZYpz6b9
      m1WQNF2nvKKCYCCIJIrsPXSAtsXNJFJJjk9MEiyPznre8zH/DPf0kYwnWLxqedEVj134W9Rh
      Zr+P5u9NHUsY6u4tSfjruo7X76NpaRvHDxyiblFzDgspR/jrOumBUc5Zs6Ek4W/2fyK+omLo
      7u1l70ifq/AHDOaLJBGtroTqyuwmgXg6Q4Wc6yB2G6c/EHBNRyBKEqGyGeqsIAiEHILN2Z8g
      CAx3H6d20WLq5hAsV8o3sap9Cb7dT6P4gkSVBIsDMqsba1jRsprFLS1W0SU7BgcHufPOO0km
      k2zdupWtW7fmnOd4Ty/3Pb2dXWMK+lyEv64jqmka/TpnLK3nzNXLaGyoP2lEjpz1h10Ii6JR
      Qcrj8ZBKpdB1Iz1wMpmcZeMu5aaacEvEZhdc5uyczzRlh9vEIwqSFUhkb2feMMk2buc53Oz4
      +c7jNpaC+zSjP4ORc2LL91KXeaWaFArdY1EQjdKLebpyrkTMPtOZmeLuoijQ1dPNVNjL3olB
      0pMxJodHEIN+Mqk0ZVUVVrEUV6d+nglTVRS6D3ZSVl1FY8PsgDM3k0s2XtD1Hc4HkyFUKkRJ
      pGV5O/1Hu4hUlBOuKM+5fToQ7x3k3DUbXIVJ3n5F0SoOfiowPR3DH80fxStALjsrC9lb2gTm
      9ftQhmJ45sCaKTThNbZ30NjegdrfU3J/xSAIAjXV1Xx0Qzs1FeU01NcSCUeKrqQ///nP8/GP
      f5ympiY+97nPsWzZMkKhEOFwmMee+w0/2bEfJVRNOplkcrCX8sbFyF4fmUSciYFuovUtePwB
      UrFJ1EyaZGyClvpaTmupoFKENSuXs3LlypP+7AsSWBOJhFVgxGkSsWsjptAuxQ/gtvzKJ2zN
      zJeFzByF/AjFTEjm+Qo5wc3fTwQCs5k/pxr2e+ZmgjO3l4JSTYN2J7+qzFQqkiSJ4clxAs21
      IAiEKsqoXNxkmWPiUzE6d++xInFzhEyeMU5PTDLQ1UPzsiU51EDHwLL9keN0tV/XyXwe9glQ
      FEUal7QycOw46WSKqoY6ayKb7h3krBVrCc0xEvZkj9eJZe0dHH7xWXxL8lcuOxFU1NXQONnJ
      aPchplIq3opq/JWFy0YKgoCWyaClkijJJEoygSwIBD0yQY+MT5IoKzt5tFnzfT3/zNId8slk
      Eo/HQ3t7O4IgcO211/Lyyy/z8ss7UZtXc3hK49C251h6zuXs+vn3aVi5kV0/+x5rr76VXT+/
      j/oVG3ntoXs47aaP8uqD36a1qYHFFSEuP30xo6M9DKTTDPX3Ul1dTW1t7Um7Vsg6ge3si0Iw
      i7ZL2Vwg5qto9weU6ktwLrcLCSOr/B7uzB/7ZJTv3E6HbzEBf7I+NMP2n40FOKlZQ/LDKfid
      PgHnvT7R5aTb8/N4ZEBAliUkUSKmpJmJCZ7RznUgEA6xaEUHR9/YS8PStpzIXSd0XWfvztd4
      4ic/pb51Ef7yCDX1daSSSYKhkDGOrJafPRXTkzFCESM5nWDMBkV9xLHJKbqPHmPFujU52+Ox
      aZ578ikuv+Fa13fO+d7ULW5hdGCQ/7nzW9x4xwdIDY9z9sp1RYuJvB0QRZGVza0cGhkmXJU/
      gvtE+m/uWEKjqqIqCv1Huuh++XnSgoea5hZCXg9+WcYriQRkT/ZvCX84RCRSTyQcJhwOnxL/
      x4lAVdUcM57H4+GBp1/gzYOddFRvQBfS6JrGWNdhPL4AmqqgZFIMHnoDBAFNzYCu4R8/zqal
      zdzzza/T3d3Ntm3bqKmp4aWXXuLKK6+kqqp4jeW5ouQQNkVVSCsZI4RYE5FEw9Rih8n+cEu2
      VshX4GzrBjfqqX2fuc0piMxjNE2bCcLCmOXlEtOrniic96kUP0UxuNlE85nWirG3ThR2HwCQ
      LYARZWxsjINdxxhOxAjWVpmNXfsQJYm2tavoOXSEcEU0Jy+/CSWjcHz/QX5897187HOfJpVK
      MTUxQTwW46Wnf801t7yXSLSMxHScxPQ00cpKdE3ju1/5Gjd9+AOUVVTg8/kYHR7G4/EQKY+S
      SadRVY2piQki0Sj+bEGZqYkJ3nj5FVasW0MiHmd6Kka0sgJFURjs7UPXdVJJ4/zhsgiBYJBk
      PIGOTmxyisqaaiO9RzqNLgj0Hu8m1jfEuavWvyOFv4klra2EB4PsOnoIb00F3oC/ZKaa4STW
      UDJplHSGTDKFmkqjZRS8ooRf9uCTPYS9PgI+P8tWrid65vl5c9r/tiAYDDI6Osrk5CSHurr5
      x//8CuLys0kLXYCOphplVyWfD48/SLRhEZGaRjRVwev1sbyplo9u/QhXX34pX/hCP2Hb+3Hl
      lVdy0UUX8e1vfxtN07jkkktO6tjlUswkYAavGL8ZAmU2D91pCsg5Ps95TOFkZtlUNXVWbIDd
      1JTveLcJJIf9Y04eGEwgQRdwcqxONs3OzYeh60aabUmcPTHMFXb7u/P63e6Z20R7otdprnDs
      Rf3GxsfZvnc3BH1EqquIStECPcz0A9DY3spwdx8jvf1UNtRZa6bYxCQjvf00tS+hrKqCfbve
      4LTzzqZp8SJ+/O3vsm/XbsqrKrngqsv46Xe/TyAYpLfrONfe9n469x3gl488xqazz6Dr8BH6
      jvcwMTbGlTddT19XNy889SsWLW1jqH+AT/79Z3LuSSIe5//9739iyfJlVNXWGPn9s+N99P6f
      oGkqB9/cyyf//rN876tfx+f3o2QytCxp5ZxLL+au//uftK3oYLC7h9OWLKc8WvxevN2ora3l
      oqoq9h8+xPHRfsoaaq2nq2QU0okEqWQSNZWBjAKahleU8cseAj4flf4gkVAZgZog4VDolPot
      3gkQBIH3v/8Wrrn5NkbiGaampjjrvCbKm1p5/eF7DSd3ZQ2VLUvp2/MqXTufQ9BULr78Spal
      FxFIDHDgzTHkd11JY6Phb/L7/VRVVfHoo4+ya9cuxsfHufHGG0/62OVSKaCiKOKTPVbEo1mg
      wISTfmgXRMUcxDlaq66jZWvVmpOG04Y9H4iCUQXLfJPNJHJO9oo59hN5YZ33wn6NZhK4Uns3
      BSzMnjDcJju31ZZ9u/MZ2SeFuTCIrPNicL592YAYXdfZdWAfZa1NM8eXYNO3d1jT3Mj0xCTH
      9x00OPXAcE8vLcs7ECWJP/z0n/H8k0/xpb/7R66++SbOv+ISRFHk6pvfg67rrNywjq5DnfR2
      Hae+qZGVG9dz/e234PF6eeDu+7jyvTcwMTrGi0/9ipYlbVzz/ptYtXE9X/+XfzdSQdjfa003
      +Omti9l09plW0XtBEFi3ZTO7tr9MYnqawf5+wKhLPDE6xqM/eoDnn/wl7771fTTU1KIMjP1W
      CH8TkiSxatlyFk9Ps+vAPpKpJH7JQ9jrJRwKEaqpIRAIEAwGrWCo32Uhnw+qqvL8y6/xw109
      NFx+O3WqwrGXn2NqsIeWDWfTuPo0JM9MsNi6K95Dk5Tk3VtWcfq6Vfh8PjKZjJXu+ZOf/CQA
      ra2ttLa2ous6V199tWGxOAU5h6weiwlq035qThbO6jSm88/tOPvPfPutlYAgklYz6LpmrQTy
      pYRw2vWLwbT/2uFW5LzQhFOIP2z+dDqp7ffWXuWrFGi6ZtEi7fUR3FZI9vM7fRxudmpBEAqm
      ny5pjKZfKCs0J6emmEKhWhBcGSM5hzrPZ7uGcHkUj8/HkTf20tyx1Jo3dF3H5/dx+Q3Xcu5l
      W/nOF7/KTR/5AJpmXMf+XW9w8M29XHvrzYwOD5MtG2cdr2kqmqpSVlHORVdfyaE9+wq+o4FQ
      kL/4/P9h946dfP3//gcf/nPjA81kMvzkO9/jY5/5NLLHg645THIIpFJJ0hNTbNhwBi/+Fgl/
      O0KhEGdu2PR7Kdyd5lMtS+c+fLiT0YkphqbivNk9zJvjGproRxANlt+Ssy6xyAay12cEjqkZ
      WgMq7z59JZvXrsrxGeRL0wDGO+mbQ6zBXCHPRestZMe3t3H7vVCfdoFr8uU1QMzefLci9OYY
      Ck06TqHsPNZtHCbcJpSiTnIHS8o+FqsPk1ZZIgTByO1jJc0jf21eNxOW20/nysENbuYrN4ii
      iNfjRZYMXWL/4UNUNNbnF/6CYDl/c1YDAjlhUpqm4Q8GaF21nO6Dh5memDTa6zp3fv4LeL1e
      pqdiXPiuyymvrGDva7u5/1t307qkjX2v7yaVSNK57wAI0NS6mP/+jy9x/hWXcd7ll/LcE08R
      DIVYtWk9Ho8HSTYmL38gYI1bEEU8Pi+jQ8P88JvfIRQJU1lThSgK+Px+Iwp2Os6D3/s++3e9
      wdrTNxsF6QUBRAGv38fmzZv52bfvZejAEfbs2fNbK0R/W8d9IlAUhenpaUtB0nWdlJJGlmQe
      +c1udk5IWSKMCE5fKGCqM5KapiMicPXpK9m4ZtUpS8Q4X1iRwE5N2yk0i2m+kMvhdjqCSykj
      CYYJKKNkcspQ5gzYtvpw+h7s57WPJ18Ucj6nqRtKMZM5telik2Wp0HUdRVNBNyqmOfszVzH2
      888lsjsfSq3tEA6H8XqNtBaPvPBrqpYuKnZBuX9anLLcaDNRFCxn+dG9B0gnEoSiZVTUGTZp
      j0dGyi6LFUWh78gxyqurSCWSpOKJnMIviek4/oAfMVt3AV3HU0DzskNRFBLTccLZwugmMpkM
      SjqD32Qt2fZND42yvnExleUVJBIJyk5S6cAFnFqY38TY+LjxRurZCH4z44AAR7uO87UXj6Jm
      8+/PUIyNt1fUVSrEDJuaKzh3TQcdS9vecYLfhKtRyWTzOLVY5wThZJm4mR3mLvxm9EC3yFaz
      /KKzvGOp1brsx7jtK8ZGKta30w5/siDPoWxeqec276eJfKakQrDbJo8eO0agpjB90Lq/9nHM
      xOfmjo+Z1aEZiTs9PsGh13az+qzTc9omY9P4fH7KKo3zjw8OM3i8h9qWbAHy0EyelFIjb03I
      skwkOluAezyenAI45sQ2NTTK6tom6mpq53W+BZwa6LpOOhuh7vf5Zr3buq6TSqeZik2RSqWM
      wk16bnlVgEXNTSzyHeKI4sVmuMSvJFlVHeDcVUtZt7z9HZnW2wnLCWzC/OCc2ry53Vky0c00
      M9eqYKYg0nUdXTUKpuTN9Km7p4so5r+wH6eb/RQ4zu4gzSgZdAwhXIiDfCoEv9lvIZjPMB8D
      az7nKbWPSCRivRPHBvsIttQVOQKcmr7bOa3VielHzh4VLo/O0tzTyRSjfQMsWrnMei+iNVWM
      Dw1baZ3fKkyPjNEWqaS54a075wIKwxT8yWQSVVVJKxkmRYFopAyvx4uiKIiiyHQ8Tiw+jZql
      baq6CsLs70IURc7pqOfonnEkTaPBp3J2eyNnrVtBXW3NO1bbd4MMuRfoFLxOe7p9ErAEqp4b
      CXwiAtBpeirUzn7+YscIgmBQQdHRNZvT2RbP4Oa4NWmbgiCg23IIqdlthfwi8xHGpuBzc34X
      gqZpeDweFEWZ0/nczg+G1hsKhYzynJkM6XTaMJ3Y4LzmhJKhoFFFz9KHXeS/q0/GOiYXomQo
      JEo6Q8+hTgRRtNhCdpTXVDM+NMxIbz9VjfmLtZwozHsWn5xicbCcZUuW/l7azd8psCeJ1DSN
      dDqdYx6VRJFUJs3I2CimaqHrRgzDLDmSTRsiiLnWgS0b1jE+vZNNK5aybGnbb+0qb1ZBGNOx
      6qZlm23NdvaJIJ9N/WRqxG4001LooU6Bbm2HWXl5CplB9OyLYs9Amo9G6zbWUjHfe+bGaJoP
      JEnK0ex9Ph8+nw9d10kmk1Z6kKAj/axS6FmYjl8EV/+w22QpgCuFNJNOc2T3XmSvh5bl7Tmp
      IJwmw4raGsYGhxjtH6SyvvakCmb7uVRFwTeVZOmmtQvC/22CqelPT08XbJfrn3QniuQg+zhl
      WSYUDBEKBJEkiduuu/Ikjv7tgex0njo1/kJavd0hmw9z1YKLtc2nHTvHbV5PjpnK8ZDdHKpu
      Wrdklm4UREv42xlGJvI5o+eCU2FCmgt8Pt8swW5CEAQCgYCVNsTJS1a0PJRSF7u/e7PCE6b5
      0YqCSNvalXlJAk5U1NYwNjDE2MAQlfXzz6ViH5/zuU8d72fraWe+49IU/L5A13Xi8TipVPF6
      jgLCLFmn644UIkZDIwGfz08oGCLwOxjQJouiOOulLSTw52Inno/5w01TFx0mGvs/pw/DmTLC
      5NE72Upmf/YxOu3ozonGzdxUSHN4q18Wc8KbD2RZJhAIIMuzJ0Un3HjL6UzGYirNDIjZZP8T
      hCAYFMtS7635bMprq+k/2kUiNk0gPLckbPZ+nL8DxAaGOXv1+jll9lzAicNUuDJKxqg5USCm
      xe1Yu5yxZAwg6Mb3EAwECPiNb+K3ya4/F8xiAbk5PEpl2BTqa76wC2Gn5m3+czqn7fvN33N3
      kuWd5+43z+U0I5gTg9vY3FZMpTJoTgTmuEy2VrGVgyzLRpUuWUZRFGu8Ho8Hv9+fV/DbryXf
      /v6BAbbt3cd0PGmNzWDFzB7ziZqnAHzBAPGpGKESs0CaLofalia69h2kzVEsXlUUpsYniFbN
      5LjPOb7AmOOTU7RFq6moOPnJ0xbgDh2dZDLFVGwKJeuw9cne/FR1Zt5F+zuo64YVQBREJElE
      kmRkWcaTFfilZjj+bYYrDTSf0HcKtrloYU6T0lzhdpxbBS7neSVxJv2D04FtT8hWrCCOXdja
      x+M85q16Wey+CHMl5PF48mpBskc2ylEqGTRNw+v1WuacfGPOZDK88MqrTMfj+CUJv0fG7/MR
      CAaJhMKkM2leOXKMPl1EjpaTHB62xpZvzCcD0eoqpscnik4A1rPK/i3JMr5gIGcVkEok6Tt6
      jFAkwnBvH9WNDSWPU1UUQgmV9mVL5n0tC5gbdF0nkUwwNjmRs9pUNBWvY7WuaLkBpKIgGulg
      MMy6Po/xDfw+p7JwnQDyOTSdGnUh/4ATTq3a3FbI3gv5benOseRkBHXM+Jbt2NZXMcet6wRI
      7j7nz7cD9hWSmZbWydYBUFSVRCKRzdRZVpS1kEqleHTHTvo8AQjPaLdaWkWLjaNlBhFlD55o
      FWZPii/I9MQUoWh+wVxoFVDqB+gLBBju7Sve0GaCMvuubWnm+IFDtK1eQWx8gpHefhatXAbA
      +OAQQ8d7qGlpsso3Fhpvsm+Yixfs/m8pMkqGsckJNHWm3oQgCDlmXrMCn/3bFwTBYvtJkkQo
      FMLnEgvw+4aC2YXcbO4w2+FqF0KFBLpzNWFPxubsz/nPpHQ5x2fPQwNkUyZkqYym89bFrFPM
      HJGzuhAEVE1F03VLgzDxdtsG7ddhZ285fRtmXqWySKSo8I8nEvx8xysMB8KzneuShBgIIARn
      V3UK1dbT19VN+9pcE0vusvvEVwEenxclU5zu6pb7SfbI+Px+eg4dwePz0pIV/gDltTWM9g0w
      PjRMeU113n5FUWS6b4hz1m06JQm6FpAfsVgM3SVAFHQr3bu5zWxj1rOWJAm/378g+G2YJffU
      R4wAACAASURBVL3sdvV8qRGck4KmaSiKMoshY8KcINycyM4HaWYZNf/Zg9DyCQ/7eVXbSkDN
      1gCw+zKcmr/bxGKHpmlkMmnLfGQ6zc1/74QXyev1WtkEzWyVdmiahixLRuSqXFj4JxIJHnhp
      O0P+UA4F036didgUkyPDs5+zJDERn31+5/HF9quq6rqKSafS9Hcb5f8kUXKtL+uG7iPHcsZa
      t7iZcHmZa4BYZX0tw739eccmCALTfUOctXwNIZdJcAGnFpKUO+HalUTVwUKTRBGPJCNLMsFg
      kLKyst/51NRzhWgX9vZ/89HU7HbpYmwU+6RgDcYhYJ373WzuJixbuGDM9qIoIovSLI3dPla7
      lp/P1KTpulVLQBLmR+081dB1HY/HY02WbmMUEAgHCxfeiMVi/HjbDiYj5Qh5VjZvvPAcT97z
      HV56+CGe+eEPUBWFV3/5lHEOQSAleklOx632r760nZHBIVelIN+zPPTmXl56+plZ554cH+fX
      jz0JGHVok9l4hGJ45Ic/ynkfRUlyLThj7c+TE0vXdRJ9w0Y5x9DcmUQLOHH4fLkMNLf3WRKl
      7LdvCP5oNEogEHjbV+vvRMhObd75QdoZMHaGi/m3G9xYOScKN5YP5CZgM1cQpZzbzSTktk/T
      Z1/7O20SyGQySJJEMpnM20bX9YJpZ8fHx3no1V3EI+VWvITbPel8/TUuuvkWyqqq0TWN1575
      Jb++/wf0Hj7IeTfcxP7db7DtwR+yatN6zrjwfO7/1neoa2pk3ZbTOPfSi/np935AbHKK62+/
      BUmWePaxX3Ds0GHOvWwrG7J1WBVVyVbqUnnwu99nZGCQ86+4lJoGI5pX0zR2/uY3HLv3MOvO
      PJ0Lr7qC5554ioHePgZ6ennfHR+kqq6WJx54iOOdR+k9djznOtwTURgQBAFVUWdfv6aRHBjl
      nNXrCQTyl6xcwKmFyVbL980KglH3wzT1LAj9whBhJgWzE262eLsgtDtMnf/mCzdzj9Ps4rY6
      KHS8Wxvn/mJmr9JLuLw9SCaTBAKBvJNTPnaQrusMDg/z01d3E4+U51y7026vA6df+S4e+uqX
      efKebxOfmmTtuefTvnEzV93xMSKVVSzZsJFzrriKzv0HSSYSnL31Im780G1cfPWVPPajB1i/
      5TTe86HbuP9bdzM1PkFNQz0f++yn+dXPH581tt6u40yMjvGhP/8kNQ25OYbO2noR1916M089
      +DDJRIIdz77ABVdcyuU3XMuLTz/D8794GlEU+cNPf4q6plxTjwAomYxVuN6JQChIJmWYsjRV
      ZaynH2FwgnPXbFgQ/m83dMeKXZghk8iSwd1f0PhLhyyKIqpuFiiZyUNjn2FN04JTcLppwyeq
      HbtRTfMJerOd3QlqOpbN4wqllLZfjz04LOc6sm2MSl4g6PlXC2/nysDMkpoPmUzGVas/2tXF
      UwePoJTPcOCdz9jOqqpvbeO2v/8/9Bw+yEP/9WXe+5d/k+Oof+HBn+BBJzHSb5hohJnIy+6j
      XYwMDuH1+fB4PYiSxKKlbciybOTid6ChpZmy8ih3/cu/c8aF57NkheGwTafSPHDPfVTX1aIo
      CvHYNMFwiNrGBiPGAZ0j+w9ywwf+wBAM8owZUBRFpscmCCYU4pkUwZb6nHAFJaOgZDIo6TSJ
      gRHqQmVsXLUhp07rAt4+WO+mIICuW/W9/X4/4WBogZE1R8iqplr2XjVb7lHXNCRhdp4f+992
      7dAuWJx0y1MF+3icMCexYi+DeWy+egGmuQCyvGJVtTQQ8zjz2k+1tuG2KnLeA4/HgyzLxOPx
      nNWZIBiVv8xAMBNd3T08cfAIenmuPTzn+Vr/M7Dr2WeobVmELHuQZBlRlomNjzPa308gHGJy
      dIRL338rL9z3HaZGx/HIHg7v20dZRZS2Ze2EwmFWbVxP99FjWRp3/kjq8ZFRNpxxOqFLLuLH
      d99rTQATo6Pous55l1/CG6+8SvfBw7OObVzUwku/fIbVmzYwOjRsbZ/qHWB5bTOLVjaTSqX4
      9a6dlLU0WO9A5643qCuroEkI0LZppWva4AW8fTD8cYb8FyUjLiUcDC2wseYJ6dOf/vQ/2IWc
      CYtHS66QcXPmFft9LsjnGMznd7Br+vlMVoXg1OCd9QXMSENLy81qHc7VUCnnmi+chW1MAe1M
      gWFG+JraOOT6Tuw5foaGh/nZngPo5TMc/xzN36b12yHJMgd27mCkv4/zbriJQChEKBpl3/Zt
      NLV3IHu89Bw+TE3LYvx1i6gpC9HXfZx0KsW5l11C16FODr65h9aOdqpqa/D7A3h9XkODz9r4
      ZVkmWlFBeVUlr7y4jUN79nH5jddSXllBOBKhqXURU+MTdO4/yIYzttCxZhXT4xO0r1mFKElE
      yspYt+U0Ovfup+tQJ+u2nEZtQx3a4DhnrlxHTXV1dmUgU+4P0dXfizcUZKRvAManufbyK6mp
      ri4pLcYC3looikI6ncLv9xONRAhmE7MtYH4QBgcHdbPmrIYGCBa9TgCr1J/T/p+3w+wHM5eH
      khPElWeCcStd6Wavth/j/N0N+Zzf5r60kplNVXVhA53MVYBlbsMoIo+pjWu5OYrcVlqSZNA9
      43GDiWOPzygvL7faj4yMcN8ru5HLc1MYFGV/Ccb/BEpTCmKdBzj7nA15zWb5jpsrRvsHEQSo
      qJud7C2dSBKOZdi0dp3rMzp89AiHJoc5umc/1118GXW1808Yt4BTi7RZzS1Le17AiUEEkCUj
      J74kSEZ6ZFPoOmiddiHsdMo6hUGheAKTLmqmVnAKBOf57Me5ad12gehWl8A8Xz5Hd6EKYWYm
      UEEwUkfIopTTv/2f/ZpOBOZ9y2QnH0034hs0jLzkbrmRTJiBcfYEVrIsz2IAVVVVUSfOcZym
      PZ88wlqYvd1TXc/g8Z7cZvNYqRVDZX0t8ckYyfhsauhE3yBrV7hnDwVoqK2j89XdrFrSTm1N
      zQmNYwGnFl6Px0rdsIAThwgzLBtjIpByyg86aZ9mW+fHa8+xbS/I4DYROIWW88N0E8ilrkDy
      wazrOddjJVHE5/Hi83jxejw5LKRCwWXFYAh2I1DNGcACuSsd+wRXyujj8bgV8GI6yNyif1c3
      1KM5AscEUwHI84EVEtZuTClvJEJ//0gJo86PUp95w5LF9B85ZqUJMI8N6kJeG7GqqjzyxOOU
      11Szec26BcGygN8r5EheQ8s1/pkar13AlZI/xy11s71tvkhhp5PZmabaLgTNvopBz2rOM9HB
      c09FkE/guV2ffexFxwakMmkUdXZKA/PaPdl6BWZEo1f24JU9risv59gSiQSBQAC/34+iKK5F
      Mpa1L0UcG0En9xpEQTAtPc67UfS6Zh0hCMQ0iVQif4xCIeQz87lBlCSaOpbQte8g41nHb2xs
      nKbqOleGlK7rvLRjO1OCwrqlywguRPYu4PcMrpJKEIRsCLVUUPhDLn8ecrV3NyFpP8d82EKl
      mgw0W0IoSRSRJdnKh3Oy4MbMKfWaBMhmIzVSVri2yT6HQnEP+aDrRoGMdDpNKpVyfQaSJLG8
      qnxWwrSZMQr2P2zlr2c/00Jj89XU09/Vk3d/vvHnMJFKhMfrZfGq5SjpDEfe2Mt0/wjtS5fi
      8XhyTI+qqtJ57Ci7Og/QWFPHivbZJSUXsIDfdbjWA7A7Y/Oxb0y4CQIzdbK9jXn8XGsLFDt/
      PpRaLcp5nrmc60Rs16ZwVzTVylLo1sYNcym1ac+p44wDEEWRDcuX8caOV/FUVue0cxnNrH05
      /p5s9ky3a5D9foaO97BIzx9FnfO+GSEp9tNa5SQp0If9nFWN9XgkiRVVDZb/I5FMZnMl6UxO
      TfHrl39DQ+tiNixZtsAkWcDvJcRCGrqTbVLMlm91avMTuGGumqyb2ci+upivX8COUvIX2THf
      FYwdoigaJh1xbsLHTgkthMOHD/OlL32Jr3zlKxw7doxUKsX4+Li1XxAEKisqaPYajIrpifH8
      99FBETWF/vTkBMf2vAkYRdzNVsnpabY/+oh1now3SGx80vVazHMm4gke/dEDuSq/7feS77Su
      E+8f5rRFHbQtbrU2JxIJJqcmGRkd5ennn6VmyWJqfSEa6htK7XkBC/idgugUJvkEqlPYOoWy
      Gz3TzVwzV+Fv9pWP8WIv0G5irgnt5tLuRCeaQig07rk6sVVV5a677uKWW27huuuuI5FIsGvX
      Lu666y4GBwfRNI2xsTGOHTtGR101ifExHv/2txjr7yedSKBrGmMD/cTGxgBQ0mlSiTgjvT2k
      E0lLS49PTnJszxug6yRjMUb7elHSaTRVZWJ4CIBUIsF0OsPRQ50AxGPTTE/FGOjptcY7PjZG
      f3cPg7ZtFnQwxX9R05+qkuwf5uwVa6mpzk3pbCYG3LFzJ1IoQI3u4cwNm0q6nwtYwO8iLBOQ
      m+B3s+fb4RT0zr7MfbpLm1JhrjwKOWPNn84JyDy+GOYi1OdrkjoZ/Wu6BjoGVbcIBEHA4/Gw
      bds2tm7dSktLC3fffTevvfYaTzzxBNdccw3f+MY3iEajvPrqqzRu3kL/saPsevYZ2jduovvg
      AWLjY0yOjLDlyqsY7u5mz7YXaVyylOGeHm741F/YVHKBVCLBT770HyxauZJIRSXLT9tiXc/2
      xx5BEAR+8fqr/N3ydu758tcIRcIIwKXXv5vjnUfZ+eJLVNfWknRzFgsFqKc2pJMpvBMJzl27
      yTXxXSAQYMfLLyNKIuev20RLc8tCvpgF/F7Devvd6u3azSJuQtKkMjq1fzsrSMNoozP3LJpO
      E1S+/c59hWp52h2B9msuhb2Tb/UzXzgn3UIObgEhW9gilw2VD6Io8rd/+7d4PB4efPBBfv7z
      n3PppZdy3nnncdtttxm1ATwe2traGB0bI9yymEUrV3HO9TfQuLSdXb/+Fbqq4fF6OfDyy2ia
      xjnX3sCF77sFj89njcn4aZyvdfUa4pOTVDpMKoIgUFZVjRQIMTI4iCiKfOBP/4QL33UF46Nj
      bH/2ee74y09x1XtvJBByZ+IUutu6rjM9MMxib4Qz12/Mm/VUlmU2rF/PVZddsSD8F7AAbBNA
      PnpnPnuzrutoWQKhWXvTbGsXpmZOoRMVmE7miclxt/Py7ftKsc+7+TneSh64W4BdsaA0ex3j
      QlBVlf3797N161YuvPBCXnvtNQRBYGxsDEVR2L59O3V1dZx33nkEwhHEYBBNVa0smJUNjZzx
      rqu59PYPsf7Ci6wxZH+x/jbiBgB0Nm29lAvf+362PfIzaxyZVJK+zk5WnH4GPi3jMDdmLUma
      RjwWIx6fnqn0JWCjHeUSEszf4xNTDB86htQ/zjnL19JWRKgLgkBVVRWhYHBB+C9gAYBsFzp2
      oe806RSCKMwkHDPhtPu79VsqNN3g8st5aJxzNcvM13mbz+Rl3z+Xfk+lEBIEgf379/PQQw8R
      CAT46Ec/SjQaRdd1vvjFL/LBD36QJ554giNHjuCPliN5vGy8+BIe+/Y32HjxJVxw0808++P7
      QRDYePElVDc1Ey4vB6BtzVrrOgOhMI1L29FUjWd/cj/pRIJ1F1yIx+ulZfkKPF4f5bW1PP61
      L9GxehnhaJTVm9YDEC6L4PP7uOGDf8C9//UNAqEgHatX5t5DIZuXyJbFP51Ioo5M0FHXRMu5
      7ukdFrCABRSHMDg4qDspcPkcwU4zj4aOmNVMBUHIMY3k1OnVNBRNtQKbCsEpzHV9ptanKAhW
      biK38Z5qQWBOcPkC4tzyFb2VK4pCMJ+N1+slGo1a21VV5e5f/JJUlZH/5mRMsLPOrar4RrpZ
      sW7FzMasE9nwEeUmnptlUszuFwSByYEhmgJRVi9bvkDdXMACThCu8fH2WICcgByHCUaEnOAq
      e/yAs79ShL95DlOTNnwHM3l4SnF+nioUWwU5zROz7tXbrKU6azrYn1nE6yGVbTefeAgTeenE
      osh4RrTy9huNc37YDpjdr4BAOpVEGRrnjOWrqayomN1oAQtYwJwhAiiqiqrNphg6bdK6rhvl
      +lTFOEbVSGcys2zYoihaVcYUVZ2Tbd0UUKpmCH8pm4BNKmC2easEbCEbfSHH7Kmkjs4F5irN
      Wf/g9KVtKONjBY91i/51JQaYbbEHiYG/tp4jB4+6dGyFIbvmHxIEgdjwKNVpkYtPP2tB+C9g
      AScRsqqpxoenG+mgJXF2TV0rCMyFiy4IAqqm4pFl5KyWb5p8TI7IXGzjoihm7f1zixguhrlE
      z7qhlGNPZKymeelUmjVkWc7JEmqivraWxgOHGNC0nGLwzpWfJdTtBzvMQ9Yzd7QTZZkpfEyO
      jVNWUT6zI+eW5UYTK+kMqf5hTl+2ioqKineMOW0BC/hdgQi2ClhkNTgbBTQ3o2dWC7T90zUN
      TVVJZzKk0imDXpmlhmq6jiCAqs8twla2ZRs9GdB13WAq2bXSU6CVz7fPt2KFEA6HKSsryykK
      AzPxAqtamhk9eNBKtZBz/22PIef5M3vFaDGrBFOUz7QJ1jdy7EiP8yhMQqkkGtlo1UyGycFh
      yqYzXHLGOVRWVi4I/wUs4BRABrPEWm4mUDchaQQiuQsrXdNQsst9jyRbvH/RpXjKWw0rG6gt
      n82pGJObCa3UiexUltGUZdk1HTQYK6MXd7zG9x5/mdG4QvPAOO1nbED2+4t3PEPMKQiziSAI
      xL1hxgeHqairsSaSif4h9FQav+Qh6PFSGQyxdvEyKhbMPQtYwCmFbAQYSSiaaplwgFkJ3Uyb
      fkHYzAGSIKJzapg5pjmqlMnFHLNJIT1V2na+4LBShPqpniDzTS6Tk5N85ydP8vy+IVQkEL0c
      H9CZePwlVpzWQbS52WpboqyfBWeCuGB1LUePHqSyrgZdEJg43sem1g5qa2oWWD0LWMBbDNmk
      4TmdrHb7r5onh79pV7dttJg6xs8ZgVtIyGlZk1MhR29ueyMuAFFAKqG9s98TMS/lo7ramVNw
      YmYdO6X0ZAhFXzZy197/q7ve5NuPbKN3QgXBdg5BYDLt55UXDrHu9AwVba2Fw3ALwDnhmisv
      STKeR2Y6wbqWNupqa992ltQCFvD7CBmMD9MtI6XJwc8RalkbPfrsylfOD96+gnArG2m2V1TF
      NZVwPlipJuahXZ+otl0oQM4+sZgThZplQc1VwJ2sVYHP58sx/8TjCb7/0C948rVuFGRX5g2C
      QAYfA0d6jAmA4tp/vone9C2Zq0MlnaI6EkRTVMSxGE1LV73tJsIFLOD3FbLB03YviA7ZVA6C
      oaXrwoxdX9VU14/dWXTF1PrsTJKMouKxOXplSTJqzc6BKUS24IskSLPy6dh/ngjsmrhbrWG7
      k9xeOMctDmAuOFkOcEmScrT/VDrNP935A/YNZEBwL5Fox+REEjWdRnL4D0oxu+W00TQQRdB1
      EoMDVK9oJtk7xLkbNp9UZ/8CFrCAuUHOKIrxAQpkhbDx0xTXpkATAFESkbPmAi2PXUDPwwwx
      halq+RJmVhyl5rextxclMUfI2mMRnD9LFTCmMDePcfLl7XAKeXMSKJQm2w5zReScWFRVzRYt
      menXjrkIS5/Pl1MLd+dru9k/kMo1+RRAPCWQnpokUFUNtmjcfMqC/XclPo2YiFMhiTRFI+wf
      j6FEK5CVFJmxSc5ft3mhuPcCFvA2QzapehbFM4sZ4WTsRwARQ1gpWbOQKfCyB1irA2e0qWn+
      UDUN6SSygtzMMW5mpnywj9GZi9/NZJM30tV2TudEZMK8Vx6Ph2AwmNe2r+s6fr+fZLZ6lb3P
      V155hf3797N69Wo2bNiAqqrIsnuEtRuL69Hnd6EXEf4Tg91Ea5uNyUj0MzUwRKCqmr3bXqJt
      zToC4XDee6IpCqHJMZojIdpa6pGA48ePc/7pp7F6ZISHX91NcmKcM7deTDgUKjiOBSxgAace
      YiAQoCxSRsAfwOPxIMuylWHT/F2wOVEVTUXN0vckSbKYQ27mH8g1ncjZ9m7BZieCfA7XYtq/
      pmlWWmin8Hf+sx/jrIHsrIBmCm3nhFpWVkY4HC7o2BUEAVmWCYVCRCIRawW2c+dOnn/+ec48
      80wOHjxIOp3ma1/7Gsmke7H13t5e7rvvPuvv/QcOcmCgeGH2rjdemvlDlBgdGEcA+joPk0kl
      c67Red9r4pPcetH5XHLWmbS3tZHJZDhw4AAA1VVV3HjGZm6+8sqFaN4FLOAdAjmTyaDrOrIk
      4fN6LZOBIBq8eVU3hF06nSaTyaBkFMMhKIpkVAWPaDgSzdXCqaRaFoIzdqGY8Lc7tu2mnkL1
      B/7/9r7ux5bsuuu3d32cOud0970TOzP2TDzjxDMmToAYO3mJrGDH8iNEQUIKL4iXJEjJAy+8
      RIS/AFsovCU8IPGKEARCiBSjYFk2yEgJIjgJydgmMxAyzsydPt/1tTcPu9Y+q9bZu0513ztz
      u2fq12r16VNV+6uq1vdamxhByPkt2+XHFosFZrNZdDwhbYUzgtVqhaqq0DQNnn/+ebz88sv4
      gz/4A3z5y1/Ger3GF77wBaxWK3z961/Ho0eP8PM///P4jd/4Dfze7/0erq+v8bM/+7P4h7/0
      j/FH/+cas8UlPvbpn8Tv/sd/iXxxgd31m/ihz/xNXHzPc70x/dmf/He88Z1v4g9T4MVPfcI7
      gf/sW6/i6//+36Kta7z8qR/FR3/4L+Nf/9Mv4vkPfA/mpsXf/txfx2/+5m/it37rt1BVFT75
      yU/6Nq8uL3F1eRlcgwkTJrz7SPmWit4cYi10opFnbr/aNE1R5DMs5gtUVYXNdoOmcRU6625T
      c0q0OkkeM+YdTXKSGMsA6Fx5/tBYi6KA1hplWaIsS9+GJNy8zeVyiUIkVXHmQwxI+gPo+jzP
      cXl5iR//8R9HWZb45V/+Zbzyyiv4uZ/7OXzmM5/BL/7iL2KxWGC322GxWOCb3/wmvvrVr+Jn
      /s7P4Pnnn8cv/MIv4Hd+53ewrTV+4FOfxZ9847dRl3vk8wv88E/8NN58/Y+xfuvPewzAWovt
      o+/iAy+8jA9/30vQzTGa69kXX8Jf+8kv4Povvov/+bWv4iM/+Am88sor+Cf/6Jfwz3/1V/H2
      22/jy1/+Mr70pS/h1VdfxVe+8pXzN23ChAlPBVoSHdPZ+9u2xaEssd3vsN1usdvtsNtukSYJ
      PvA9H8BivuikZWf6oUSr0O87jVgRu8Fr0DffDEn+vkBd56Al23wo2ocT74uLi54Tltpo2xb7
      /R7b7Rar1Qqr1QrX19dYr9fY7/cgrYzamc1mmM/n+PznP48vfvGL2Gw2eO2113qM5Etf+hKa
      psHHP/7xbm6JP77f75HVb+ONb38TD579CLROvM9GRRzwH/3kTyCdLfA//stv40+/+ftdiRDg
      v/6Hf4c//8638cEXvg/FYglT1/j0D3wUL3z4w0jTFE3TYD6fT0ldEybcA/gNYYwx8IXhcNQG
      eBKVMQa73Q7L5RLPPHyIbJdhs9k4KbgjuE8joYfGP8bkwyOSoI4bhcfAcxlIW+LfUdshyT/L
      sh4htNaiqirsdjs0FH2FY/RRXdc4HA4oigJXV1f+OqUUvvGNb+DXf/3X8fzzz+O73/0unn32
      WXzwgx/Er/3ar+Gzn/0syrLEt771Lbz66qt4/oUX8Nxzz+JrX/sannnmGXz+85/HLM+AfY39
      5m24omvD+L9//Lto6wpaJ3j7/715XIOmxer6Tbz93TewefMv8KKpUTKH7nw+h9Yav/Irv4LX
      XnsNr7zyypmeJkyY8LSg3njjDcujeSiM01jb7UEblorn8zmKosC+PGC1WkF3cfxPS/Lj0nBI
      8yCirZRy+xR3803POKSlczjPc+x2u945/PrlcukrbkrH8Ha7xXa77V1L4aa8j6urKxRF0ZuD
      MQbf+c53sFqt8Nxzz2E2m6FpGrz++uv43q6Mwuuvv47nPvQh5LMcH3r2OTx69Ajr9Rovvvgi
      VusV/v4vfRGb9INI8xnapkaa5TCmBayF7jbaaeoSSZrDtA12q7eQZjN8cGHwiU9/DA/nBS6y
      BFiv8JEPfxgvPP8Cvv+jL6FtW/cs7PcoigJN0+Db3/62234xYAKbMGHC3YBnAHI7RyJqQ1L1
      bDbDYrHA4XDAar12DOMOpvT7qJyu8B3Vtnf5DW6zdU6sQ9cS+PzarjQ29x9Q5I4k/vv9Hrvd
      7sRkxE1J1lpkWYaHDx+eMNK2bbFarfz/lFORCBOOsQbPPPPMyc5pbdvin/2Lf4X//Edvn8wx
      5sSeaYMfeekKP/2TP4aPvvRiz1wmr5swYcL9Qwoca+Vzm/aYipmHwwGtMbi8uEDbtt4xetdw
      nBN8lVI/165ctUYSNIuEkp5IYyLGabuQ2MvLS08g+XVt2+JwOESZIw8rjUULaa3x8OFDP/a6
      qb0z2lqnt6VJgov5ZXDbTAD40R/6AXzlD/8bjNKg8m4Kp47zXLX4kZce4qc+92n8pVc+Nsqn
      MmHChPuHNBalM4YBAMB+v0OaJFgsFmia5iRE8i7gKNXaHsGjY0RQs45wymxinsQ1n8+x3W49
      I6BErOVy6fMnJOq6HhwfN1lVVYXFYhE8h3/Osxx5luNieeGZEY0pBK01fuxTfxWf+1+v4T/9
      zzeCXoDU1vjk9z+Dn/rcj+ITH395IvoTJrzH4UVFIkKhBJ8YjDUAFMqyRJ7nmM/n2Gw2vr0Q
      YowlFlUTKq9AGOtvIOKYqK4kNFw0joXzdQBu4/IGx7IUMiyzKApfuiDLMvDwWWkakfPiDICH
      fYaipbIsw+FwwHw+H8WAud9l6HwKKf17f+sL+Ivrf4Pff+0ama3x3MM5XvjeK7zykefwgy+/
      hI9/7PunCJ4JE94nSIHz9V1icDV53LllVaKYFWe3XgwRwFDmLAePsBlT4iF0fU+ChoJVrrid
      sc6E43Yv01C6Hy1EjIA+73a7nu0fAPI8H/QhUM5EaP6SeFtrvbnoSTtPKTT1H/zdv4H//aev
      48MfehYPHjzAbKrJM2HC+xKpNP/cJJOXX1dVFfLcFR+TYZISvFYQEVd+jLcdGstYzfUFZwAA
      IABJREFU89RQ/7wPcgTL8tJErHkE0XK5xH6/R9Mc6yGRtE6mGA5e2E2OXa67Usozi/1+jzzP
      n7gZRimFhw8e4OFfeXAyhgkTJry/4DWAx4VpDZqm8clAErarJkkROMAxrJKuqarKS9f+ugCx
      58zhcceulUtmG2OWOhwO3uFLyLIMWuteXD/BGIP9fu/bojmHIAvJaa2x2WywWCx69v0nca8m
      oj9hwgSA+QA4bit1HsoDivx09ylnYjGw9riv8GK+8LHu1lrMZjMUhTMhNU3jf0NOZU6UiRiP
      MQ3x0guEZIAgh8paEEGnvmjM+/0e8/m8N5btdttLUIvlKMTQNA2ur69938vlErPZbLLRT5gw
      4Yng/K4gI0Hmi2S+QJqmXWax6UIUO0m922tgVhRYLBao67oXG59lmf+dzWY9CXy9XgcJOEnF
      3KwU82nwcMtzGGMGo8iftm0xm816xeLKssThcIiOZyz4vPb7PQ6HA9I0xcXFxRSlM2HChMfC
      E2MAAAAL7A57PHjwAFVV4Xq98kSfMJvNsFwsfb174JgNW5YlqqrCcrn0dXPIGbpYLE6yaAH0
      7O6cWFK79CtNS4+Li4sL5Hnu6ux0DIvmITUFwrkonSRJTsYYYiBkLqPzsyybzDoTJky4MdQb
      b7xhn6RJwVqLNMtwsVyi7cw51rr9A4jIUSRNqM5+qLjafD7HbDbrZdNmWebLLlCpairSRtcS
      kiQJ+iVuA8oFSNPUO2rJWUtMq6qqXq5AyOn7uFBK4cGDB5MWMGHChFvjyWoAcISpbRpcr659
      HSFOBDebTbBwG50TCgfd7/dIksTb2I0xyPPcO41nsxmqqgqGi9L5twUle9FmOWTeoqJtVPeH
      +tlut71NWqRjd5LUJ0yYcFfwxBkAwRqLqj2aeCRihJDnBgBHsw5FxMxmM9R1jc1mg7ZtPWGl
      4mi3AZWCpuqd1DftiEbjaJoG2+3Wm6Uo+Yv8C5vNBvv9PqjF8LyC3joJ38VY8HyCtm2jeQgT
      JkyYEMM7xgAIIaInJWEyncjj3AlMBDbLsp6pB3Cx9rPZ7FaSPiVH5Xl+onlwkw5FJBVF4SNx
      iPiSMztW8mHIBMQJOZ0z1mS02+2Qpqnzu1w9QJa+47dzwoQJ7yGcUAyK2mmN8Zu83Bb82lDC
      l/zlx+RfaotvlkIwxgSJL5mNqGjbfr8/YRJ5nqMoCi/h13XdK8jGTU98XhSuejgcekXwhqR9
      CTn3UDTTEChUFtairquJAUx4YrhNxv2E+4cgxWja9iQr9rYIRbHwcMzFYoGyLKOlIDghlRu/
      8L9UlI3nB1xdXXkpfTZzWcoUV0+gwmsUVQO46p3UHo2Bj4eYSVVVJ07YIadszPzzuFBQqKoa
      8+LxE+MmTACOJs88z5/2UCa8gwgygKGNYM4hRtSIwPNfbkPnoZy8rZM6PgGGQm0tFgsffnnR
      laim3bcolJSke3LUElPZbrfI89yHi5ZliSzLjuWWre3Ngc+L5nBTYi5DPx+HGVR1hda00VLQ
      EybcBKTZ8iCHCe89nFALpRQSdbuwUNqkxFqLLElPHLmcSEqiyv0C/DuOGJMgiZwyZamN1WrV
      K+NAjlu+oxc5UAH06vDQ2MjkNGSS4UwgVktpyBE+ltGebEXZ7WzWWqdNVXU9MYAJjwV6n0jw
      uUll2gn3D2epBQ9jPGvT7n54eYWQM5e+T5LkbK18CW5j5/b8uq5xfX3tM4npAfYT7SQZHilE
      5iFqU+YiEBPiyWaxUFW/pSa75kmD+vZ9Wou6Pc7nsN9jPiuml3XCaBDBr+va+5T4s304HKby
      I+9heAYQc/pwYhjKVO2FPEIhcbsD9wi9tc6pDFYIjmzsZEePhUj6tscwoM50Q0XpOEgzkFI0
      ZyYU2cP7pb1uuTYyxtzDGcWTLuJ27NtCQwMKSJRjbk3bTs7gCaMhtxoNYbfb4eLiYhIs3oPQ
      AHzdnhCkrZ3O585YKpnMpWB+Df0Ya9Fa4xOriPiHwkKJKN+0hEOMUWRZdhJuStpCXdc+3JM0
      EtIOJPGnYzRu+cvXZ+y4b+I/6IWJQiFNEh+tZY1FLUJkJ0yIgUw8oWeV/095N3dxt78Jjwfd
      dsQ/GdgWkmex0mfCOcncEfKuHcAnbVHUTWgPXbpOagAcnAjzYxcXF0iSpJeNCxyZFF2X5zmu
      rq5QluVJ3Z4x0v3Q/6HQ1iH/wdgidef6Ia1nelEnjAWZSkPmTxLqrHW72q1WqydWUmXC3UDq
      iGi8Hn5jXM2eVIWJPhHUELE7mpWABBpWK19SgWLnh0xOsj2JkNZQVVWP+JM9niKBrq6uPNPZ
      7Xa9gnRyHLHyDfR9SOOR4xmbC8D7DIETdb6+/Jq7uifzhPsB/ixJ3x0dX61WWC6XfnvUCfcb
      qcJxH1wJf4MDBE5qAbGdvdw/x/OoCNxisfAbrIQeJB7xM+ZB42YjKtGslNvBq65raK19eWby
      FXDz0jmpXo4lxATk8ZDGNARyNsf6luOTiWOh8yZMGMLV1ZUr454kqKqqJxBprVG3DRLVfxe3
      2y2UUlOOwHsAZ72F2ciwQu48DREr/lkphdlsFmUAQyGTEkQA+cPIN2sncw9V56S2ZOw+1RKK
      MQRjDBrTIk2Sk43jpdQtNaQhBjZk+iLHu4RkvhzntuOcMIGglPJ+MOC4ux3XoBOt0bbmJDG0
      LMuJAbwHMBgFdBMVj0ukJ52IaprWWl/bPybZ8giasdsoytBPsvvL0DbZFzGkLMuCdfyttaAt
      DYy10KrfRihD2YLKXwybZOSajZHgqR+pdQHwdtspbG/CTaGU2+HO+wUoek+5nfwUNHQnsNV1
      HdwDe8L9go8CuknUSgw8Koh+i6LAfD5HlmVo2xabzabnTBpiMjHiT4SfS8plWfpQT34eJbVQ
      X1q7sEl+Pe03QJJQrL9Eaa8Oy3n7dmFRLOYo5gV0oqPRVYRo5NTAvZCaDP9VSnnNasKEm0Ip
      t8/ExcWFI/oKXWC3AsRzSeaiCfcX6W25OBEpeS0nXouF2x5yt9sFzSTn6ubEbOHWWl/SgZdf
      Nsb4sE7AqbQk/VNblDjF7ZohZnRi74fuMZzwmri/VHyOqpaO8WOEfCgxB/mQrwCAD2edVPQJ
      NwW9d1mWochd6XXTZfdLbbWqKhRF8RRHO+Fx4U1A52zVEq1pYaxFqrpr0b92sVj4Es5a615d
      /dCGMBJDx5Mk8T4EIobGGP9A1nXtH2Iq+6CUQmvNyUNM6ux2u+1V9aRx8vBXAIOaku1elM16
      48apNFQkworPRfbJHbrkzKb/CfI8CSqdvVgsJnPQhBtDKQWdJLDdu8SFH2IGTdP0SqlMuH84
      ywBCCSKOKGpoZdF0TkfuLKYtGGv28HACSv2dA3fm8rFQjZ6yLHvRCFyap1wD6st012qloLQ+
      YVic+A+tRwzWWqcoK6cqU/gsJWvFwkxln9KfwOcd+g4AWmNcCQ5WwI9vErNer5FlWS90bwrh
      m3AOWZZiu218YUgeFkrPT1VVJ+XSJ9wfnDiB+ecQ16cHger9GKWh0Hdmkr2ftzcmrj8EPgYu
      fW82TsrO87wXtUB79pKEQqBEtwcPHvhSzkO4KYHk0rux1hdqU0qhNY4JyHNjGdDnmM/JesJF
      2ramRaKToz9DAbu92zRmu936DWS01lgulxMTmDAI/hxyEyV/Tknrnp6l+4keA4iZZni0jXTM
      6oBUmqapj7Hn0oI0p5xDqP6O1EgoqYvX8gEQ3KSFPnPt4CaQY+AmGM+g3DfQSkMr5f9ykKQ/
      pHGNYQK8PdvdnzRL0ZoWu7XzjWRZhkRpn3xH91hrfSerPMbCcCc8HbTWuPpeMe2zbf3+GRPu
      H04YABCuuT9kOuB18rMs8+GX0sl7znl5U2itvQraNI2PYSYGJMcu53kTcA1EakN0HKBo0ZuZ
      t26jbXAopZDqxNdbkr6Mqq56ZSK01tjv9z47WumOUbGKp08DfI2HmOSEdwfOTKrgAoDC+2CQ
      FjAxgPuJ3l3jxI0TgxCxCxFV0g4o45aup3P435u+2KH9AmhcFLvPH1Iydchy07cpakXz4/2S
      L4QctaFrCLFoniGMkf75PdFaI0lT7A/HPAaq3tpaAzSN13zoXtV17TQhake5dpbzxbse3UFr
      TE57SlB60g5Gil+nOlQTg4mDAhisOd2y1YdGdxnEd1GbnHAePQ0gZqsPaQLyOq21T6SiUs/S
      REKf+bXy85DUR9/HylLTOJIkwXK5RNu2KIriZAOYc4j5QPh3SvVLXhOhijm5+fjOga8bN9nw
      /vm5SZKgKApcr1e98WVphrLqkuOS43j5y+uZmVJec1qv1zDGvGsvNSf+PGrr4cOHT5QBlGWJ
      9XqN1rrM1mJWTGWOB6A7/15Ia+aCIe0jEMujmXB3kQKniUX0WWIo7JAzi3NEThJUYy2MdZvQ
      E8E7ZwMfOkZExFqLy8tLT6yH2pTEnj/wsvQCnctDNOkYPy7ny9eImFjoe95eLBGOwxiD7W7r
      I3+01rDG4lAefDvGGFSmCtZ9Ukrh8vIS1rqqj7vdzpfOoD2TxzinbwNa66qqeozaWov1ev3E
      mEBZlthut05LdfmPOJQHVHWNB1dXkwkjAB9uvdufPNf0PNB7RdtHTsz0fiGVph4CEZ+YuYQT
      BCJmZIcPQTpiyaRSt8cyDa09EttQqWfet+2YBo0zJKWTmg8c4+YlMZG2/ZCETePhjCFkDhti
      AJKYh/qKrZtsi/4ul0ufZEdzIKcch1a6i0qy0En/XtB8SOrnGgxFV83nc286yvP8iZpOaE0p
      qovDGIP1eo2Li4vHItBE/CW00jCmxVuPHuHy8hJFl1w44YhFMcdhd1oeBeg/i1VVYblcvptD
      m/AEkBprvFQoiWPIhEMI7QlAGbASMcmRE11rLZSGl86GnKTWsq0QlUKe6B4TIFMLXUvjkkyF
      E/RzpTBiEUnSKRybb2z+NyE4nFHR/2maujLQ1vrchkQnaLs8BDL11E3tnHlAcO8H6VehdSrL
      ElVVeW3ncDggz3PM5/MnIplz/woHjY9MUg8ePLhVxnqM+FMfGhoGFqvVNer5HBfLi6m+TQd6
      j4qiGCwvQoLHVIPq/kFD3NOQ05fX9pFEiGNMhi9d25rWb2YOEKGPl5Xg3wEu8SxPM2QBkwkR
      L0oYo4eS2+1pvLyfEDE/WTDGVM75KmIMgTOeWBsUSUVrTpI9H39d195Zq7qADcA5wIuiODqs
      2U1Wql+ziWtA/N7L8dJ8Sdq7vr7GbrcbpcWcg4zYksyUzEFD/puQP6mqqijx5/0lWiPRCfaH
      Ax69/Wja9KQDPedZlg0KOPT8TOt2/3ASBcQ/0y8VWeOZtXTDYw9FSGrndvgkSWHRUJkpNKb1
      UShDROWkn0DIJT/OJf8kSU6Inpw3b1/6BThxipnG5HrEiP+QNCV/5RgB+JfSa0pKwyh3ftM2
      QOuuSZO0/2JanLTHzVxyrKG/hO12i8PhgPl8fqtkIC5ghNZK3kfajIQ7G6Upiz7TOhdFMVgR
      lqC1BqxC0zZ489FbuLq4nBKccNR88zz373yI2dIxWZBxwt1GyqX9ENEhFZAcddzEwp1A0sk6
      5MB0JRKAPM2O/bWAtae+B+kovSn2+z3yPMfl5SXquvZhoZxg0HyHJP8QwQ/Z/0NtyGu5xM3j
      qb1vI1AhlIMXvCPGRiYaUsfpep1ozNKZ3/eYYroJIYJPn8dI91ThtSxLLJfLGzsCecmQ2DPD
      x0T5C1VVIc9zH+5bVRXKsuyVIVkulyjLEkVRYDab+QJ9Ue1OKSidwliL1WaNqq5xefH+Ngkp
      pbBYLDCfz/2ztd1uPSPgTLyu68d6Vye8+0j5SxeyidPxNE2R57nXArhEHyLSQ8Qj5iS16DMX
      ImSP+wLy2Pf5fA5jTFRdlYSPP+BAX+Jsu/mHav2E5soZK41Hrh2Zewghkxxvk7Iw27aFVgqW
      3Y/uZDTcdGTDvoeYlC/XJSShEyNbr9eYz+ejasOQxHh9fX3C9EPgvhzKMicTFD2XSh3r1PN1
      pt3f6BmWuSGyn0QpaOsSnN569MgRwPexNsDpg9YaV1dX2O12vhIvfU/35f26TvcRPRMQN30Q
      ISAipZTyDkcAPUbBrx3jBPJ+BNcZAGcCUpJ4dXich4qbq6x1WbKLxeKEmcX6UcqZBVpiiO5b
      b1cnBhCD1Kr4d5yBynP5+vNzgGOhN/rLiR6/h2mSIklSVPWxZHZr2iDxl2OUfgx5vjyHvtvv
      95jNZmeZNjFh6pdXiw31yQUC+p9+ycwXMuvxtpqm8dFE554pYgTWWmy3G+x2O8fciuJ9qxFw
      LW0+n/c2TyLtYIzWOOHuwOcBSCIEAEVxTJThUrMkGNJuHnux5Pd141RGWBxNEzo5eXkf56GS
      2g1JjpQoxs0l0qRD17ZtR1iIaXHPuXJlplPVZwJcoj0XYcQx5jyys9Lf3p4H9th/mqY+F8Az
      AGuhtUVyhqGGpP3QfZUhuMD4OvEUZipLd4wFMUGuOZAJSCnVM/dwQeAmcIwg6Z6bLXb7HeaF
      YwTkU3o/MgSl1NmijxPuPoIMgDJLKZJkv9/36svIeHGOIQlORg5Q/RprrNcAqA1edG6sHyAk
      9UkTDn2mjGVJELjZy0u2sWdaKafBCLMKd6YOMUM5zpAkLkE29v1+30smM9ZAWVfqWsMxpbqp
      MctzlGXVC6sF+pvIn1vfmOknlp18zhRAmhiFsZ4L+aXnIbSGfL1msxmKokDTND4/gkeAEQPg
      gQZjNUvOCDbbDba7rSOATYNZUWA5X7zvaheF7slt6mxNeHrwO4JRVIm1FmmaeqfZZrPxDkbp
      LCbE/ACE0MtGJiVrLay2gDmNrLmpZOVs8kDCpPGY81ZqL9Lsws/TSiGbFUi0RtXUp0yj+1FQ
      J8Sf1kSadHjfwHEv33MSVNu2fjc0KnWxZRm0sBZQrjhcaw0ObJ9kawyg9XHfAvRDYWlMcp1C
      ZjH6DY15yL/Sti12u13PbCXXQl5Dc5XHpeRPvgdKAJTt82S+x5HaaTe5uqpg4TLPqQhhnmYn
      ey+8VxF6VicGcL+QAk6qXC6XJy8HOXnGlHbgn0NEQ4b6SQdiojS0vv0L4/r0LoWzY+W+jRjR
      pWOtNVjkOWazGS668W53W+w7EwaVfQ5dH/qf5xJw05RkTBKUmr/f7wXhtmRF62ty2q1pYzqf
      AY4EVfoeuMlLMkR+jTT38WABAv+OtyE1SZrTOfPPUBkPpZQvf0GmpLIsg1npoXnzv6FzJXr3
      qAtCNtbAtAZVW3m/0iyfuQzm93DBudC6TSag+4U0SRIfGbHb7bw332eYsuQu/vKEtAEi5rF6
      Qpw5yMzaMfbmIRhr0RrjN6qJgfqmUsjL5RKHw+EkMoT3nyYJ0jTthTgqrVF2YbG9cYxIhpMR
      QMBprgEfB1XxzPP8ZH/ltm2RZ8fIFmuP5rQUjtlkSeqdv8YYqIBpjTOkkBkqZp7hSLp1Ivt/
      WZbBSq18bkT8Q2a7IYZI2gQ38ZEUfk4K5aG3vD9jXWQXhSmnyWlIa4hpUC4KX8emqfHWo7cw
      L4r3bHbxxADuP1Ky+ZNaDjiTd1k7B1rKnLLn7NPeHm3CNXoIsZedjt1GYnIhkM68wU1WEvy7
      w+GAxWLRcwafvPBdjf311tWqadoGeZaLaKfTRC9pY+dzBMJVQ6VNnUu0ZKLj/SilThiXD6Vl
      5hndZbpq65zsWhA+kqLlGKUfIxRpROfP53Mfk08CxZgsXBof72MM85H9W2v9WvDSFZQnwa/n
      5qEes8VRkws95eeIG2emiXLrXZYV2vYaeeY0yPd60bmQRjjh7iKll6Gf5UtS0GkUzpDJhM6l
      46FNWWLZpvwzf4BCBCkEpZRjAoLYSqLK2yZbccwEYa0j/iQ5b7YbJNoRk9Vm7RhkkvraOqEs
      49gc5Vik1E9/KdmJkpvSNO0l5J2siSXTxOkerpwQSuma358Q0+ZzkmPN8xxZlnkNkqTxIfA+
      Yk7gIemfm81o7UmT40ly3HzE58ajtPh5SXdea+Jmqdg7wNeRP1N1VaOuahwOBzzzzDPvGW1A
      +lgm3D+knKAQEn0a1x4ixLGXIHRM2o/pHHkel6C5VNha452seqSWIAvWheYSK0JG16dw2+Ip
      5fb6VcagPJTORKATH63EtZ9zJgjJpHg0D18XHk1DIY0y1T60fqS1EEPkhJbbwYeIGM0lNHZa
      I6oMWhSFt+0PRVgNjZuu5UxqyDfAGRKvl8Q1IhorZxKS6XDGx79Lk1NJfYx5Q/pCAMC4MDEA
      zq+2WCzuPcG09hhSK4W7+z639xNSvysUTp1khJgEK88NEXmOczZk+b211m/eAQO0trP56nCp
      aM58zj2EnMAuFoue5MjPSZIE2mpftppMLLyvx4l84GsmiTKNkUu7YzazT7WGtc4cFAul5RIx
      HR9aM8mgyOmaJImvGMrHMLZwW+jY0DMYYpRD7UmNh2sVUkAgJsDNR7Fxx559oM+cnBbZhaMq
      5c155IO6r9qAjP+PhQRPuNtIQ3HwIXU/Zk+XRDfGAIZipEMvpzHGFYgDoHTiIlrsqZkkNJ4x
      DyERbUqion2FpXROUnOaJGjbY92jflw9Tr4fgxgD45D3Y0y2pYJCEiiRza+TxD8EaQ7iTGo+
      n/vAAQLfqW0MEw4hxgCAcMjqkBbDibg0y8XWWv5/bo3k8y7HaNGV525b6NQxzdXK7dy23+99
      Ib37xgiGQn0n3B+ks2KGtmlPyiIQQnbYmC049NLxYxKcoASdol1CE2cu8pwQbkJ4lFK+3rlk
      aBJJoNwANy88DvEHhjOGzxEi2S6XaIcIZWwsoXWgz3me43A4+FIUct6xJEHZDp3Dn4Mx8+Tj
      loyttQaJTnz4JZ976LmNrXlIs5BSbozJkObozCS19ygroFc+wRi3Ec5+v3/i21++07DWBsup
      THkA9wvpbrc/sRXHXghJFOSLwFVgfh39DoWHEnqEXmukVvkYd2BYk7gJqB8qFyzHx19mOU5p
      87/tDlkhxhgy1dxWqgo56c6ZNcaMeTabeYcvlV3gxJiv3xDj5/+HCLW8Ro5dhtwq5aJvlFIw
      1iBLsrPmJoIMCw0lJY65J1yDMcZttmQ6/1XMp9I0DdbrNS4vL+9NNvF8PvfhyTzaa9IA7hdS
      hbAUdEKY0D3cgUak5BxiFkA//p0zDf7LzQiq61ehz2R4H2OkzNBYSXKdzWa+IiVvX86HYz6f
      Y7fbBc1ft3kBYiaNse3FzBkxDY2fw01ZUkKW5h9at7ZteyWpZb+3Nf/I9eRMWc4zpoW6ZMLj
      LhF8DW+ynsTE+P+hsfKxSGFBKQUNQHdMaajvsixR17VLNrwHJagpRJmi1DabTU/Yuw9MbIKo
      BkogaYurdaarH2OshbJh8w/H0MMuw/74X2rvHLiqPXR8aIz0fZ7nJyGrJN1KKZqSwYquGFhV
      VSdRVOcgTRA03iFTTKwWzrnvQkR/aH1lDoMErdN8PkdZlj0zSIgAhnCOWZ5j7JIx0drw+lGx
      McTalZnqfP5D6yHNUJxJhq4N3Q/OQKqqwmq1wuXl5Z03CVEGtjEGy+XybN7HhLuHKAMAutA4
      25UZYC9H27bQgK8pE3qoeVshgkfncQZwG7iN4fWJZhJT7/lxkoB5NUr+vTQD8VBBeln5bmk3
      kS7pc8z2zcc8lhDwduW6cwYXKjHN+z43D6019vt98N6NZYS31ZaMMX4/aGfy0b2Cb1IwkeDa
      RUxo4eso+5ZzCDGzIcYR0ij5MWPcxipvv/02Li4u7nxNIXoGyC80aQD3C2nM9OMfXrhdpeg7
      UsvdTQ7H/kq1m0Oab25tKlDKJeu0QJoAcj9hTqyHUJYl8jz3Y5NEn7/EdGy9Xvs1yLIsaDOO
      QZqLJAPg59E8bsNYZFshc06szyForb3p59z9e1wiIJ3JIRORVdZn7xIxit0LzuCGNAyeSX5O
      G5Gg/um9kAIPn8e5ua9WKzx48OAkC/yugPZhIK0nTVNf5O+um7AmOPQYAFfnlXIROFDcoton
      HsZaZBHpPaRKcwxJQhLcR3EsWUB74SpXBVSfMiF6GaVNnz+wRVFgs9mcFGSj8yihiTMA4ChR
      r9frUXOQcw9J/6HzaC63kZa5CS92jNqn7yRz7jP8U0mXr+2QaSdGLOlYjGkBbhMba+FLWHQn
      AFDgEQJyHnJ+ri0Di+NzGzLHWGthYJHq5OSZCn2mZ4P8VzGHcWxM57BarVAUxZ3SBohRhnw0
      t3lWJzwdRAuTGMscw+KZI+I6lJHLzQxDtt4QYpIpPz/RCZLuu7bLFJabsnAmwIk32e/TNMXh
      cPBRPHy7QaWUd8gZY7Db7fzWgk8SMdswPy6JbohYhjQASdCHJOCYmUK2FZJsOULmlXMa0jlp
      0VgXfNAal1TV0wwsoOywKYo+121zIgicu+bcOGluPOQ2Np+YhsaPh0x3tA9vWZa+5tLTZgTk
      AAbO+5Um3F2kMVOAscbXwYkT+bBtWkpAMkFoSEIgycJVr9RQ2hWko7YI/LNWChZhuy79Lx3P
      2+22x6BkvDxVSTXGIMsyV9o3TbFer98RCScmkctzQmYca/vOcElwQ/cvZJqQ8Iy+0wAocurc
      /GNZ2rfVYhQcw7fWom36Gahd4ydrJhmesUffjVZqsGrs2FHydeYMMgYaYyjBTh6nNjebjb8P
      FC5KNncqxfG0iS8xwFBBwQl3G2ksakLBFcYyOJXciPhQss05CY+u4X+HzB4W8BUspSkp9JJ5
      1R1H4iPT+fncSILixdv4OK21vbLG9D3fNOcmiJnIeH/8+zFSKZ/POSd6jBmcs0lTH03T+M1W
      +EbgQ/OS3/F7eKOEOa2RQHcaQD9CSSvt6jENCCl+TPbI0NTAON2adKYza3qbC0lTzjkTHrUp
      i9ARbps0RYXvSHvlzICOU3DDOwXeNvVLe1VUVXVn/RYT+kiBuGrqpK++ZO2JjjA5hEwM/GWX
      6u0QkXO23lN12BfXYoRAVoU8R5istTgcDn7HM6UUdrvdiYmDagPleY6yKrGN239NAAAHz0lE
      QVTb7XEoD2i7FHitzkcu0bzOSYUhQizXRxIZufb0O2Sake3yMQ4xHjo+VNyNOwR5GzGNbCw0
      v8/ong3lqnVqPRyBxvvUSsNoi4TdN/4cUTtaa7e1ptAcYyYy2c85Bii/H6NNDc2tbVvs93tf
      gI/eB9oh7d00FymlfLVaKUBNuJtIQ8SH/ieCYrrtDgF4IskrhnLiS/+TLT1ktpDx2kBcGgpJ
      m7xN6gs41qLhURjUL+9vf9i7LOMkwbyY+4eWxpHnORaLBfb7PZqmwWqz7pV6sNae+EWCUM5+
      DdNGGUbopQ4RG7k+tCZjQ2hD58hCcdZazGYz5Hnu17WqKn8eD5Xl4Iw5lFEr1z/G9GLwRE1p
      v+7O7Bd3HnMbv++7adFYt2lQok7j9+nvWK1WIqStxoi/HG+IQcfmRpDvEGfQIXPRUJ7Nk2AS
      SilcXl7i+vr6ifvKJrwz8JvCA+EoDmc7VbBwf4Gj9D/0kvAXUZo4YtKsxLkXUL48/H9uE+eE
      rm5qtMYAlKYvbNp5nmO5XAKAJ4CWiP8Zdf90TgpadaWdTds5zvsSHV+fofkOMYqQWS20zlwb
      40xYEuosy3pVMekcYuqNaX2EjLy/MQ1Mrg0njLHaQVHzJGN8MemfJ4f5+SrtNs9U4bo+Y3GO
      oMv7ERqjvPdjxjH2veEwxpXn3mw2fktRMs9IZnMTgSIGpVyS5LmqtRPuBlJJFE4JjYI1bhtB
      p347/0DTtmjaBvNijqoqexuNh4j+GPQYStdP7NqQ9CaPcyZFDzZt7ZgkCUxr/BaLnGAaY/wG
      LO5/64n/GAJHSLR2obTAsZQGM1uEbMpSKh8DKXkTzq2dlNIWiwVms1lPeqRxknRJUneI6TyO
      NiLXNWSCCc2Trgvlb0gil2jttsvEaT+h8fBzJLMbElpONA9xPFQri9oM1VDy+0UwTfymRNpa
      67PWuQBATmTaHCnLssc2G1GRuJu8KxOeDlL+YMtyCM52qgDloj9a1SJNUjRtiyx3D4q1FmVV
      IUtTbxaSL498EWJlDYxxJaC9NKqcmYbatO4DLJxmolU8FJUTEKmpWOuiSUIEg3bd4tdQzgGA
      XmG6IZCkzAlRaF04o5KSdGxOdH6I4YZMCfx6yXRI4qf2qLyzJPK87g+Px5e1nThivo8xY+Xn
      9jRS4VOSWgIfS0jCTbrS4mMl9dBa0O/Q/ELrQdeFzHkhxiVDqduW7XmtxmsE8jx610nD5den
      aYrFYoH5fN6bc2g+MdAzQbkRE+4uvBM49JB4ImotmrbxJSF0kiDPcjRtg+1225lWGiT56c0O
      vYQxCdBaJ2mTtG2URd1JPpxQ+rY0oHQa7IfapL+00T1/mGNmlbIs+wQAR3uzojYBH00Sktot
      7KkJQ7AOKVmOkfqljV0S9KGwQFnegnbzohd/u90Ga9j0pHxmh+djugk4Ab2t6YXPmz9TkmgR
      uOTNHaX0f2wuss+baGaSIUkGMMQkgjkHsH6PDA0NaOXeFzb2ofUM9cX/KuWi5zabjY8wIrMf
      ZSSPhVJu85vFYjH6mgnvPlL5woSkUCL+znaaQEFht3eJUfQwZx1xlaD2hx5OeimISFoLKEUv
      QwsoRzrlyx5qk0tNslxw0zT+pY+FkoakcaUUYOHzIroroNTRDs37pGuoBa00WnuMWomtEe9b
      xorzc/VICZZL+XSczpnP5y7CqSz9do5SopYRVo8LKf2ShDj0XAyZXYaOS+bIfT0n95aB+z1C
      Yx8i/vxYSJuOMY/Yd73nETi570DfnwCEt0Hl6zPWz9Q0TW/LR8pGJmEhFuZJwlbTNGjbtqdJ
      TLh78AwgFm7WsB2oFJSPvqgqt9GFJlV1lGHkFPLFckTIOVCVAiOyfZ+ABXweQshuSu0tl0sf
      M00vU4wZhdR+aldrjQRgmajHdQvlGijtMpSt7RzASp0NHZVmAHqZQghpPLKdEPPgTGC32/Xq
      +kin8BDxvSlCpg/6/tyahEIx6RqpsfDriJjH+o71F9Ie5JqeM2/F2j2XoCfPp8/yPfXjhAja
      ENoMv6+hNThn2qHjlHvAx1EUBWaz2cn1tFmQUi7h8uLiItr+hKcLn80Rkk6MMT6DUinlbafW
      WmRJCiR9ojX0MktpnPcbsuvGJHvluAIQ6Iu3w23/RVHAWhusX0+QZoQQ4dVaI1FJj0gQA/Dm
      Mso47rKYJVGPYYxkGCP0XNIbIogEeplDpognRfyttd5PQ33KNeBrFjOH8DHHxjK0djEmSJ9D
      c+TjiZl9eN7D2PWR7ZxjftzpHeyns0OO8UWQ9vA4Rdr4eI1xVUubpsFyuew9P3yOUzTQ3YYP
      A42Zb1KdOCagnAMtltgl4WoJ0RZ9XQhe4AXgfYX+RvsaIfVmWeYfeNq9aOiF49IVLyTH2405
      sOX1fNyhGHgpjUl1fQj0IrbWQIvoK3kOMTMpTdIYzhGE2xKM1jjTXUiSDZlqJCEeMgsRbkJ8
      Jc5JvXLcfOz0P2UmJ8kxa12Okf7nz7Bsdwg96V+xSqfWnqxvaG3lvEKaTU9zDbx3vD1+LhVJ
      tNbtEU3m1cVicVbgmnA3oN58881xHq3H7WjgwYyddxOMkVZvKtHGmOK7gTFrFNIAzp1L391U
      u7gpeMji42AMQxyrFcSu4URtTH9j2gsdfyJtA91OeRYINHeT+3WTNRqD2Bq8W+/MhJvj/wNn
      TPrKY0pnngAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Shanka: Pareto Graph(20% of Zipcodes brings 80% of Price Genetrating Properties.)' width='384'>
      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
      FH7729/S3d2Nw+Hg6NGjQGTo48c//jElJSU0NTWxc+dOMjMzSUpKorCwcEyMo4SEBMrLy1m5
      ciWXLl3i6NGjtLW18eqrrxo5LbxeLxkZGaSlpZGfn4/L5WLPnj243W5+/etfY7fbOX78OA0N
      Dfzrv/4ruq6Tl5dHSkoKVquVoqIiIzZXfX09r732GvPnz0dRFP793//dyB/xH//xH7S3txt2
      RG3ds2cP165dw2Kx8Oabb5KZmWl8l9F4Rzt37jTyJ/z0pz8lKSmJhIQECgsLSUhIACLRj5ub
      m6mrq+Mb3/gGgUCA3/3ud6iqyquvvkpGRgYNDQ3s3buX3/zmN3R0dFBWVobL5eKnP/0p8+fP
      59ChQ8IBCAQPi40bNzJt2jSeeeYZFEXhxIkTPPHEE8YwTn9/P5mZmaxatYqtW7dy+fJlKisr
      yc3NZeHChXc9ZyAQwOPx8Pjjj/Pcc89x6dIlKioqyMzMZMWKFQA0NDRw4MABPB4PgUDgjnNo
      msavfvUrfvKTn/DSSy/dU/9Vq1axfv164/+pU6eyceNGpk+fPibtIcDixYtZt24ddrudnp4e
      8vLy2LBhA6WlpUYZk8nE97//fV544QWOHj3KG2+8cdfrFhYW8gdIhuMqAAAEx0lEQVR/8AcU
      FBRQXV3N3Llzjet5PB4A1q9fz7PPPktdXR3l5eVkZWUZYY3vVmejE/k8+uijnDx5kmPHjmG3
      25k+fTolJSV31HlRUZFhr8fjoaenh6effpr169czffp00tPTWb58OdnZ2QBcvHiRzZs3s2TJ
      EubMmUNraytPPfUUTz/9NE1NTXe1VZIkNm3axKOPPkooFGLmzJlG6Ppo8qSGhga2bdvGxo0b
      8Xq9ZGdnk5GRweLFi40EP+FwmJdffpm/+qu/MpxCFLvdzmOPPcbWrVtpbm6mtraWP/mTP2HV
      qlUoikJhYSHLly9n06ZNwgEIBA+L6BDD2bNn2bZtG5qmkZycbIzLZmRk0N3dTU9PDzU1Ncaw
      z6dhs9mQZZmmpibOnTvH1KlTMZlM9Pf3093dbUQ4/c53vnPPqKUmk4kf/ehHrF+/nnfeecfI
      vdvZ2Ulzc/MD252ZmUlbWxsHDhygtrbWkHu9Xvbu3Ut6ejrz5s2LJCCRZRwOB9euXbuvyVe7
      3U4gEKCjo4Nz585RXFx8z7ItLS0cOHCA8+fPj2ncU1JS+Od//meysrI4efIkNpuN5uZmBgcH
      73muaKKXTz75hNbWVmOitampyUhQM23aNE6fPk1/fz8Oh8N467506RJZWVnIskxvby+tra0M
      DAzc9TqyLBtRT6MT7IWFhVy4cIGWlhYkSbprVrrXX3+dwsJCbDYbHR0dYyZ/VVXF5XJx9OhR
      pk2bRmlpKceOHcPpdGKxWHA4HLhcLmpqaiZOOOjU1NRYqyIQ0NHRgd1up7KykvT0dHbu3Mkf
      //Efk5mZiclkoqioiP/6r/8iLS2NP/qjPwIiQzTl5eVjzjMwMMD8+fOxWq3MmDGD1157jb6+
      Pl544QXS09Pxer3s2bOHTZs2UVdXx4ULFygrK6OqqopwOExFRYUxXjw4OMjcuXNZvXo1DQ0N
      pKamkpKSwv79+8nPz2f27NmkpaWRm5tLdnY2w8PDzJs3D5/Px9y5c3G73Ua8/szMTNLT00lO
      TjbSZy5fvpx58+Zx8+ZNBgcHmTFjhtETuHjxIgcOHECSJP70T/+UnJwcDhw4gNvtZsaMGcyf
      P9/IYzw0NMSsWbPQNI3U1FQKCwuRZZmysjJ+/etfEwqF+LM/+zPMZjPBYJDZs2cb9eVyuait
      rUXXdf76r/+azMxMPB4PRUVFdHV18dprryHLMtu3bzdyWVy4cIFly5YZ9RUIBJg9ezYej4eS
      khJWrlzJ7t27qa2tZcWKFWRlZfH2228zdepUcnJyKCoqwuVy8e6775KTk8MTTzzB66+/TlNT
      Ey+++CL5+fmcP3+ehoYGZsyYwaJFi/D7/UZKSV3XmTNnDqFQiN27d7N06VISEhKoqKjg8OHD
      nDhxgueff57c3FyGhoaYPXs2VqvVqFe3201dXR3Nzc1UVVXh9/uZPXs2v/vd72hubiYrK4s/
      /MM/pKqqiiNHjnDy5ElWrFhBUVERr7zySmQITYSDFggED0IgEOAnP/kJAA6Hg5/97Gdxk4t4
      sqEoCi+88AKvvPLKfZUXDkAgEDwQuq7j8Xhwu91kZGQYPQ/BV4+u6/T09Nx30iuxDFQgEDwQ
      kiSRkpJiZJoSxA5Jkj5XxkMxCSwQCASTlP8PQOyh1niDiIMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Tanvir: Number of Reviews vs Rating Score Correlation' width='384'>
      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
      Osh7Nv4/q4EB0MrSrQMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Tanvir: Sheet 7' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Vrinda: Review Score Rating vs price' width='384'>
      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
      O++8k5iYGADa2tp48803kWWZCy+8EJ/Pp977iiuuICEhgc8++4zu7m5sNhterxeTyURNTQ0L
      Fy7k9ddfx+fzMXHiRH70ox+pbdq0aRPbt2/H4/Fw6aWXUlRURG5uLl6vl5/+9KdUV1eTlJSE
      0+nktddew+v1kpSUxPTp03nvvffQaDR0d3dz3333YTKZAFi7di179+7F4/Fw9dVXq/dSFIUP
      P/yQ6upq9Ho9N910E1999RX19fW0t7czfvx4fvKTn7Blyxby8vLQ6/WcccYZnH322fj9fnJy
      cli4cCGff/45er2eefPmkZOTw6WXXkp1dTXp6el8+umnABQUFLBgwQL27dvH888/T1tbG3ff
      fTc2m01t95YtW7BarVxzzTWqjMuXL+enP/0pDoeDzZs3M3v2bF5++WU0Gg2ZmZkkJSWxZs0a
      6uvrmTRpElFRUaxatQpZlrn++uupqqrC4/GQm5vLDTfcQF1dHSkpKWzYsIE9e/bgcrmIjIzk
      hhtuoKamhvfffx+9Xk9YWBjXX389AB9++CELFiygurqaVatWsXjxYr7++muysrJYvXo1jY2N
      KIrCbbfdRmFhIatXr1bfqVGjRgHw5ZdfMmvWLIKCglixYgU/+tGPeO2119BqtUydOpWZM2fy
      1ltv0dnZid1u5+qrr6a2tpacnBx0Op1acjXQefLJJ3G5XKxevZo33niDW2+9laKiIiIiIvqt
      ADZu3EhdXR2HDh2iqKgIgG3btpGVlUVlZaW6ghQMnNNOARQVFeF2u1m7di033HADH3zwAf/z
      P/9Dd3c3H3zwAbfeeiu33XYbDoeDV199lTlz5nDgwAGio6O5/fbb+de//sUVV1xBXFwcGo2G
      N998k8suu4yEhASefvpppk+fjsfj4d5776WgoIA9e/aoCuCDDz7gsssuIyYmBr/fzzPPPMPd
      d9+Noig899xz3HvvvXz88cfcfvvtTJ06lYcffpgZM2awaNEiVq5cyaxZs8jIyOC5555jxowZ
      apuys7PJysqiurqar776ijvuuIPCwkLuuOMOJEli5cqV+Hw+1q1bx8yZMznjjDP45z//SXl5
      OZGRkVx77bW8++67NDU1kZCQAMCMGTOYOnUqBw8eZO3atUybNg3orfPc3t7O3XffzbZt21i7
      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
      UBSFFqeXr0raWVPacXqlgjgWh6dNgKOH+vt8Pnbs2MEvf/lLrFar6i1zrOPhm6Cpo92ntraW
      rq6uI84dyArm8HMURVGjIr9NY2NjPzfMw/3yjybz0X5XXFx81N8fLueKFStobW39Xrm/fd6x
      fne0+61bt46QkBCMRiPPPvssDofjmMcezve1+WQZSIqK4+X1119Xr/ntGXOgpaEQjBx6vH62
      VnWx8kArLU4vU+Otp18k8LfZunUrmzdvRpZlZs2aRXBwsJoeYdasWcyaNQvo9fYoKirin//8
      J9dffz379u0jNTWVJ598ErPZTHNzM3fccQcJCQm8++67NDQ0UFVVxc033wz0zkT77pOdnY2i
      KLz33ntYLBYMBgM///nPeeutt+jq6kKr1XLnnXciSRKKovD222+r6QfmzJnDv/71L7RaLZmZ
      mcydO1dty+rVq9m7dy89PT1cdtllrFmzhoKCAurq6rj55pspKSlh1KhRtLS08MYbb2A0Grny
      yitpaGjg66+/xmAw4Pf7uf/++9VBp7q6mueee4729nZuvPFGEhMTefPNN1U5L7jgAtasWUNF
      RQXp6ek0NDRw8803s379eqqqqrj++uvJyclh/vz5agyEz+dj8eLFaDQaXn31VSRJIjIykssv
      v5ynn34ag8FAc3MzixYtIi0tDejdqkhNTcVut1NSUqLGkbz22mvodDpmzJihBopNmTKFzZs3
      ExoaSmlpKaNGjaKxsZH33nsPgPPPPx+Xy4XZbCYzM5Pf/e53PPjgg3g8Hvbs2cP5558PwDvv
      vENdXR1Go5HbbruNVatWUVxcTEhICDfffDOrVq1i3759eL1ebrvtNg4cOADA+vXrufPOO1m9
      ejXNzc0A3H777Wr/5uTkqFuboaGhqs/+9ddfT0NDA5s2bcLr9TJz5kwOHTpESkoKu3btOuIZ
      lZaWkpOTg8ViwWazsWjRoiH4YgQjDVlWONjSw66ablx+mbHhJs6ItWI2aIUCmDZtGnl5eSxe
      vBiAf/zjH+os/69//StnnXUWGo2G+fPnU11dzeLFi9UIZ0VRsFqt3HXXXezdu5fCwkK8Xi9+
      v5977rmHVatWqffJzMwkKytLvc/KlSu57LLLyMzM5JlnnqG8vBxJkrj11ltZsWIFJSUl6uD3
      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
    </thumbnail>
    <thumbnail height='384' name='Vrinda: no of reviews vs price' width='384'>
      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
      N2Ao/HUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Vrinda: price vs beds' width='384'>
      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
      vXs3JpOJeDzO0NAQBw4cwGAwpB23sLCQ3t5e5ufnaWtrw2Qy0d3djVKppKmpCZ1OR09Pj3wL
      Kl2BQIAvv/wSl8tFe3s7RqOR/v5+lpeXefXVVzEajXR1dQGk1XapVIq+vj78fj92u53KykpC
      oRC3bt3ilVdeobKyEovFwvT0NCdOnGDPnj1p59zo6ChLS0usrKyg1WoZGxvD6/XidDopLy8n
      mUwyPDzM4cOHMZvNjI2NYbPZOHHixGP37dnZWaampvD5fHJhdblc2Gw2zGYzPp+P0dFRmpub
      MZvN3Lx5M62cm56eZnp6Wr6VZLFYmJqaIhqNcvjwYdRqNf39/ezdu5eampq0c87hcDA0NCQ/
      qD569CjV1dXk5eXR0NBAYWEh3d3d5Ofns2/fPmKxGENDQzQ1NT0254LBID09PYRCITweD3q9
      nt7eXqxWK8ePH6eqqoq+vj58Ph8tLS1p55x4D0AQBGGH2ra3gARBEITMEgVAEARhhxIFQBAE
      YYcSBUAQBGGHEgVAEARhhxIFQBAEYYcSBUAQHqOvr09+7T5d4XCYvr4+BgcHvzGA2Pj4OB6P
      53muoiA8NVEABOERPB4PZ8+e5d///jeSJLG6ugogD8uwtraG3W7/xkF+eXmZjz76CIvFwq9/
      /WtisRiBQICVlRV5iIJEIsHc3ByBQIB4PI7FYnmqkVMF4VlsyxnBBGE76O/v5+233+aLL74g
      lUrxu9/9jt///vd8+OGHvPvuu/z5z3+mtrYWpVLJz3/+802f3b17N2+88QbXrl1jcnKSv/zl
      L5jNZkpKStDpdJw9exa9Xs/+/fvp6+vDZDIxPT3NBx988NznJxaERxFXAILwCNevX2dqagq7
      3Y7NZqO2tpbBwUHy8vKYmZnhrbfe4kc/+tFDBzQbGRnhD3/4Az/+8Y+RJInGxkZ+9atfkUql
      kCQJl8vF+++/T1tbG5OTk/j9flZWVsRVgPBCiSsAQXiIcDhMPB7nnXfeobGxkRs3bvD666/z
      29/+lvfffx+j0cgf//hHqqqqyMnJob+/n/z8fBobG4F7w/T+8pe/BGB4eJjy8vJNY/Wo1Wqu
      Xr1KaWkp5eXl7N+/n6qqqi2PeSUIz0KMBSQIDxEIBFheXsZsNhOLxbBardTV1fHFF1/Q0dFB
      NBplbm6O6elp/H4/p0+fJicnh9LSUsLhMHa7XR6Pfn19nWAwiNFoZH5+nqKiInkwwrq6Onbt
      2sXAwADl5eUcOHAgo5OSC8L9RAEQhKfg8Xj45JNPUCgUvP3221sa5lkQtgtRAARBEHYo8RBY
      EARhh/ofj6BWGGt4DmsAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
